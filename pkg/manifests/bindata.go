// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (788B)
// assets/router/deployment.yaml (2.206kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.441kB)
// manifests/00-custom-resource-definition-internal.yaml (6.371kB)
// manifests/00-custom-resource-definition.yaml (46.12kB)
// manifests/00-ingress-credentials-request.yaml (1.464kB)
// manifests/00-namespace.yaml (266B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (237B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (305B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (511B)
// manifests/01-cluster-role-binding.yaml (369B)
// manifests/01-role-binding.yaml (367B)
// manifests/01-role.yaml (477B)
// manifests/01-service-account.yaml (196B)
// manifests/01-service.yaml (344B)
// manifests/01-trusted-ca-configmap.yaml (323B)
// manifests/02-deployment.yaml (2.995kB)
// manifests/03-cluster-operator.yaml (357B)
// manifests/image-references (433B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x22\x37\xdb\xc1\x6d\x07\xaf\x37\xdc\x76\x43\x51\x74\xa7\x65\xa6\x66\xed\x88\x02\x49\x39\x6d\x7f\x7d\x61\x3b\x29\x82\x24\x45\x9b\xcd\xcf\x22\xbf\x47\x3e\xe9\x17\xfc\x1d\x8b\x39\x29\x58\x94\x4c\x1d\xa8\x8c\x04\x3b\x51\x50\x29\x4e\x6a\x35\x3c\xf6\x6c\x60\xbd\x94\xb1\x83\x96\x00\x0d\x94\xcc\x95\xa3\xf3\xb4\xc8\x2c\x66\xdc\x8e\x54\x87\x81\x53\xd7\x9c\x88\x0f\x32\x52\xc0\xcc\x4f\xa4\xc6\x92\x1a\xd0\x16\x63\x8d\xc5\x7b\x51\x7e\x47\x67\x49\xf5\xf0\xc7\x6a\x96\xed\xf4\x3b\xec\xc9\xb1\x43\xc7\x26\x00\x24\xdc\x53\x03\x92\x29\x59\xcf\x3b\xaf\x38\x3d\x2b\x99\x55\xeb\x48\x41\xcb\x48\xd6\x84\x0a\x30\xf3\x3f\x95\x92\x6d\x6e\xaa\x60\xb3\x09\x30\xcf\x26\x45\x23\x1d\xff\x51\xea\xb2\x70\x72\x5b\xd4\x0c\xb6\x8c\x91\x56\x69\xa4\x13\xaf\x62\x22\x6d\x8f\x2d\x23\x9b\x2f\x1f\x07\xf4\xd8\x87\x6b\x9f\x79\x05\x4a\xce\xf1\x7c\x87\x6b\x6b\x97\x81\x92\xd2\xc4\x74\xb8\x70\x88\x4a\xe8\xf4\x05\xf9\x32\x9c\x6b\xb0\x95\xf6\x85\xa2\x63\x8c\x64\x76\x9f\xc1\x92\x60\xfd\x99\xec\x4d\xfc\x52\x73\x6f\x26\x3f\x07\x6f\xcd\xd1\xcb\x05\xbf\xe4\xee\xf6\xc0\x46\xb1\x28\xfb\xdb\x37\xe8\x53\x59\x94\xe4\xf4\xea\x51\x92\xb9\xe2\xf1\xde\xcf\x7d\x8c\xce\x9a\xff\xcf\xcf\x61\x3d\xe8\xc5\x3c\x91\x1f\x44\x87\xf0\x11\x00\x00\xff\xff\xad\x45\xb2\xc3\x14\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 788, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xc4, 0x4e, 0xa2, 0x9d, 0x1b, 0xd7, 0x35, 0xbf, 0x95, 0x95, 0xb4, 0x17, 0x87, 0x56, 0xb, 0x12, 0xf, 0xb6, 0x3e, 0x51, 0xe5, 0x5a, 0xd0, 0x66, 0x3a, 0x4d, 0x36, 0xc9, 0x93, 0x90, 0xb2}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x92\xda\x38\x10\xbd\xf3\x15\x5d\xe1\xec\x98\x24\xb3\x53\xbb\xbe\x51\xe0\xd9\xa5\x2a\x80\x0b\x9c\x5c\x29\x8d\xdc\x80\x6a\x64\x49\xdb\xdd\x26\xc5\x7e\xfd\x96\x0d\x33\xd8\x8e\x67\x32\x7b\x58\x9f\x54\xea\xd7\xaf\x5f\xcb\x4f\xea\x31\xcc\x31\x58\x7f\x2e\xd1\x09\xfc\x30\x72\x84\x02\xf7\xaa\xb2\x02\x27\x65\x2b\xe4\xd1\x18\x16\xee\x40\xc8\x0c\x33\xef\x84\xbc\xb5\x48\xc0\x01\xb5\xd9\x1b\x7d\x05\x81\x22\x04\x15\x82\x35\x58\x80\x12\xa0\xca\x89\x29\xf1\xe3\xe8\xc9\xb8\x22\x69\x55\x18\xa9\x60\xbe\x23\xb1\xf1\x2e\xa9\x13\x38\x3e\x7d\x1a\x8d\xc1\xa9\x12\x41\xb9\xa2\x59\x70\x50\x1a\x1b\x46\x46\xe9\xb0\xd5\x55\x93\x11\x40\x20\xdf\x28\x9a\xa3\x2a\xac\x71\xb8\x45\xed\x5d\xc1\x09\xdc\x4f\x26\x23\x00\xc1\x32\x58\x25\x58\x43\x01\x9e\x93\x9a\x35\xd2\xc9\x68\x9c\x6a\xed\x2b\x27\x2b\x55\x62\x02\xe4\x2b\x41\xba\x02\xc6\xe0\x7c\x81\x5b\xb4\xa8\xc5\x13\x18\xfe\x49\xc3\x05\x17\xc8\x78\x32\x72\x9e\x59\xc5\x7c\xe1\xe1\x33\x0b\x96\x91\xb6\x15\x0b\x52\xa4\xc9\x88\xd1\xca\x5e\x13\xb4\x77\xa2\x8c\x43\xe2\x67\x2d\x00\x51\xd3\x6e\x4f\xc1\x45\x85\x29\xd5\x01\x5f\x2f\x5f\x7f\x0d\x24\xab\xac\xcd\xbc\x35\xfa\x9c\xc0\x62\xbf\xf2\x92\x11\x72\x7d\xce\x37\x9c\x20\x95\xc6\x29\x31\xde\x2d\x91\xb9\x4e\xba\x26\x3c\x28\x6b\x1f\x95\x7e\xca\xfd\x57\x7f\xe0\xb5\x4b\x89\x7c\x5b\x46\xf0\x24\x2d\xb9\x37\xc1\x47\x91\xd0\xda\x6e\x75\x97\x79\x92\x04\x7e\x9f\x74\xa2\x81\xbc\x78\xed\x6d\x02\xf9\x2c\x7b\x85\x8e\xdf\xe2\xbb\xbb\xfb\xf2\x9f\x08\x4b\x14\x32\xfa\x4d\xca\x4f\x7f\x7c\xb9\x7f\x17\xe7\x18\x96\x48\x87\x9e\xad\x6f\x61\x74\xa7\xa4\x83\x66\x51\xc2\x50\x31\xd2\x8b\xa9\x83\x62\xfe\xe1\xa9\x68\x3c\x7d\x40\x87\xa4\xa4\x43\x38\xd0\xc2\x36\x9f\xe6\xdb\x5d\xb6\xde\xe4\x1d\x95\xcd\x75\x4b\xe0\x43\x2d\xff\xc3\x40\xda\x66\xfd\x2d\x4f\x37\xbb\x6d\xba\xf9\xbe\x98\xa5\xbb\xd5\x74\x99\x6e\xb3\xe9\x2c\x1d\x22\xf1\x01\x1d\x1f\xcd\x5e\x22\x73\xb9\xe0\x03\x7c\xf3\xf4\x61\xfa\xed\x6b\xbe\x9b\xa5\x9b\x7c\xf1\xb0\x98\x4d\xf3\x74\x37\x5f\x6c\x86\xe8\x62\x14\x1d\x87\x27\x13\x8b\xe5\x38\x90\x39\x29\x19\x6a\xec\x99\x71\x9e\x6e\xf3\xc5\x6a\x9a\x2f\xd6\xab\xdd\x6c\xba\xcb\xa6\xf9\x5f\x83\xac\x27\x45\x31\x55\x2e\xd6\xde\xed\xcd\xa1\x54\x81\xe3\xeb\x2d\x8e\xb4\x6a\x2d\x3f\x6a\x6a\xbb\xde\x9a\x13\x3a\x64\xce\xc8\x3f\x62\xd2\x61\x36\xce\x88\x51\x76\x8e\x56\x9d\x5f\x5e\x8e\x4f\x5d\xcb\xd6\x96\xfc\x13\xa5\x9b\x08\x10\x94\x1c\x13\x88\x8f\xa8\xac\x1c\xff\xe9\x07\x87\x8c\x45\xa8\x0a\xf3\x7f\x0b\x89\xeb\x2a\xe7\xf7\xc9\x61\x5f\x91\x46\xee\x12\x12\xfe\x5d\x21\x0b\xf7\xcb\xe8\x50\xd5\x8a\x26\x65\x6f\xbf\xc4\xd2\xd3\x39\x81\xcf\xbf\xdd\x2f\x4d\x2b\x76\xf2\xb6\x2a\x71\x59\x3f\xae\xbd\x87\xa3\xac\xf7\xb2\x8b\xea\xb7\x8d\x02\x57\xa3\x5c\xc7\x50\xa4\x91\xa4\x1e\x35\x7d\x54\xdd\xf3\xda\xd9\x73\x02\x42\x15\xbe\x5a\xec\x4d\xff\x0c\x94\xbd\x05\xa3\xc7\xca\x15\xf6\x1d\x45\x2f\x5d\xbf\x34\x1c\xbd\xa3\x01\x46\x4d\xdd\xbf\x7a\x45\x2f\x7d\x81\x09\xdc\x7d\x9e\x74\x1e\x95\x6d\x03\xaf\xe7\x4c\x77\x26\x44\xed\xe7\x28\xfa\x65\x07\x97\x33\x58\xaa\xd0\x2e\x6c\x04\xcb\xde\xcf\x7a\xc2\x73\x9b\xa6\x77\xb5\x9e\xdd\xf7\x2a\xe0\xd7\x07\xe9\x43\x3d\x8e\x94\x4d\x60\xaf\x2c\xdf\x22\x3f\x1d\xc2\xbf\x01\x00\x00\xff\xff\x88\x0a\x20\xee\x9e\x08\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 2206, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x3, 0xe, 0x6e, 0xda, 0xa5, 0x5c, 0x83, 0x5c, 0x1d, 0x96, 0x75, 0xdb, 0x87, 0xf7, 0x77, 0xaa, 0x9c, 0xdc, 0x43, 0x33, 0xaf, 0x54, 0x72, 0x19, 0xf1, 0x6e, 0x81, 0xc, 0x46, 0x47, 0x66}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\xcf\x8e\xdb\x38\x0c\xc6\xef\x7e\x0a\x61\x72\x5b\x20\x0e\xf6\xb6\xc8\x6d\xb1\x0b\xf4\xd4\x0e\x50\x14\xbd\x2b\x12\x1d\xb3\x91\x45\x81\xa4\x92\xa6\x4f\x5f\xf8\xdf\x64\x26\xf1\xc4\x6e\x3b\xed\x29\x16\x4d\x7d\xfc\x49\xfc\x24\x67\x65\xfe\x0b\x59\x14\xd8\x30\x05\x30\x15\xb1\xd1\x1a\x0c\x25\x60\xab\xc4\x06\x55\x20\x54\x65\xb1\x32\x9f\x1e\xff\x7f\xdc\x9a\x7f\x4d\x20\x35\x54\xb5\x59\x02\x46\x6a\xca\xc1\x9b\x1d\x18\x86\x14\xac\x03\x6f\x76\xe7\x4e\x4a\x0c\xc6\x4e\x2a\xda\x06\x24\x59\x07\xd2\xa9\x9f\x6a\x74\x75\xb1\x7a\x59\xc5\x3a\xcd\x36\x84\xb3\x89\x00\x5e\x8c\x75\x0e\x44\xca\xe2\x80\xd1\x6f\x47\xc0\x8f\x14\xa0\xb0\x09\x3f\x03\x0b\x52\xdc\x1a\xde\x59\x57\xda\xac\x35\x31\x7e\xb3\x8a\x14\xcb\xc3\x3f\x52\x22\x6d\x8e\x7f\x17\x0d\xa8\xf5\x56\xed\xb6\x30\x1d\xc1\xb6\x2d\x16\xa5\xc6\x4a\xd7\x18\xf7\x0c\x22\xeb\xb1\x7c\xc1\x39\x80\x6c\x8b\xb5\xb1\x09\xdf\x31\xe5\x24\xed\xb4\xb5\x79\x78\x28\x8c\x61\x10\xca\xec\x60\x88\x39\x8a\x15\xee\x1b\x9b\xa4\x1b\x5e\x56\xd7\x0d\x05\xf8\x88\x0e\xac\x73\x94\xa3\xf6\x31\x88\x3e\x11\x8e\xa3\x21\x63\x1c\x38\x86\xe1\x45\x22\x3f\xe4\x1f\xa1\x4f\x3e\x02\xef\x46\x92\xbf\x1e\x8a\x5b\x3e\x9b\x3a\x8a\x2b\x42\x0f\x29\xd0\xb9\x59\x2a\x92\x28\xa0\x3b\xdf\xca\x24\xf2\x1e\x85\x73\x6a\x77\x76\x97\xfd\x1e\x96\xe9\x35\x14\x51\x89\x31\xee\x4b\x47\x0c\x24\xa5\xa3\xe6\x56\x7e\xd8\x87\x21\xfb\x4a\xd9\x31\x58\x85\xee\x71\x0f\xda\xfd\xe6\xe4\xdb\xd0\x6d\xbd\x57\x6d\x30\xd1\xbb\xde\x49\x9d\x3d\xaf\x03\x3b\x8c\x1e\xe3\xbe\x8f\x5f\x32\xae\x5e\xdd\x67\x0c\x28\xfd\xc3\xc9\xaa\xab\x27\x58\x47\xc7\x95\x4f\x66\x9c\xe4\x1c\x0c\xea\x28\x2a\x53\x08\xc0\xf2\x4a\x78\x23\x6a\x35\x2f\x6a\xcb\x30\xb9\x5c\x88\xe0\xa3\x30\x38\xe2\xc1\x93\x97\xe1\x0f\x94\xec\x8f\xca\xec\x5a\x2b\xb6\xa2\x9c\x9d\x66\x86\x17\x0b\x85\xa7\xda\xc3\x93\x4d\xd8\xda\x66\xdc\x8f\x08\x7a\x22\x3e\x5c\xb1\xb4\xcd\xf8\x49\x96\x4b\xa5\x39\xaa\x67\xf5\x66\x9b\xbe\xa8\xf4\xe0\xc4\xb1\x3b\xf7\xbd\xf6\x46\x35\x26\x5b\x39\x9e\xb3\x95\x79\x8f\xcc\xc4\xe0\x4d\xc5\xd4\x18\x2b\x02\x2a\x1b\xa6\xac\xc0\x9b\x06\x94\xd1\xc9\x66\x90\x5c\xb7\xc7\xa4\x3c\xdb\x26\x4c\x9c\xcf\x76\xc6\x0c\x59\xaf\x2a\xa3\xec\x44\x43\xef\xe3\x2c\xc0\x68\x6f\x08\x88\x8a\xee\xfe\x15\xa1\x74\x80\xc8\x70\x44\x38\x4d\xf7\xe0\x6d\x48\xe6\xef\x2a\xc9\xbb\x2f\xe0\xb4\xff\x14\xfe\x5e\xa0\xc5\x1d\x9a\x71\xfe\x1f\x04\xf9\x05\xeb\x2e\xe0\x10\x70\x99\x51\xcf\x33\x28\x63\x5a\x7b\x21\xc3\x57\x75\x14\x45\xd9\xe2\xcd\x77\x37\x0b\x3c\x9b\xfc\xa1\xfd\xc7\xd0\xbf\xa8\x49\x74\xb8\xc4\x8a\xef\x01\x00\x00\xff\xff\x8c\x57\x39\x8e\x89\x09\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2441, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0xd6, 0xda, 0xe, 0x3d, 0x67, 0xbd, 0x76, 0xc2, 0x7f, 0xc0, 0x77, 0x94, 0xe6, 0xe9, 0x82, 0xe9, 0x79, 0x8b, 0x23, 0xef, 0x9a, 0xed, 0xe3, 0x32, 0x4e, 0xaf, 0x81, 0xd9, 0xcb, 0xbf, 0xe6}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x6f\xdc\xc6\x11\x7f\xd7\xa7\x18\x9c\x1f\xf2\xa2\xe3\x45\x71\x5b\x14\x07\x14\x85\x21\xc7\x81\x50\xc7\x35\x2c\xd5\x01\x6a\x0b\xc8\x1e\x77\xc8\x9b\x98\xdc\x65\x76\x96\xa7\x9c\x8a\x7e\xf7\x62\x76\x97\x3c\xf2\x8e\x3c\x09\x75\xb2\x4f\xba\xe1\x70\xfe\xfc\xe6\xef\x52\xaa\xa1\x8f\xe8\x98\xac\x59\x83\x6a\x08\x7f\xf3\x68\xe4\x17\x67\x5f\xfe\xca\x19\xd9\xd5\xee\x6a\x83\x5e\x5d\x5d\x7c\x21\xa3\xd7\x70\xdd\xb2\xb7\xf5\x07\x64\xdb\xba\x1c\x5f\x63\x41\x86\x3c\x59\x73\x51\xa3\x57\x5a\x79\xb5\xbe\x00\x30\xaa\xc6\x35\x68\xc3\x0e\x73\xeb\x34\x67\x64\x4a\x87\xcc\x99\x6d\xd0\x29\x6f\x9d\xfc\x61\x78\x4b\x85\xcf\xc8\x5e\x70\x83\xb9\xbc\x56\x3a\xdb\x36\x6b\x38\xcf\x1c\xa5\xb3\xf0\x03\x44\x9b\x5e\xbf\xbb\xfd\x10\x14\x05\x5a\x45\xec\xff\x31\xa6\xbf\x25\xf6\xe1\x59\x53\xb5\x4e\x55\x43\xd3\x02\x99\xc9\x94\x6d\xa5\xdc\xe0\xc1\x05\x00\xe7\xb6\xc1\x35\x2c\x16\x17\x00\x8d\x43\x46\xb7\xc3\x7f\x99\x2f\xc6\x3e\x98\x37\x84\x95\xe6\x35\x14\xaa\x62\x14\xd6\x76\xe3\x12\x24\xc9\x32\xf6\xca\xb7\xbc\x86\xff\xfc\xf7\x02\x60\xa7\x2a\xd2\x4a\x60\x8a\x0f\xc5\xa1\x57\xef\x6f\x3e\xbe\xbc\xcd\xb7\x58\xab\x48\x04\xd0\xc8\xb9\xa3\x26\xf0\xc1\xa2\xb7\x1e\x88\x41\x89\x33\x10\x4d\x83\x5a\x19\x55\xa2\x06\x32\xe0\xb7\x08\x8f\xd6\x20\x83\x96\x50\xa0\x86\xcd\x5e\x9c\xc8\x72\x6b\x0a\x2a\x47\xd0\xad\xf2\xaa\x65\x8f\x2e\x69\x03\xc8\x04\xf8\xac\x69\x37\x15\xe5\xff\xb6\x06\x41\x19\xdd\x11\x1d\xed\x94\x47\xa1\x66\xf0\xd9\xc0\x75\x7c\x15\x94\xae\xc9\x88\x01\xd4\xb4\x55\xf0\x08\x6c\x01\x7e\x4b\xdc\x4b\xed\x80\x10\xb3\x8d\xf5\xc0\x6d\xd3\x58\xe7\x51\x67\x70\xb7\x25\x1e\x3d\xb7\xa6\xda\x43\x61\x1d\x90\xf1\xe8\x8c\xaa\x20\xb7\x75\xdd\x1a\xca\x83\xec\x5e\xa6\x2d\xe0\x9f\x0d\x9a\x5b\xf1\x04\xba\xbc\xe0\x6c\x91\x18\xfc\x5e\x02\x65\x37\xbf\x60\xee\x13\xa9\x71\xc2\xe6\xa9\x8b\x87\x9c\x41\xaa\xf7\xb4\x23\xd4\xbf\x91\xb0\x44\x9e\x84\x28\x07\x8c\x77\x91\x86\x1a\x38\x84\xac\xf3\x1a\x1c\x86\xd4\x30\x7e\x6c\x70\x32\x5a\x99\x64\x55\x06\xb7\x92\x3e\x8e\x81\xb7\xb6\xad\x34\xe4\xd6\xec\xd0\xf9\x10\xd2\xd2\xd0\x63\x2f\x99\xc1\xdb\xa0\xb2\x52\x1e\xd9\x8f\x24\xf6\x28\xed\x54\xd5\xe2\x65\x88\x57\xad\xf6\xe0\x50\x74\x40\x6b\x06\xd2\x02\x0b\x67\xf0\xa3\x75\x08\x64\x0a\xbb\x86\xad\xf7\x0d\xaf\x57\xab\x92\x7c\x57\xdc\x09\x6e\xbf\x5f\xe5\xd6\x78\x47\x9b\x56\x80\x5d\x69\xdc\x61\xb5\x62\x2a\x97\xca\xe5\x5b\xf2\x98\xfb\xd6\xe1\x4a\x35\xb4\x0c\x86\x1b\x1f\x3a\x44\xad\x5f\xf4\x69\xff\xcd\xc0\xd2\x18\x0f\xf6\x8e\x4c\xd9\x93\x43\xad\xce\xe2\x2e\x15\x1b\x13\x3d\xbe\x16\xed\x3f\xc0\x2b\x24\x41\xe5\xc3\xf7\xb7\x77\x87\x14\x1a\x25\x5e\xc0\x3c\xa0\x7d\x78\x8d\x0f\xc0\x0b\x50\x64\x0a\x74\x31\x70\x85\xb3\x75\x90\x88\x46\x37\x96\x8c\x0f\x3f\xf2\x8a\xd0\x8c\x41\xe7\x76\x53\x93\x97\x48\xff\xda\x22\x7b\x89\x4f\x06\xd7\xca\x48\x6e\x6f\x10\xda\x46\xab\x90\xdc\x37\x06\xae\x55\x8d\xd5\xb5\x62\xfc\xc3\x61\x17\x84\x79\x29\x90\x3e\x0d\xfc\xb0\x33\x8f\x19\x47\x15\x03\xd0\xf5\xe1\xc9\x08\xc9\x43\x09\x90\xa0\x24\x7f\x53\x91\x8a\x34\x96\x02\x0a\x37\x39\x69\x40\xb8\x55\x3b\xb2\xae\xa7\x1b\x0e\x6d\x2b\x7b\x4a\x3d\x04\x88\x45\xc6\xd0\x88\xa5\x08\x78\xa7\x6a\x1c\xd1\x62\x27\xbc\xbb\x7b\x3b\x45\xdd\x37\x63\x66\xaf\x5c\x89\x7e\x98\x28\x53\xdd\x21\x78\x1c\x55\x8d\x89\x47\x40\x24\x9e\x0e\x8b\xad\x65\x2f\x13\xa9\x73\xf7\xd0\xa7\x8f\x84\x4c\xc6\x26\x45\x88\xcc\x5b\x34\xa5\xdf\xae\xe1\x6a\xf4\xa8\x77\xf3\xac\x45\x3d\x57\x67\x53\x9a\x13\x81\x62\x40\xe0\x37\x9a\x33\xb8\x29\xe0\x11\x9d\xbd\x4c\xe1\x2a\x54\x5b\xf9\x23\xb9\x20\x22\x5e\x7e\x9b\x4d\xda\x2e\xed\xa7\x1c\xcc\x8f\x78\x0a\xeb\x6a\xe5\xc3\xd3\xbf\xfc\xe9\xd4\x31\xaa\xdb\x7a\x0d\xdf\x4e\xb9\x25\x42\x9f\xe1\xd7\xbe\xe9\xc1\x1e\x0c\x41\x31\x29\x83\x37\xd6\x01\xfe\xa6\xea\xa6\xc2\x4b\x58\xbc\x5a\x80\x3d\x36\x0f\x60\x71\xfd\xee\xd5\x8f\xdf\x2f\xa6\x7d\x9a\x8c\x07\x9a\xb6\x3e\xb6\x6c\x09\x41\xcc\x09\xf5\xd5\x88\x92\x52\xed\xac\x5b\x89\x07\x94\xeb\x23\x95\x48\xd3\x26\x2a\xe7\xd4\xfe\x14\xd8\x1b\x8f\x35\x1f\x27\x0c\x00\x05\xf2\x09\x08\x93\xde\xa6\x25\x65\xb6\xe4\xc3\xe3\x0e\xfb\xda\x72\x18\x57\x68\x7c\xb5\x07\xbb\x09\xfb\x90\xee\x98\x0e\xc5\xfe\xe1\xb9\xd5\x3e\x57\x84\x9d\xe8\x1f\xd0\xc8\xa0\x3f\x1a\xd7\x27\x56\x9e\xb2\x3f\x61\x71\xd9\x33\x9e\xa0\x74\xa8\xe1\xe4\x05\xc0\x4f\x5b\x34\x63\xa2\x88\x4f\x5d\x3f\x96\x52\xe8\xe1\xb6\xaa\xd0\x25\x3a\x9f\xc2\x1f\xd8\x9c\x43\x6e\xac\xd1\x32\xcc\x52\xe4\xc9\x00\xaa\x7c\xdb\xef\x74\x8f\x61\xe3\x92\x52\x55\x26\x49\x0b\x0b\x92\x3a\x11\xd9\x28\xe7\x29\x97\xb5\x35\xbc\x04\x85\xa2\x8a\xc5\x20\xe5\xc3\xdf\xad\x0b\x65\x13\xf5\x1c\xb6\xc5\x14\x2f\x69\x09\x34\x89\x81\x68\xeb\xd6\x4a\x60\x1b\x05\x1e\xb9\x99\x2b\x59\x8f\x3c\xba\x9a\x0c\x46\x0e\xf2\x60\x10\xb5\x8c\xc7\x13\x91\x0e\xbd\xdb\x07\x19\x03\x8f\xc2\x5b\xdd\x24\x89\x7e\xff\x2e\x5d\x27\xac\xc3\x67\x33\x26\x2e\xcc\x52\x7e\x03\x40\x52\xe8\x8f\xc2\x32\x6f\xd6\x54\x55\xce\xd4\xde\x48\xf9\xeb\x77\xb7\xb2\x55\xdf\x8e\x6a\xeb\x60\x83\xea\x2c\x78\x20\xbf\x25\x23\xfb\x50\x82\xe8\x44\x2c\x4c\x5a\x37\x5b\x6e\xf1\xcc\x15\x5d\x3c\x7d\x56\x4c\x3e\x3d\xbe\xa1\x1c\xb8\x03\x98\xca\xec\x61\x48\x62\xb6\x39\x49\x95\x04\x5f\xc4\xcf\x49\x99\x30\xc0\xbc\xcb\xbb\x70\xe7\xb8\x29\x20\xdc\x4d\x78\xdb\x2d\x7f\x89\xb1\xcf\x74\x84\xcf\x8b\x37\x8a\x2a\xd4\x9f\x17\x33\xb2\x7b\x83\xe0\x81\xaa\x4a\x16\x36\x46\x1f\x0d\x12\xa8\x15\x5b\x13\xd7\x68\x64\x56\x25\x26\x0f\x37\x49\xe3\x9c\x50\xd5\x72\x3f\xf0\x53\xad\x65\xd3\x16\xcc\x27\x4b\x3c\x33\x29\x33\x01\x77\x4a\x9c\xeb\xde\x21\x62\xf8\xa5\x65\xdf\x25\x90\xd1\xca\xe9\x33\x75\xdd\x9d\x22\xdc\x5d\x4f\xd3\x66\x68\xef\x4c\xf2\xc4\x33\xb5\xa5\x0d\xcf\x32\xa5\xf3\xec\x63\x3f\x5e\xd0\x86\xe7\x7c\x7a\xc6\x53\x29\xf6\x77\x4e\x19\x0e\x7e\xde\xd1\xe9\xbe\x76\xea\xd0\xe4\x98\x1f\x9e\xae\x9f\x48\x7b\x5a\x7a\xaa\xe7\x0c\x84\x2e\x53\xbe\x5a\x67\x4c\xbe\xaf\x16\x73\x3a\xc3\xff\x2f\x31\x67\x96\xd0\x13\x59\x7f\xb8\x2e\x6d\x58\x52\xfd\x19\x3d\x28\x71\x76\x7d\x34\xcc\xac\x87\x2d\xa6\xd6\xee\xfa\x79\x9d\x1a\x09\xea\xe9\xbc\x7f\x32\xeb\x9f\xce\x4b\x9a\xad\x87\xe3\xb6\x49\xba\x33\x97\xb4\x5c\xe9\x0a\xc2\x34\x0d\x65\xac\xca\x95\x92\x51\x83\xb7\x50\x90\x39\xbe\x44\x8c\x8c\x4e\x0b\xb1\xdc\x40\xfa\xcd\xe1\xb3\x01\x6b\xe0\xd5\x4f\xb7\x11\x8b\x24\xb1\x40\x9f\x6f\x51\x43\xcb\xe7\xe3\xf2\xf3\xcd\xeb\x9f\x41\x31\x50\xe8\xc6\x9f\xae\xee\x83\xb0\x47\x59\x25\x66\xc5\x85\x97\xce\xc8\x54\x72\xa9\x6f\x1c\x2e\xfb\x85\x41\x87\x4f\x78\x41\xc3\x77\xf7\x97\xa2\xe2\x87\xeb\xf7\x53\x0a\xce\x48\x3d\xa8\x3e\xaf\xe0\xe5\x7d\xc0\xe4\xd3\xd5\xfd\xe1\x22\xae\x6d\xce\x99\x7a\xe0\x4c\xd5\xea\xd1\x9a\x2c\xb7\xf5\x2a\xaf\x68\x15\xbf\xb8\xac\x1c\x16\xe8\xd0\xe4\xb8\x72\xb6\xf5\xf8\xe7\x97\xab\x12\xfd\x32\xa2\xbc\x0c\x28\x6f\x7d\x5d\xbd\xb0\x21\x9e\x73\x5d\x4e\xce\xa7\xef\x8e\x95\xd6\x94\x3b\xcb\xb6\xf0\x41\x27\x9a\x65\xcb\x41\xb3\x12\x88\x57\x06\xfd\x83\x75\x5f\x56\xda\xf0\x4a\xf4\xfc\x7d\x47\xf8\xf0\xb7\xf0\x6c\x99\x57\xb4\x8c\xf6\xbd\x50\x8f\xcb\xc4\xb9\xd4\x86\x83\x45\x4b\xde\xda\x87\x73\x96\xbc\x1c\x58\x92\x57\xb6\xd5\x59\x69\x6d\x59\x61\xb0\x43\xf4\x89\x79\x03\xcf\x77\x57\xab\xb4\x91\x4a\x79\xb1\x20\x30\x37\x61\x9f\x55\xf4\x5e\x95\x67\x7a\xd4\xb8\x3e\x84\xf7\xb8\x14\x7e\x6d\x31\x6d\x90\xc7\x19\x7f\xc6\xeb\xbe\x16\x2e\xfb\x2f\x46\xe1\x13\x33\x7b\x55\x96\x64\x4a\xd5\x50\xc8\xf1\xe3\xb2\x93\xe4\x3b\x97\xd0\x31\x55\x53\x06\xde\xa9\x92\x43\x0e\x7a\x55\x2e\x0b\xaa\x3c\x3a\xbe\xfc\x8a\x94\x9b\x31\x34\xe4\x60\xff\xb1\x6d\x94\x81\x4f\x05\xe6\xec\x30\x07\x50\x3a\x2e\x0c\xaa\x7a\xff\x8c\xe1\x7b\x12\xed\x5d\xf7\xcf\x83\xdd\xd5\xe1\x57\x10\xb0\x4c\xff\x07\xd8\xc5\x16\x1f\x6f\x5f\x6b\xf0\xae\xc5\xf4\x89\xdc\x3a\x19\xa4\x91\x72\x98\x63\x2a\xcf\xb1\xf1\xa8\xdf\x1d\x7f\xe7\x5f\x2c\x46\x1f\xf1\xc3\xcf\xc1\xc6\x0a\x9f\xee\x2f\xa2\x54\xd4\x1f\x3b\x3b\x84\xf8\xbf\x00\x00\x00\xff\xff\x45\x12\x2e\xc4\xe3\x18\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 6371, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x9c, 0xd8, 0x64, 0xf7, 0x8e, 0xd, 0x65, 0x64, 0x22, 0xde, 0x6, 0xdc, 0x85, 0xab, 0x2c, 0xc, 0x5a, 0x89, 0xec, 0xa4, 0xc9, 0x6e, 0xf, 0x2c, 0x68, 0x3e, 0x81, 0x25, 0x6b, 0x14, 0xb1}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x7f\x73\xdc\xb6\x92\xe0\xff\xfe\x14\x7d\xca\xde\xd9\xce\xd3\x50\x96\x9d\xe4\xb2\x7a\x5b\x7b\xa5\x48\x4e\xe2\x7a\x8e\xad\xf2\xe8\xe5\xdd\xe6\xf9\xad\x0f\x43\x62\x66\xb0\x22\x01\x06\x00\x47\x9e\xec\xed\x7d\xf6\x2b\x34\x00\x12\x1c\x02\x24\xc7\x76\xf6\xae\x76\xcd\xaa\x54\xac\x21\xd8\x40\x37\x1a\xfd\x0b\x8d\x06\xa9\xd9\xcf\x54\x2a\x26\xf8\x05\x90\x9a\xd1\xf7\x9a\x72\xf3\x97\xca\xee\xbe\x55\x19\x13\x67\xbb\xf3\x15\xd5\xe4\xfc\xc1\x1d\xe3\xc5\x05\x5c\x35\x4a\x8b\xea\x0d\x55\xa2\x91\x39\xbd\xa6\x6b\xc6\x99\x66\x82\x3f\xa8\xa8\x26\x05\xd1\xe4\xe2\x01\x40\x2e\x29\x31\x3f\xde\xb2\x8a\x2a\x4d\xaa\xfa\x02\x78\x53\x96\x0f\x00\x38\xa9\xe8\x05\x30\xbe\x91\x54\xa9\x5c\x70\x2d\x45\x59\x52\xa9\x32\x51\x53\x49\xb4\x90\xe6\x1f\x5c\x6d\xd9\x5a\x67\x4c\x3c\x50\x35\xcd\x0d\xc0\x8d\x14\x4d\x7d\x01\xf1\x46\x16\xaa\x32\xed\x00\xec\x28\x5f\xd8\x0e\xae\xda\x0e\xf0\x5d\xc9\x94\xfe\x53\xfc\xfd\x4b\xa6\x34\xb6\xa9\xcb\x46\x92\x32\x36\x44\x7c\xad\x18\xdf\x34\x25\x91\x91\x06\x0f\x00\x6a\x49\x15\x95\x3b\xfa\x67\x7e\xc7\xc5\x3d\xff\x9e\xd1\xb2\x50\x17\xb0\x26\xa5\xa2\x0f\x00\x54\x2e\x6a\x7a\x01\x27\x27\xe6\xdf\xcd\x4a\x3a\x22\xba\x91\xab\x9c\x94\xd4\xfe\x13\xa0\x24\x2b\x5a\x2e\x69\x49\x73\x2d\xe4\x0d\xd1\xdb\x0b\xc8\x94\x26\xba\x51\x99\x72\xbf\xba\x96\x86\x44\x6f\x68\x5d\xb2\x9c\x28\xdf\xb0\xa6\x79\x26\xdd\x6f\xbe\x19\x7e\x7c\xd8\xd0\x42\x24\x3b\xc2\x4a\xb2\x2a\xe9\x9b\xf0\x1b\xfb\xf2\x02\xfe\xf5\xdf\x1e\x00\xec\x48\xc9\x0a\x9c\x53\x3b\x42\x33\x01\x97\x37\x2f\x7e\x7e\xb6\xcc\xb7\xb4\x22\x7e\xd8\x05\x55\xb9\x64\x35\xb6\x83\x93\x01\x95\xdd\xfb\x15\x55\x40\xa0\x22\x9c\x6c\x68\xe1\x09\x09\x1d\x25\x61\x2d\x24\xe8\x2d\x75\x40\x01\xf2\xb2\x51\x9a\xca\x0c\x6e\xb7\x34\x6c\x97\x13\x0e\x86\xe0\x2c\xa7\xf0\xba\xa6\x7c\x69\x58\x02\xde\x88\x46\x53\x20\xbc\x80\x3f\x35\x2b\x2a\x39\xd5\x54\xf9\x19\x6f\x41\xb6\xc4\xcf\xe0\x2d\x87\xbf\x6c\x29\x07\xc2\x87\x7c\x01\x4c\x59\x6e\xa6\xc5\x29\x10\xe0\xf4\x3e\x32\xde\x16\x68\x41\xeb\x52\xec\x2b\xca\x75\xf0\x1d\x68\x01\xa4\x2c\xc5\x3d\x98\xb5\x25\x39\x29\x41\x4b\xb2\x5e\xb3\xdc\xbc\x91\x94\xe4\x5b\x83\xac\x47\x44\x81\xde\x12\xdd\x82\xa4\xef\x6b\xa1\xa8\x1f\x18\x08\xe9\xd0\x0b\xc6\xff\xe7\xda\xcc\x0c\xdf\x80\xde\x32\xd5\xbe\x80\x8a\xec\xa1\xa4\x04\xfb\x2f\x98\x92\x0d\x4e\x4b\x0b\xd8\xd0\xb8\x6e\x56\x25\xcb\x61\x4d\x72\xf3\x39\xa7\xfa\x5e\xc8\x3b\x83\x18\xa7\xb9\x69\xac\x80\xa8\x24\xd6\x20\xe9\x8e\xa9\x10\xa4\xe9\x71\x45\x01\x5f\x17\x20\x1a\x8d\xb4\xdd\x6a\x5d\xab\x8b\xb3\xb3\xbb\x76\x32\x8c\x54\x29\x44\xae\xce\x72\xc1\x73\x5a\x6b\x75\xe6\x71\x5f\xb8\x31\x30\xbe\x39\x73\x3d\x2e\x0e\x97\xa0\x79\xdc\x94\xd1\x1d\x95\x50\x0b\xa5\xd8\xaa\xa4\xa7\xa0\x8c\xe4\x5a\x95\x14\x0a\xba\x26\x4d\xa9\x95\x67\x24\xa8\x4b\xa2\xd7\x42\x56\x40\x24\x85\x46\xd1\x22\x83\x25\xa5\x60\x68\xdf\x11\xc4\xac\x56\xfc\xa2\x12\xd2\xc0\xd0\x84\x95\x2a\x3b\x71\x0d\x6a\x69\xa4\x8f\x66\x7e\xb9\x9a\x27\x90\x9d\xed\x6f\x07\x8b\xe0\xa1\x59\x25\xb6\x8d\x19\x16\xe3\x38\xc1\x14\x76\xf6\x37\x5a\x80\xc2\x15\x04\x62\xed\xe7\x0f\xa5\x08\xd7\xa4\x37\x5d\xb8\xe8\xd6\x86\x47\xc5\xea\x5f\x68\xae\x0d\x02\xd2\x00\x01\xb5\x15\x4d\x59\x98\x89\xd9\x51\xa9\x41\xd2\x5c\x6c\x38\xfb\xad\x85\xac\x0c\x03\x98\x2e\x4b\xa2\xa9\xd2\x3d\x88\x8c\x3b\x8e\xdc\x91\xb2\xa1\xa7\xb8\x68\xcc\x2c\x4a\x6a\xfa\x80\x86\x07\xd0\xb0\x89\xca\xe0\x27\x43\x1d\xc6\xd7\xe2\xa2\x9d\xda\x0d\xd3\x5e\x5b\xe4\xa2\xaa\x1a\xce\xf4\xfe\x0c\xe7\x8d\xad\x1a\x2d\xa4\x3a\x2b\xe8\x8e\x96\x67\x8a\x6d\x16\x44\xe6\x5b\xa6\x69\xae\x1b\x49\xcf\x48\xcd\x16\x38\x70\x8e\xec\x96\x55\xc5\x17\x2d\x63\x3f\x0c\x46\xaa\xf7\x46\x70\x2a\x2d\x19\xdf\xb4\x3f\xa3\xa8\x4f\xd2\xdd\x08\x7a\xb3\x0a\x89\xfb\xcc\x8e\xbf\x23\xaf\x5d\x30\x14\xde\x3c\x5f\xde\x76\x8b\xc6\x4c\x41\x9f\xe6\x48\xed\xee\x33\xd5\x11\xde\x10\x8a\xf1\x35\x95\x76\xe2\xd6\x52\x54\x08\x91\xf2\xa2\x16\x8c\x6b\xfc\x23\x2f\x19\xe5\x7d\xa2\xab\x66\x55\x31\x6d\x66\xfa\xd7\x86\x2a\x6d\xe6\x27\x83\x2b\xc2\xb9\xd0\x66\xf9\x34\x66\x39\x1b\x0e\x7d\xc1\xe1\x8a\x54\xb4\xbc\x22\x8a\xfe\xee\x64\x37\x14\x56\x0b\x43\xd2\x69\xc2\x87\xaa\xbe\xdf\xd0\x52\xab\xfd\xd9\xab\xef\xe8\x0c\x99\x97\x66\x82\x50\xf6\xd5\x34\x67\x6b\x96\x23\xcf\xdb\xa5\x60\x56\xa0\x62\x92\x16\xb0\xa2\x5b\xb2\x63\x42\xfa\xdf\x07\x42\x3a\x0b\xba\x88\x2d\x53\xdb\x35\x8a\x84\x2b\xf3\x0e\x3b\xa2\xfd\xf7\x87\xba\x6b\xd8\xde\x32\x93\xa4\x6b\x2a\x29\x37\xac\x22\x0c\x6f\xd1\x5c\x52\x8d\x52\x91\x30\x1e\x12\xa9\x25\xcc\xb6\x95\x47\x90\x07\xd0\xd0\x50\x28\x60\xb5\xc7\x16\x43\xf1\x9a\x59\xa5\x84\xd2\x5e\x0d\xa0\x16\x82\x3f\xd4\x8e\x6c\x08\x81\x49\x10\xf7\x3c\xec\xe1\x34\x82\xb3\xc1\xc1\x8a\xbf\xb7\x7c\x00\xf3\x16\x95\x10\xe2\x53\x35\xaa\x45\x0a\xc7\xb7\x16\x46\x83\x99\x35\x73\x47\xf7\x0a\xe5\x04\x72\x80\x91\xc4\x00\xba\x54\x59\x2e\xf5\x21\x45\xa1\x87\xf0\x9a\x95\x56\x79\x9b\x55\xe4\x3e\xba\xa3\xfb\x0b\x03\xf1\xe0\xe5\x5b\x0e\x2f\xd6\xd0\x70\x45\xf5\xe9\x00\x26\x81\x7b\x56\x16\x39\x91\x45\x0f\xbc\x99\x9d\x46\x8b\x8a\x68\x96\x93\xb2\xdc\xc3\x86\x72\x63\x2d\xd2\x02\x47\x6b\xb1\x46\xfb\xa1\xfb\x68\x00\x9b\x29\x6b\xe9\xb4\x8a\x23\xa2\xf6\x0a\x51\x19\xaa\x3c\x32\x50\x55\xb3\xb2\x7f\xaa\xc7\xd8\x4b\x68\xb4\xf8\xa7\x1b\x47\xd0\xf3\x43\x05\x57\x97\x06\x91\xd2\x2c\xf9\xfe\xc0\x8d\x50\xde\xd8\x2f\xee\x99\xde\x46\x81\x3a\x8b\xe8\xa1\x02\x2d\xcd\x5c\x29\x2d\x24\x45\x75\x7b\x8b\xa3\x5e\x34\xaa\x87\x29\x3c\xba\xdf\x52\xbd\xa5\xb2\x1b\xce\x00\xa6\x90\x86\x4a\x72\xe1\x16\x23\x2d\x1e\xcf\x1c\x60\x6b\x7a\x3d\x1c\x32\xea\xaa\x61\xa5\x5e\x30\x0e\xaf\x2f\x1b\xbd\xb5\x5c\x2f\x5b\xa5\xea\x9f\xd4\xaa\x35\x0f\xba\x0c\x83\x5f\x0f\xc5\xfd\x2b\x52\x51\x2f\x20\xdc\x1a\xd5\x51\xa1\x39\x66\x86\x88\x9d\xb1\x43\xe8\xfd\x99\xb3\x41\x16\x06\xbd\x85\x15\x6a\xea\x0c\xbd\x8c\xb3\x2f\xf0\x7f\x91\xf1\x00\xdc\xbe\xbe\x7e\x7d\x01\x97\x45\x01\x02\x49\xdd\x28\xba\x6e\x4a\x6b\x58\xa8\x2c\xb0\x16\x4e\x51\x77\x9d\x42\xc3\x8a\xff\xf1\x30\x02\x2a\x2a\x75\xc3\x57\x07\x72\x16\xc9\x81\x7c\x38\x21\xd4\x2c\xeb\xa2\x20\xbb\x7e\xb5\x44\xd2\x7a\xbb\x73\x44\x14\x0d\x97\xa0\x55\xad\x66\x4d\x19\x31\x98\x0b\xbe\x66\x9b\x46\x52\xa8\x9a\x52\xb3\xba\xa4\xb0\xa6\xc4\x68\x1a\x85\x02\xe2\x4b\xf8\xde\x2d\xa7\x97\x82\x14\xdf\x91\x92\xf0\x9c\xca\xa5\xed\x77\x00\xbc\x55\x9f\x68\x9d\xaa\xad\x11\x3a\x4a\x1b\x76\xdb\xec\x4f\xa1\x43\x01\x22\xfd\x1b\xa4\x8c\xc9\x22\x0b\x95\x0d\x00\xa3\xc5\xe7\x80\xdf\xb4\xb0\x97\x0e\x74\x66\x47\x8a\x42\xb7\x31\x6e\x1e\x90\x60\xe9\x3a\x51\x3a\x26\xe0\x4e\xad\xbe\x0f\xd6\x9c\x5f\x3d\x56\xa4\x58\x93\xdb\x8d\x1f\x29\xa8\x55\x20\x40\xe2\xe3\x1d\x8a\x70\x37\x4e\xb3\xcc\xad\x45\xc3\x94\xa7\x94\xa5\x06\xe3\x05\xdb\xb1\xa2\x21\xe5\x00\xa2\x75\x1d\xac\x63\x47\x15\x28\x81\xbe\x86\x21\x8a\x91\x17\xd2\xd0\xd4\x38\xae\x70\xbf\xa5\x12\x15\x9c\x26\x72\x43\x75\xe7\xb8\x5c\xbf\x5a\x0e\x80\x7a\x7a\x9b\x71\x39\xec\x50\x7d\x18\x53\x86\xb3\x5f\x1b\x0a\xa4\x12\x86\x9c\x65\x39\x54\xdd\x0a\x6d\xce\x21\x59\x87\xd6\x90\xd5\x09\xb4\xaa\xf5\xfe\xb4\x33\xf0\x11\x5f\x84\x99\x59\x2e\xe8\x85\x06\xce\x9c\x98\x1c\xc0\xb7\x2e\xb2\x1d\xed\x40\x18\x25\x57\x5f\x9a\x79\xc6\x97\x5d\xfa\xbb\x70\x15\xb9\x49\x0c\xd7\xe0\x90\x2e\x9d\x1a\xf2\x40\x91\x06\x56\xde\x38\xe7\x49\x9d\x02\xe5\xc6\x9d\x87\x52\x90\x02\x56\x6e\xbd\xb5\x62\xdb\x98\x7c\x43\xb5\x4a\x75\x9e\xf5\x14\x6f\xcf\x72\x61\x0a\x56\xc4\x0c\x54\x70\x23\x4f\x25\x51\x5a\x36\x68\x4c\x1e\x49\x77\x1b\x71\xf0\xfe\x98\xb3\x1f\x2e\xff\xb2\xbc\xb0\x0d\x22\x02\x02\x1e\xa1\x92\x79\xee\x78\x70\x00\x13\xa3\x2a\x8f\x0d\x94\xdf\x1a\x49\x2f\xe6\x41\xe9\xbe\xfa\xe1\xea\x66\xa8\x5d\xde\xce\x1c\x4c\x07\xe6\xc5\x77\x3f\x5d\x95\xa2\x29\x2e\x66\xc9\xb8\x14\x94\x97\x6c\xb5\x63\x52\x5f\x00\xfc\x28\x94\x7e\xe5\x1c\xf2\xb7\x1c\x2e\xf9\xde\x4d\xb2\x27\xdd\xd0\xd0\x34\x16\x3c\x3c\x62\x3c\x2f\x9b\xc2\xc8\xaf\x57\x82\xd3\xc7\xed\x0c\x6a\x11\xc2\xc4\xa9\x4e\xf3\xe5\x8c\x05\x79\x8c\x0a\xdf\x76\x1d\x4f\x6a\xf2\xa0\x2d\x6c\x45\x59\x28\xa8\x89\x24\x15\xd5\x46\x3e\x79\xb3\x2c\xa4\x8e\xc7\x22\xaa\x92\x23\x3a\x24\x83\x1b\xeb\xca\x81\xe0\xc6\x98\x59\x23\xe5\x0c\x87\x87\xf4\x49\x6a\xe5\x88\xea\x35\x4f\x19\xcc\xfa\x24\x8e\x61\xe3\x34\x92\xbd\xd5\x1b\x1b\x10\x24\x31\x89\xf0\x60\x0c\xc0\xd8\x9c\x81\x5f\x5a\xf1\x57\x87\xce\x9c\x69\x89\xaa\xc7\xe8\x28\xe7\xd4\xe1\x6f\x44\xc3\xfd\x96\xb9\x18\x57\x0f\xa5\x04\x5c\xb4\xc2\x6d\xd8\xab\xc8\xe0\xc6\x45\x77\x5c\xf8\x01\x03\x38\x27\x7e\xe1\x9c\xa0\x1e\x3d\x79\xe1\xa2\x18\x27\x71\x22\x19\xc1\xdd\x54\x29\x34\x16\xe0\x3f\x4f\x36\x48\x8a\x1e\xfb\x8c\x58\x6b\x80\xfa\xf1\xd7\xc6\xf8\xb1\xb1\x01\x2c\x2c\x91\x8e\x65\x36\x2e\x0a\x7a\x23\x62\x0e\xd7\xc1\xb4\xf8\x86\x69\x26\x7b\xe5\x5a\x78\xf9\xf6\xe9\x56\xd3\x01\xe4\xa3\x57\x54\x2d\xd9\x2e\xe2\xa6\x0f\x70\x74\xed\xd2\x28\xde\xb8\x06\x11\xc3\x32\xce\xf5\x93\xa8\x39\x88\x47\xa3\x84\x2f\xa7\xf0\x39\xf1\xbd\x60\xe0\x72\x48\x71\x23\xc9\x1b\x45\x33\xf8\x19\xcd\x4a\xbb\x2e\xa2\x88\x10\xa3\x0e\xd1\x5a\x8c\x69\xb2\xb7\x1c\x9c\xe0\x77\xeb\x75\x86\xe1\x0f\x68\x75\x5b\xe3\x38\x08\xae\x87\xe0\xc1\xcf\x37\x1a\x13\xdc\xc6\xc6\xbc\x85\x8e\xc6\xc7\xd0\xf6\x00\x17\x27\x89\x79\xdb\x5d\x48\x1d\x6d\x56\x17\x94\xe8\xac\x1d\xc6\x37\x19\x5c\x46\x41\xc6\x86\x75\x10\x98\x0f\x8d\xae\xae\xab\x68\x78\x04\xac\x49\x3e\xcf\x93\x8c\x05\xb4\xdd\x6f\x67\x5f\x18\x29\x38\x2a\x04\xad\x19\xd6\xb9\x3a\x68\x8e\x05\x71\x8f\xce\xcd\x69\x7d\x0c\xbf\x9b\xa2\x45\x7c\xe5\x22\xe3\x13\x3d\xf0\xc2\x3c\x5d\x1e\xaa\xce\xca\x37\x6e\x61\x16\xfa\x52\x29\xee\x6a\x7b\xb5\x0b\x84\xe3\x37\xbf\x09\x4e\x95\x8b\x75\xa3\x53\x59\xf0\xe3\x8c\x73\x68\x0d\x74\xbb\x3f\xf1\x8b\xe0\x76\x3b\xc7\xfd\x68\x17\x9f\xf9\xd5\xee\xdd\x84\x54\xb1\x03\xaa\x0e\x43\xae\xfe\x31\x93\xdf\x48\x49\xb9\x2e\xf7\xa0\x9a\xba\x16\x52\xfb\xe1\x0b\x1b\xe9\xba\xfc\xcb\xf2\xd4\x9a\x92\x36\x1c\xfe\xc3\xd5\x4d\x6b\x73\x45\x9c\x34\x37\x5d\x5f\x1e\x1a\x6c\x53\x4b\xcb\x74\x67\xa4\x33\x98\x21\xc4\x09\xec\xbc\xb0\xf8\xe7\x4c\x39\x7e\xf5\xbe\xd1\x27\x5f\x69\xc6\x10\x0b\x16\xd9\x29\xac\x44\x13\x71\xd5\x10\xa2\x08\x70\x81\x6f\x9f\x20\xe1\xbe\xfa\xea\x99\x0d\xb8\x19\xd7\x12\xec\xce\x54\x2d\xdc\x0e\x8d\x91\xcd\x7e\xa8\x29\x39\x4c\x78\xc7\x92\x7d\x4f\x26\xee\x2d\x85\xc8\xec\x18\x49\xe2\xde\x0d\xd5\xf9\xd2\x5e\x41\xbc\xe5\x70\x2d\xa8\x02\x63\xe9\x8e\xc3\x4f\xf2\x41\x7c\x1a\x66\x92\x3c\x0a\x34\x26\xf0\x4e\x7d\x04\xc6\x8c\x94\xbe\xaf\x4b\x96\x33\xc3\xd1\x6d\x1c\xa0\x23\x7c\x14\x26\xfa\xe7\x15\xe1\x0d\x86\xf3\x26\x50\xb5\x34\x3a\xd0\xe6\x29\xfc\x27\xd9\x3e\xa2\x3d\x3c\xe8\x84\xc4\x9d\xd2\x26\xd3\xc4\x4d\xa8\xb1\xb4\x36\x69\x87\x34\xae\x35\x92\x1c\x16\x6a\x92\xdb\x60\x7b\x23\x5c\x25\x46\x7c\x16\x7b\x4e\x2a\x17\x54\x25\x65\x29\xf2\x68\x5c\xd6\x3c\xab\x7d\x17\x65\xfd\x23\x6c\xc5\x3d\xdd\x51\x79\x6a\xc6\xe2\xa4\x18\x46\x75\x58\x8e\xc0\x3d\x2c\x74\xf4\xd3\x5c\x90\x6f\x09\xdf\xd0\x76\x7b\xb0\x1d\x9b\xdb\x09\x75\xc1\x54\x2f\xe2\x0f\x49\x12\x17\x59\x46\x1b\xf9\x2c\x88\xa1\x8f\x08\x23\xb6\xf8\x62\x96\xe3\x6c\xda\x05\x92\x36\xfa\xde\x2d\xe7\xe8\xbb\x69\x36\x1e\xb1\xe6\x53\x96\xfc\x02\x3f\x9a\x1b\xa8\x2d\xc5\x66\xc3\xf8\x66\x34\x64\xe4\xda\xb4\x3b\xc6\x07\x56\xed\xfd\x96\x68\xbf\xef\xbb\xa2\xd8\x9a\x16\x56\x5f\x64\x00\x2f\xd6\x91\x4d\x28\xa6\xdc\xb4\x1a\xe7\xca\x06\xd1\x6c\x36\x0d\x13\x56\xbe\x6e\x2c\x4b\xda\xc8\x51\x01\xab\x46\x03\xc9\x73\xb3\xa6\xcc\xbb\x61\x08\xd8\xb0\x2f\x53\xd8\xf8\x50\x1a\x8e\xb9\x95\x16\xe6\xb4\x11\xec\xfa\xee\x12\x46\xb6\xe2\x3e\xd8\x50\xed\x36\x4f\x5b\x32\x44\x19\xd2\x92\xc6\x07\xb6\xa2\x64\xe8\xb0\x44\x92\x1b\xc5\xea\xf1\x8a\xf1\xef\x94\xcf\x5c\x50\xa5\x19\x0f\x52\x65\x26\x30\x0d\xda\x9b\xbe\xad\xd2\x0f\x28\x0f\x1b\x91\x72\x6b\xa7\x86\x02\xa1\xfa\x48\x37\x39\x18\x50\x27\x13\x93\x1e\xd5\x95\x6f\x32\x02\x13\x02\x26\x6e\x31\x4c\xbb\x54\x2d\xc8\x14\xb2\x30\xe5\x5c\xf9\x47\xed\x55\x29\x06\xcb\x2b\x89\xae\x6d\x1e\xc7\x95\xf8\xb7\xde\x75\xcc\xda\x90\xcb\x28\xe6\x87\xc8\x2d\x11\xca\x18\x66\x82\xd3\xd7\xeb\xb1\x31\x2f\x66\xcd\xb6\x7d\x48\x51\xc8\xc4\x22\xeb\x3f\xc6\xa6\x25\xfa\x02\x58\xbd\xfb\xea\xff\x61\xdf\xdf\x8c\x34\x9e\xdb\xf3\xcc\x7e\x7b\x53\xef\xbe\xf1\xbe\xf6\x8b\x9b\xf6\x17\xa7\xfb\xec\xec\x4f\xa2\x12\x24\x7c\x10\x4c\xc0\xa1\x6c\x47\x71\xf5\x42\x45\x95\x22\x1b\x9a\x70\x1c\xba\x67\x22\x86\xd4\x3d\x6b\x92\xb3\x92\xe9\xc1\x8e\xc3\x28\xa2\x27\xfe\x2b\x6f\x89\xf8\x08\x9d\xe5\x6e\xff\x76\x12\x51\xb1\xee\x23\x35\x26\x56\x31\x6b\x60\x2e\x60\xa6\xe0\xed\x89\xb1\x59\xca\xf3\xb7\x27\x51\xb1\x1b\x3e\x63\xe1\x3c\xff\x2c\xe0\x8e\xca\xb8\x13\x1f\x36\x4a\x1a\x47\x61\xa3\x8a\xb0\x54\xec\xaf\x6b\x54\x10\x5a\x89\xe9\x0e\x49\xa3\xe3\x76\x63\xd8\x68\x16\xdf\x2d\xa0\xac\xa7\xc7\xce\xe9\x7d\xdc\xaf\x08\x1b\x35\x4d\x5e\x4f\x36\xca\xe5\x4c\xf4\x9e\x4e\xb6\x5a\xeb\xe9\xee\xf8\x8c\x36\xa4\x29\xd8\xb8\x24\xc6\x56\x25\x4d\x38\x17\x61\x2b\x83\xde\xf4\xc8\x91\x47\x9f\xcc\x6b\x76\x3e\xaf\xd9\xcc\x4e\x9f\xcd\x6b\x36\x26\xc7\x83\x66\x5f\xcf\x6b\x36\x26\x99\x83\x66\xff\xfd\x53\x49\xb7\x3a\x11\xd4\x0e\x9f\x7e\xf0\xd7\x78\x24\x4e\x7e\xff\xf9\xfa\xc6\xfe\xcd\x9b\x6a\x45\xe5\xbf\xbf\x10\x6f\x55\x1a\xd7\xcf\xa6\x66\xb5\x22\xef\x59\xd5\x54\x17\xf0\xcd\xd7\x5f\x3f\x9b\x9a\x8d\x8a\x71\xdb\x78\x8a\xa5\x2c\xa1\x71\xa3\x77\x54\xae\x8d\xed\x49\xf8\x67\xe1\xb5\xe1\xb8\x65\x90\x72\xdc\xc3\x01\x4d\x58\x6c\xa9\xb0\xb8\x7f\xd2\xe1\x71\xfc\xb7\x58\xf7\x8c\x68\x63\xb8\x19\xc3\x79\x7c\xb6\xde\xc2\x0b\xdd\xe6\x29\x08\xde\xe6\x0e\xb5\x89\x6e\x2e\x72\xde\xda\xa5\x2e\xb7\x6a\x14\xa8\x8f\x42\xf8\x73\x0a\x5d\x66\x8a\xd3\xb7\xac\xa0\x39\x91\x61\xd8\x81\x54\x09\x8f\xbf\x1d\xe8\x89\x41\xe6\xed\x89\x8f\x4f\x46\x22\x1d\xb5\xb0\x39\x6e\x5d\x6f\xa3\x10\x13\x50\xb4\x80\x7b\xc9\x34\xb5\x5e\x87\x0b\x0a\xb8\x11\x67\x30\x89\x7b\xeb\x41\x6a\xcc\xa5\xf7\x47\x0a\x80\x84\x51\x16\x9c\x17\x9b\x69\x48\xdf\xd7\x34\x8f\x24\x39\x0f\x68\x6a\x13\xe2\x71\x34\xa4\x30\x2b\x01\x37\x42\xfa\xc4\x25\x90\xe3\xb9\x14\xef\x73\x8c\x42\x54\xa2\x6c\x90\x53\xdc\x4a\x27\x85\xf3\xb4\x5c\x06\x2f\x53\x01\xda\xaf\x84\xa6\xfd\x8c\xfc\xd8\x63\xa3\x5a\x7d\x3c\xa1\xa2\x84\xbb\xc1\xdb\xbf\x6d\x7a\x7c\x21\x45\x5d\xd3\x02\xd8\xd0\x4d\x3f\x9c\x25\x49\x34\x75\x46\x97\x02\xfa\x3e\xa7\xb4\xb0\x8c\xd4\xf5\x24\x1b\xae\x59\x45\x1f\xe2\xd1\x80\x58\xa6\x60\xf8\xf4\x89\xd4\x12\xe2\xa1\x82\x9c\xd4\x24\x67\xda\x67\x41\x59\x87\xc5\xfc\xfb\x65\xcc\xf9\x0f\x1f\x33\xe5\xe8\xd1\xd9\x7c\xd8\x81\xbf\x74\x3b\x98\x37\xb3\xea\xc6\x27\xc8\xa5\xb5\x12\x7e\x20\x95\x73\xc2\xbd\x64\xf6\x3d\xcd\x93\xcd\x6f\x0f\x59\x6e\x84\xad\xb6\xa4\x8b\x30\x4e\xac\xcd\x96\xed\xdc\x60\x18\x57\x9a\xf0\x9c\x8e\x5a\xb0\x53\xd6\xeb\x62\x96\x7b\xbd\x70\x73\x34\x29\x7b\x47\xb5\xee\x94\x1e\x88\x46\xb6\xfa\xf0\x47\x64\xfb\x56\xeb\xfa\x8a\xd4\xba\x91\xf4\x47\x4a\x0a\x2a\x93\xee\x59\x5f\xc2\x0f\xbf\x6b\x03\x61\x3f\xde\xde\xde\xc0\xd6\xfd\xa8\xbb\x30\x58\x92\x0c\x2b\x6a\x78\xdb\x80\x2a\x80\xf1\x30\xb0\x82\x91\xb2\xb8\xef\xc2\x85\xef\x23\x09\xd7\xb0\xbd\x07\x8c\x8b\xa6\x15\x14\x16\xa4\xa8\x6d\x2a\x3b\x2f\xf7\x40\xea\xba\x64\x36\xd0\x9a\x97\x94\x48\x4d\xdf\xa7\x17\x00\x62\xd8\x3b\x82\xc3\x31\xe6\xac\x68\xde\x48\x3a\x7c\x6d\xe3\x81\x2c\x4f\x7b\x15\x29\x79\x4f\x65\x65\x74\x26\x55\x40\x79\x2e\xf7\x76\xc0\x8f\x10\x05\xa6\x4e\x81\x16\x1b\xba\x68\x1b\xa5\x29\x2c\x24\x48\xea\x20\x84\x23\x7b\x9c\x01\xf8\xe9\xeb\xd2\x87\xda\xc9\x58\x8b\x34\x7b\xdf\xbe\x5c\x42\x4d\x94\xd2\x5b\x29\x9a\xcd\x36\x84\x9a\x5c\x5a\x73\x02\x05\x2e\x68\x38\xdf\xd6\x70\x1f\x04\x6e\xb3\xcd\x65\xc1\x59\xf0\x2f\xa7\x58\x05\xec\x0e\x99\xc3\x7c\xd4\x69\xe6\xe2\x28\xa8\x3d\x26\x1c\x93\x39\x4c\xd3\x6a\x22\x36\xd2\x43\x7c\x90\xa7\xe9\x97\xe3\xed\xed\x8d\x9d\xd3\x2e\x32\x3b\x15\x10\xe2\xe1\xa2\x0d\xd7\x6c\xc8\x0e\xe3\xe2\x7b\x7e\xf8\xa9\x22\xef\x5f\x52\xbe\xd1\xdb\xe9\x00\x54\x0f\xe1\xf6\xbb\x60\xaa\x89\x37\xd2\xa1\xc4\x57\x93\x10\xa1\x0d\x90\x3a\x64\x31\x37\xc3\xca\x19\xd2\xfb\xcd\x2b\xf3\x19\x20\x91\x4f\xec\x00\x6c\x50\xc5\x02\xf0\xfb\xfe\x5a\x36\x1c\xb7\x8d\xc0\x9e\xd4\x98\x01\x31\x50\x9b\x53\x1e\xcd\x7c\x8f\x02\x46\x32\xf5\xfb\x4f\x3f\x41\x09\x33\xd0\x03\x92\x3b\x2a\xd9\x14\x04\x78\xa1\x95\xc5\x77\x06\x5a\xde\x98\x27\x2e\xdf\x3a\xe4\x3a\xec\x86\x74\x59\x09\x8c\xc3\x9b\xef\xaf\x66\x00\x7d\xfa\xcd\xf9\x37\x46\xf4\xa2\x6c\xfc\x2a\x7b\x3a\x4d\xb0\x9a\x68\x4d\x25\xbf\x80\x7f\xfe\xeb\xe2\xbf\x7c\xf1\x77\xff\xf5\xbf\x3d\xfc\xf2\x0f\xd9\x93\xc5\xdf\x5f\x2e\x7e\xf9\xe7\x77\xff\x8b\x2c\x7e\xfb\xdf\xff\xe7\x6f\x7f\xf8\xbb\x99\x74\x9f\xe1\x32\xcf\x71\xe5\x6c\x10\xcb\x71\xf8\x44\x3b\x43\xaa\x71\x51\x36\xc7\xa5\x03\x3c\xf0\x6d\x1c\x80\x0b\xc3\xa2\x63\x10\x2d\x3c\x22\x25\x49\xc7\x09\x5d\xea\xc0\x11\x5e\xa2\xff\x22\x25\xba\xdd\xdb\x4f\x2d\xbb\x8f\x00\xfb\x59\x78\x1f\x3e\x9f\x85\xf7\x34\xc4\xcf\xc2\xfb\xb3\xf0\x4e\xb7\xfb\xff\x50\x78\xcf\xf2\x12\x5f\x8a\xcd\xf7\x36\x78\x3a\xdb\x41\x6c\x3f\x39\xd8\xd3\xb2\x41\x58\x1f\xce\x1b\xf3\x90\xdd\x32\xb2\x3b\xbd\xbc\x67\xd3\x8f\x0a\xfa\x19\x30\xf1\x54\x8f\x75\xbc\xaa\xba\xc4\x7c\x44\xe2\x22\x2d\xfe\x3c\x06\x76\x87\xbb\x6f\x38\xe0\x34\x6f\xbe\xc5\xd3\x73\x3f\x5e\xde\x48\xf1\x7e\x9f\x06\x70\x0a\x8a\xda\x2e\x5d\x53\x28\x44\xde\xb4\x3d\xa7\x39\xcc\x10\xf3\xe2\xec\x2c\x5f\x09\xae\x69\xb6\x61\x7a\xdb\xac\x32\x26\xce\xb6\xa4\x36\x60\x16\x45\x2e\xf8\xee\xec\x69\xf6\xe4\xac\x97\x77\x95\x6d\x75\x55\x7e\xf1\x6d\xf6\x34\x4b\xef\x4c\x0c\xdd\x62\x3f\x3b\x29\xb7\x78\xe0\xdf\xa6\x1d\xf0\x99\x6e\xf1\x31\xa9\xcd\xe6\x39\xd2\x2d\xee\xb9\xbf\x49\xa0\x07\x6e\xf1\x0b\x0d\x85\x4f\x34\x24\xeb\x35\xcd\xb5\x67\x56\x4f\x20\x33\xfc\x03\x2f\x78\x0e\xf0\xa4\x1d\xf1\x51\x67\x14\x82\xe8\x7a\xe4\xfd\xc8\x02\x4f\xbe\xc2\x33\xb4\x35\xc9\xa9\x2f\x71\x33\x7e\x80\x6e\xd0\x3c\x3c\x37\xb7\x66\xa5\xa6\xd2\x95\x50\xc1\x85\xdf\x36\x1f\x72\xcf\xf4\x61\xd7\x0c\x6e\x0d\xa3\xda\x0e\xf0\xf8\xae\xe9\xce\xaf\xe2\x18\xf9\xd4\x96\xf8\xf3\x8f\xc9\xc3\x73\xdc\x8f\x93\xf1\xcd\x51\x47\xa7\x2a\xa2\xf3\xed\xf3\xf7\xb5\x19\xa5\x99\xe1\xc9\xcc\xa9\xc3\x0f\xec\x69\xdf\x92\x29\x24\x0d\xd6\x15\x02\x5f\x42\xc8\xcf\x7b\x85\x85\x2d\xa2\xac\x73\x8b\xe7\xa9\xbb\x56\x68\xb6\x5e\xbe\xba\x8e\x5b\x7d\x23\xa6\x6a\x6f\x90\x97\x23\x03\x71\x45\x3b\xfc\x1b\x1b\xf8\xb5\x11\xd1\x94\x34\xb0\x67\x20\x4e\x81\xc0\x1d\xdd\xdb\xe4\x58\xc2\xbb\x5d\x18\x17\xe7\x2f\xdb\x93\x49\x77\x74\x8f\x8d\x5c\x49\x93\x28\xd4\x69\xb3\xf5\x8e\x8e\x64\x61\xf4\xd0\x35\xfd\xb9\x1d\x2b\x8b\xb7\xf9\xa1\x0d\x3f\xb7\xa8\x3a\x81\x38\xa6\x6e\x93\xb9\x60\xb3\x8c\x0e\x4f\x91\x99\xc3\x6e\x09\xd8\x55\x3f\xb1\x24\x7e\xa8\x2c\x39\x0d\x7f\x6d\x59\x8d\xa1\xff\x91\x51\xbb\x65\xe9\x0b\xc8\xd8\x73\x2b\x1e\xb8\xe5\xa8\x17\xfc\xd4\xa8\x0a\xf3\xbf\xe7\xef\x99\xd2\x2a\x7a\x2c\xb8\x7b\xae\x05\x55\xaf\x84\xc6\xb6\x1f\x45\x12\x3b\xa8\x99\x04\x71\x67\xd0\x0c\x83\x72\x6b\xf4\x18\xbc\xc2\xfa\x32\x2a\xb3\x66\x03\x6d\xf1\x1b\x73\xec\x14\xbc\xe0\x46\x81\x38\xcc\x5b\x07\x41\x39\xe0\xde\x2a\xe6\x82\x2f\xd0\xf8\xf0\xd0\x47\x80\xb6\x93\xc6\x94\x27\xa5\x90\x3d\x7a\x25\x3a\x1a\x81\xb9\xa2\xe0\xba\x47\xd9\x68\xbf\xb1\xb5\x8a\x4a\x62\xa4\x69\x81\x59\xfc\xb6\xd6\x0e\xd1\x74\xc3\x72\xa8\xa8\xdc\x8c\x8d\xb3\x36\x72\x2a\x3d\x75\x93\x4e\xef\x2c\x1b\x7b\xca\x3c\x1d\xb7\xbf\x17\x86\xd7\x13\x6f\x46\xa7\x77\xc2\xe6\x1d\x1b\x15\x8a\xef\x97\x46\x48\x44\xb1\x27\x45\xc1\x6c\xca\xee\xcd\x84\x7c\x9a\xa0\xcf\x50\x67\xd8\x4e\xad\xf4\xad\x48\x6d\x38\xfb\x5f\x8d\x38\x45\x46\xf9\x37\xa8\x09\x93\x2a\x83\x4b\x2c\x81\x57\xc6\x67\x36\x6c\xef\x0a\xc7\x84\xa0\x0d\x54\x63\x46\xff\xda\xb0\x1d\x29\xfd\x9e\x21\x07\x5a\xa6\x4f\xec\x88\xf5\x40\xa3\x9d\xc2\xfd\x56\x28\xea\xea\xc6\x38\xdb\xfc\xe4\x8e\xee\x4f\x4e\x7b\x2b\x0f\x58\x5c\x94\x9e\xbc\xe0\x27\xa7\xbe\x5c\x4b\x7f\x1d\x78\x3d\x63\x0d\xd4\x13\x7c\x77\x92\x0d\x94\x60\x14\xec\xa8\x62\xfc\x20\x23\x49\x14\xf4\xc6\xac\x2f\xd3\xe7\x84\x81\x14\x36\x75\x39\xdc\xaa\x3d\x19\xe2\xad\x1b\x10\x3b\x6f\x28\xe5\x5b\x5a\x34\x65\x8c\x35\x9c\xe3\x94\x38\x08\xd2\x19\x38\x6d\x09\x86\x7e\x49\xb5\x57\xe1\x48\x06\xc0\x93\xd5\xd5\xfc\x33\x5a\x08\x46\x14\x49\x7b\x31\x4e\x92\xd0\x5c\x6c\x8f\x38\x1c\xa8\xdb\x22\xa8\x21\x11\x9d\xd7\xe8\x91\x92\x71\x73\xcf\x95\x35\x58\x51\x4d\xb2\xfe\x29\x41\x91\x58\xad\x25\xe3\xcd\x7b\x87\xe3\x42\x8a\x92\x1e\x7c\x77\x2f\xe4\x1d\x95\x17\xf0\xf0\xa1\xeb\xb7\xed\xb5\xad\xd6\x13\x85\xab\x0e\x0d\x66\xc3\xf6\x4e\x6c\xab\x70\xd4\x1f\x94\xeb\x3e\xc7\x38\x1d\xcc\xcc\x27\x36\x50\xe1\x68\x23\x15\xa6\xd5\xcb\xc7\x18\xab\x23\x3a\xab\x15\x2f\x47\x1a\xac\x23\x20\xe7\x98\xb2\x30\x3b\x0a\x3b\x6a\xd2\x0e\x08\xf3\xc9\xcc\x5a\x98\x30\x6d\x61\x7e\x4c\x6d\xda\xc4\x1d\xa0\x31\xd7\xcc\x9d\x44\x00\x39\xe1\x78\x53\x77\x32\x06\x5f\xcc\x34\x77\x8f\x20\xd3\x94\xd9\x3b\x20\xd2\x11\xa6\xef\x04\x3e\xa1\x81\x7a\xac\xf9\x3b\x01\xfa\xc0\xf4\x9e\x67\x02\x4f\x91\xbf\x37\x94\x79\x66\xf0\x04\xc8\x03\x23\x79\xca\x14\x86\x79\x7b\x40\x47\x84\x9d\xe7\x6d\xb9\x4d\x85\xa6\xd3\xe6\x31\x4c\x9b\xc8\x30\x2f\x18\x3d\x35\xd2\x09\x73\x19\x8e\x32\x99\x61\x1e\x0d\x7f\x17\xd3\x19\x7e\x1f\xf3\x19\x3e\xce\x84\x4e\xbb\x67\xea\xf7\x32\xa3\x61\xca\x94\x86\xb9\x0e\x56\xaa\x08\x87\x28\xdd\xb9\xc7\x19\xc7\x10\x83\xc6\x7d\x3b\x25\x7c\xf1\xf1\x86\xe4\x6d\x3f\x5a\x68\x26\xd5\x08\x1a\xec\x0d\x1b\x2c\x69\x9c\x6d\xe6\xd4\xa2\xe8\x85\xed\xcf\xcc\xc4\xe8\x05\xe1\xc5\xa2\x43\xe1\x2c\x66\xfc\xcd\x8d\xe5\x99\xb1\xd7\xa2\xb0\xf1\xfd\xdb\x16\x26\xe2\xa1\x35\xc9\x5d\x59\x3a\xd7\x5b\x52\xde\x12\xbe\x07\x1c\x9b\xb5\x20\x90\x63\x9d\x89\xaa\x25\xd6\x14\xfc\x87\x76\x79\x9c\x52\x0c\x9a\xff\xa3\xcb\xbb\x4d\xeb\x1c\x84\x62\x9a\xb4\x2a\xe1\x1f\xfc\xbf\xfe\xf1\x43\xc3\x7e\xb6\xef\x99\xb6\xe3\x73\x1b\xdd\xef\x17\x46\xb2\x68\x52\x17\xf8\x17\x76\x94\x19\x3c\x37\x53\x3e\x22\xb7\x6d\x3e\x31\x36\xc6\x62\x7a\x21\x18\xe5\xca\xc5\xb6\xde\xc0\xa9\xad\x39\x4e\x47\x0b\xc4\x38\xca\x4b\xe3\xb6\x2d\xad\x4b\x48\x4f\xe1\x06\xeb\x67\x76\xbf\xe0\x1a\x7f\x25\x9e\xbf\xa7\x79\x13\x2f\x7a\x63\x9f\x19\xa2\x73\x7e\xc8\xf4\x4f\x9d\x6d\x69\xf1\xec\xd9\x96\x1d\xeb\xce\x0b\x9a\x5a\xda\x26\x28\x78\x47\xf7\x5d\xd8\xce\xd9\xb4\x76\xab\x6f\x4e\x98\xcd\x5b\x06\xd6\xd0\xf8\xa3\xaf\x50\x50\xad\xfc\x79\x04\x97\x06\xee\xa6\x79\x6c\x1e\xca\xb2\x15\xa3\xc6\x21\x28\x4b\x3b\xb4\x7f\xc7\x88\xef\xeb\x23\x22\xbe\xe3\x96\x9e\xcb\x9e\x88\x19\xc0\x5d\x80\x17\x9e\xff\xda\x90\x32\x83\xeb\xae\x9c\xe3\x08\x48\xd7\xd8\x7d\x3e\xd0\x84\x6d\x75\x9c\xb5\x90\xbe\x9e\xb9\xab\x70\x39\x46\x74\x94\x5d\x39\xe1\xad\x80\xea\x38\x03\xcf\x81\x12\xa8\x89\xd4\x2c\x6f\x4a\x22\xc1\xac\xe1\x8d\x90\x23\x86\xe8\x8c\x39\xe9\x98\x77\x49\x73\xc1\x8b\xb9\x7e\xe8\xed\xe1\x77\xe1\x2c\x61\xb1\x28\x2a\x99\xb0\x85\x1b\xd8\x68\x1e\xc0\xc1\x12\x7a\x64\x37\x4a\xdb\xd3\x30\x6b\x2f\x9b\xda\x45\x7f\x6a\x8b\x0f\xde\x33\x35\x0e\x36\xdc\x2d\x67\x1b\x2e\x24\x2d\x1e\x77\x92\xbf\x5b\xcd\x19\x7c\xb7\xf7\x0a\x6f\x6c\x95\x31\xed\xab\x9c\x60\xbc\xc3\x8d\xd3\x2d\x28\x37\x5d\x9d\x88\x58\x0b\x89\x37\x02\x3c\x2a\xc6\xd8\x08\x6b\xa6\xec\x58\xae\x1f\x67\xf0\x0b\x95\x02\x19\x91\xd3\x0d\xd1\x6c\xd7\xda\x31\x5d\x86\x8e\x2d\xfa\x41\xc6\x04\xcc\x13\x78\x84\x00\x81\x55\x15\x2d\x18\xd1\xb4\xdc\x3f\xf6\x3b\x8c\x6a\xaf\x34\xad\xd2\x0c\x13\x1c\x1a\xfb\x26\x7d\x78\x6f\x4e\x26\x0f\x0e\x7d\x26\x2f\xfd\xec\x4b\xc7\x76\xd4\xb3\xa9\x49\x07\xac\xe1\xd4\xf0\x84\x74\x4d\xfa\x5d\x61\xd2\x53\x97\x37\x36\x2d\x5c\x3d\xb3\xc1\xbf\x18\x9e\x24\x20\x29\xde\xba\xe2\xd6\xd5\x47\xac\xbe\x0f\x8e\xcc\x27\x3f\xf4\xf7\xac\x8c\x06\x68\x7d\x23\x4f\x71\x5f\xda\xbe\x3b\xa9\x18\xbd\x5f\xc3\x7e\x34\x44\x37\x12\x85\xd5\x02\x06\xf9\x4d\x63\xe7\x11\xd3\x0c\x25\x45\xa3\xe9\x65\x51\x31\x75\x78\xb1\xc5\x00\xad\x93\x7e\xdb\xf6\x94\x86\x11\xaa\x25\xcb\xf7\x28\x8a\xb7\x84\x17\xa5\xbd\x5f\xe4\xde\x02\x1f\xe0\x93\x97\x84\x55\x0a\x1e\x99\xe6\xf4\x3d\xa9\x6a\x63\x86\xb4\xd7\xa6\x08\x63\x2f\xf3\xbd\x6f\x45\x72\x29\x94\x0a\x36\xf9\x1f\x47\xcb\xb5\x45\x8a\x05\xb7\xd5\xcc\xad\xbd\x6e\x03\xd6\x6d\x6d\x9e\x03\x5c\x6c\xd5\xee\x68\x04\xdb\x05\xaf\x81\xac\x44\xa3\x5d\xf1\x7d\xdf\xc9\xd1\xa5\xcd\x11\x87\xd7\xf7\x9c\x4a\xa3\x58\x67\xc4\xb5\x07\xdf\x1c\x14\x49\xb1\x75\xbb\x48\x45\x1d\xc1\xe2\x9b\x15\x87\x44\x0c\x96\x27\x4e\x98\x3b\xd5\x62\xe5\x44\xff\x9c\x64\x5c\xc4\xbc\xe5\xb0\x80\xa5\x96\x2c\xd7\x17\x70\x2d\x6c\x6e\x0b\xce\x1f\x12\x56\x19\x8f\xb6\x60\x6b\x5b\x99\x3d\xec\x18\xd3\x7f\x08\x1b\x16\xb4\x05\xa7\xa9\x94\xc1\xc5\x60\x95\xd9\x4e\xb0\x5e\xe7\x2b\x0f\xe0\xd2\x9a\xb9\x17\x70\x19\x76\x36\x0a\xb4\x1b\x46\x4d\xf4\xb6\xab\xf6\x60\xfa\x81\x80\x7e\x03\x22\x25\xeb\x02\x76\xcc\x76\x90\xf7\x61\x09\x72\x64\x21\xa4\x28\x82\xd1\x96\x16\x7c\x52\x90\x25\x04\xa1\xb7\x94\x6e\x70\x91\x4e\xb3\x5c\xbf\xfd\x01\xbb\x39\x82\x63\x41\x63\xdf\x30\xee\x59\x99\xaf\x59\x8c\xd3\x46\x6e\x5b\xc8\xda\xf2\x7e\xb6\xf3\x31\xc7\xda\x26\xdd\x89\xb5\x1f\xd2\x5f\xcf\xff\xe6\xeb\xc8\xa6\xd3\x7d\x6c\x59\xeb\xf8\xd6\xa3\x0d\xc1\x20\xb4\x87\xaa\xb3\x2f\xad\x6c\x43\x66\x34\x5d\x04\xb7\xb1\x6c\x9b\x55\x96\x8b\xea\xac\x2d\x73\x78\x46\x6a\x76\xb6\x2a\xc5\xea\xac\x22\x4a\x53\x79\x86\xc0\xce\x76\xe7\x67\x58\xad\x39\xdb\xc4\x0d\x15\x97\x37\x77\xd1\x5d\xed\xd4\xa7\x82\x3d\xa9\xea\x7f\x53\x8e\x43\x0c\xd3\xb7\xbf\x5d\x33\x45\x92\x8c\xe3\x0a\x75\xe5\xc4\x10\x8c\x14\x15\xd3\xc6\xc6\x09\x67\x92\x1c\xa2\x6b\xe8\xba\xf4\xc5\xea\xe3\x4b\x55\x80\xd2\xa2\x86\xb6\x8c\xda\xed\x96\x2a\xea\xa1\xb6\x25\xe1\x6d\xf9\x68\x1b\x2d\x3f\xe8\x23\x3e\x0b\x6b\x2c\x64\x6d\x3e\x58\x51\x3c\xad\xeb\x86\x3b\x92\xc1\x15\x54\x85\x1c\x61\x1b\x57\x39\x4d\x0d\x09\x69\x2c\xc2\x08\x25\xdb\x38\x37\x6e\xc1\x45\x61\x46\xea\xd3\xbf\x3d\x89\x80\x4a\x54\x39\x49\xcb\x84\xc3\x31\x8e\x37\x1a\x9d\xfd\x0f\xb9\x5d\x02\x67\x71\x5e\xb2\x5e\xaf\xe9\x78\xa2\x9e\xbd\xdc\xa6\x4d\xca\x1b\x8c\xf5\xc3\x93\xf4\x7c\x52\xde\x00\xe4\xe7\x24\xbd\xcf\x49\x7a\x71\x74\x3f\x27\xe9\x7d\x4e\xd2\x8b\x3c\x9f\x93\xf4\x3e\x27\xe9\x1d\xbe\xfb\x9c\xa4\xd7\x7f\xfe\x13\x27\xe9\xe9\x52\x2d\x69\xde\x48\xa6\xf7\x37\x52\xac\x59\x39\x71\xaf\xe0\xb0\x7d\x70\x7e\x49\x51\x6d\x8c\x17\xd5\x1e\xff\x18\x3b\x08\x83\x26\xcf\xf0\x22\xe5\x79\x77\xf8\x60\xd9\x93\x9a\xd9\xeb\xd8\x8e\x2b\xcf\xee\xef\xca\x3c\xa8\x7a\x71\xdf\x5d\x9c\x65\x80\xbf\x2e\x8b\x53\xeb\xc8\xba\x90\xa8\x9d\xcc\x9f\x44\x11\x2b\xcb\x57\x3b\x52\xa0\x57\x64\x47\x6d\x43\xd0\x6c\x47\xdb\x97\xbd\x7d\x4c\x2c\x8b\xdf\xd8\xcb\x39\x8d\xb3\x8f\xb5\x8c\x87\x06\x24\xd5\xf7\x94\x72\xa3\x08\x29\x51\x46\xf0\x7f\x1f\x86\x98\x36\x6c\x47\xb9\x11\x88\xbd\xeb\x27\xed\xfd\x0a\xb6\x24\x64\x80\x40\x72\xd0\xbe\x0e\xbb\xa1\xab\xeb\x08\xfe\x67\xf6\x4f\xd9\x2f\x06\x65\x68\xea\x8d\x24\x05\xb5\x77\xfd\x06\x2f\xff\x70\x0e\x55\x44\xb4\x38\x9f\x0c\x83\x65\x71\xc4\xad\x23\x14\xec\x39\xc7\x4d\xe4\x61\x7c\x55\x52\xd5\x94\x68\x1c\x33\x83\xb4\x69\xe6\xef\xe8\x0d\x4f\x69\x51\x5f\x6e\x0c\x39\xd0\xdd\x53\x1b\x72\xdb\x70\xcc\x1d\xfb\x99\x69\x39\xcf\xce\xbb\x95\xeb\x4f\xe1\x86\xb0\xb0\xcd\xd3\x0c\xe0\x92\xa3\xd1\xee\x08\x3f\x80\xdb\x5d\x89\xab\x30\xce\x71\x58\xb7\xc7\x32\x93\x3d\x27\x15\x30\x50\x57\x6d\x64\x00\x11\x5d\x91\x15\xb5\x44\x66\xda\xcb\x0b\x85\x30\xce\xb3\x67\x47\x59\xfd\xb6\xf6\xcf\x74\xf8\xc4\xd5\x08\x42\x99\x8d\x17\x2c\xfa\x83\xac\xa6\x53\xe5\x84\x81\xc7\x20\x83\xef\xe2\x62\x9b\xbe\xd7\x46\xb0\x95\x7b\xc8\x89\x44\x9f\xc7\x97\x52\x77\xf0\x3d\x09\x88\x02\xc6\xed\x29\xda\x1e\xe3\x24\x92\x12\x08\xb7\x47\xb9\x35\x51\x5a\x8a\x7a\xcb\xf2\xcc\xcc\x8b\x5b\x23\x87\xc0\x4b\x21\xee\x14\x94\xec\xce\x5e\x95\x9b\x0c\x05\x02\xe4\xac\xde\x52\xa9\xec\xbd\x5e\x0b\x78\x7e\x75\xfd\xe3\xf3\xc5\xf3\xab\xeb\xe5\xe5\xe2\xea\xc7\xcb\xab\x1f\x2f\x9f\x3e\x59\xdc\xbc\x7e\xf9\x4f\xe7\xcf\x9e\x7c\xdd\x6b\xf3\x26\xd6\x22\xde\xcf\xe1\x67\x97\xcf\x97\xe7\x4f\xbf\x5d\xfc\x70\xf5\xd3\x62\xf9\xe3\xe5\xd3\xaf\xbf\x89\x74\x3e\x68\x93\x02\x5d\x31\x7e\xfb\x72\xd9\xde\x8d\x7f\xfb\x72\xb9\x3b\xcf\xce\x63\x5e\xfb\xe4\x69\xd9\x29\x37\xc5\xd3\x2a\x61\x22\x1d\xb0\x93\x6d\x1c\x7a\xd6\xc1\x3d\xb0\x0e\x16\x90\x72\x23\x24\xd3\xdb\x44\xfc\x17\x30\xb6\x4a\x34\x2a\x44\x4e\x37\x42\x33\x7b\xcf\xa1\xb5\x11\x0d\x20\xc3\x9d\x5b\xc2\x0b\xb5\x25\x77\x34\x83\x76\x6f\x58\x45\xe5\x96\x7f\x24\xad\xc4\x8e\x02\xe5\x5a\xba\x13\xb9\x4c\x5a\x65\xcf\x0b\x05\x85\x8d\x0b\xbb\xc8\x4b\x06\x3d\x71\x9c\x1e\xa8\x15\xc8\xd7\xcf\x97\x8b\xab\xef\xae\x9e\x99\x79\x03\x78\xb4\x27\x55\xf9\xf8\x22\xca\x6c\x61\xcb\xd4\x89\xc8\x09\xdb\x75\xce\x3e\xee\x54\x6e\x5a\x8f\x81\x66\xcd\x6d\xef\x93\xd4\x0c\xa3\x78\x26\xa5\x17\xa7\x49\x14\x5c\x58\xdb\x89\x47\x2d\x72\x51\x82\x3b\xc6\x3a\x6b\xca\x93\x80\xbf\x3f\xd8\xa6\x31\x93\x13\xc8\x77\xa7\x01\xce\xb3\xa7\xa8\x05\xce\xb3\x67\x7e\xb2\x92\x10\x71\x12\xe3\x0b\x0e\xd5\xd3\xeb\xdb\xe7\x17\xc1\xcd\x2d\x58\xa5\x81\x6d\xb6\x87\xd7\x99\x27\xa9\xdf\x26\xc3\x30\x05\xee\xa7\xdb\x97\xcb\xf3\xa7\x29\xe6\x18\xbf\x30\x2c\x80\x90\x2a\x05\xdb\x6b\x94\xaa\xda\xd9\x6b\x94\x2a\x18\xda\x6b\x94\x3a\x6a\x3d\xc1\xad\xa3\xae\x0e\x0b\x6c\x9c\x69\x65\x16\xb6\xb6\x2a\x2d\xa6\xc5\x5a\x43\xf3\x22\xb5\x63\xe2\xa3\xe6\xf7\xec\x8e\x65\x95\xf8\x8d\x95\x25\xc9\x84\xdc\x9c\x79\xeb\xf8\xcc\x5e\xb3\xfe\x6e\xc9\x0a\xfa\xee\xf6\xe5\xf2\x8b\xd0\x16\x7b\x97\x8b\xaa\x26\x9a\xad\xb0\xbc\xf4\xbb\xec\xe9\xb7\x92\xe6\xa2\xaa\x28\x2f\x68\x91\x3d\xfd\xfb\x94\x5a\x32\xfc\x78\xa0\xc2\x46\x05\xc9\xed\xcb\xe5\xbb\xcb\xe7\xcb\x77\xe7\x4f\xbf\x7d\xf7\xc3\xd5\x4f\xef\xc6\x35\x46\xf8\xc5\xd3\xaf\xbf\xf1\x5f\x3c\xfb\xf6\xab\x00\x9c\x57\x6d\xef\xbc\x6a\x9b\x01\x74\x54\x7f\x01\x4c\x69\xc1\x23\x40\x3f\xfd\xfa\x1b\xff\x61\x37\xec\x1e\xe8\x7e\x8b\xb9\xa0\x3f\xb1\xca\x9f\x52\xf8\x47\x8f\x37\x2a\x7b\xa2\xe2\x61\x52\xd9\x8f\x2e\xb6\x0a\x4d\xd6\xe9\x65\x66\xdb\xcd\x5c\x60\x1f\xb0\x98\xac\xe9\xdc\x5f\x46\xff\x81\x16\x4d\x74\x3a\x9f\x75\xaa\xe4\xaa\x55\x25\x0d\x6f\xaf\x01\x8b\xee\xc8\x7c\xdc\x74\x8b\x32\x1a\xb5\xea\xcf\xb5\xb0\xc1\x91\xdf\x67\xa2\x5f\x97\xc5\xbb\x15\xc9\xef\xee\x89\x2c\xfe\xc3\x4e\xf7\x67\x19\x19\x01\xfd\xc9\x65\x64\xf8\xd1\xf8\x58\x7b\xb3\x30\x97\xbe\x6f\x0e\x3f\x19\x05\x69\x5f\x46\xa1\xc6\xc0\xc5\x61\x19\xbc\xc7\x67\xf1\xb8\x19\xec\x3e\x1a\x81\x37\x32\xf2\x31\x32\x0c\x01\x75\xef\x8e\xe2\xe6\x14\x07\xc7\x3a\xed\x75\x36\x01\xb4\x4f\xe9\x01\x29\xfa\xde\xdb\x1c\xe7\xc8\x4a\xed\x27\x9f\x5e\x2a\x1f\x77\x0d\xab\x2b\x0e\x1f\x09\x68\xba\xf8\x93\x90\x70\x85\x51\x92\xb8\xc7\x74\xd5\x46\x50\x76\xac\x70\x7b\x9b\xc4\x8a\xe0\xd0\xb3\xeb\xae\xed\xef\xe9\x81\xd4\xb6\x27\xea\x86\xee\xba\xa2\x6c\x38\xbe\x20\xde\x8a\x5e\xfe\x5c\xa8\xea\x63\x55\xce\x9b\xce\x14\x7f\x37\x23\x02\xe5\x8e\xbf\xb4\xbd\x9b\xb1\x1a\x2f\x83\x6b\x3b\x10\x97\xc5\x4d\xf7\x58\x40\xdd\x06\x7a\xdd\x49\xf6\x54\x96\x33\x51\x18\x3f\xf5\x91\x12\xbc\xab\x8c\xee\x68\x29\x6a\x97\xdc\x41\xdf\x33\x85\x91\xd0\xb0\xc9\x5a\x34\x3c\x79\x81\xea\xca\x0c\xca\x16\x9b\xca\x00\xae\x69\x4d\x39\x5e\xb2\x2e\x38\xd4\x92\xe6\x4c\xd1\x72\xef\xf2\x93\x43\x98\x6d\x1d\xfc\xf8\xf6\x8f\x00\x62\x10\xcf\xa9\x72\x51\x6f\x4c\x01\x70\x85\xe2\x25\x2d\x9a\x3c\x52\x5d\x9a\xa6\xa2\xe8\x21\x6b\xf4\x6e\x3a\x0d\x62\x2e\xfd\xf8\xa7\x4b\xae\xde\x53\x0d\xf7\xb4\x8c\x5f\x72\x43\x0a\x51\xbb\x7c\x1b\x33\xaf\x82\x83\x12\x6b\x7d\x6f\xb0\x2b\xd9\x4a\x12\xc9\x68\xbc\xee\x54\x3a\x99\xe5\x75\xb4\x60\xf7\x62\x3c\xdc\x6e\x1a\x24\x11\x5f\xb8\x65\x96\x14\x05\xc7\xa4\xbb\x44\x7f\x56\x9a\xe8\xa6\x17\x30\xea\x5f\x23\x86\xaf\x7d\x02\x41\x25\x94\xbd\x43\x04\xc9\x2f\x56\xf6\x3e\x44\xdf\xc8\x05\x66\x06\x75\x3a\x43\xf9\x91\x0a\x19\xb6\x0c\xf5\x66\x4e\xde\xf1\xa0\x35\xce\x78\x9b\x74\xdc\x0e\xac\xbb\xae\xc1\x27\x1d\x0f\x08\x49\xf2\x5c\x48\x64\xf9\xe4\x96\x43\x78\xef\xe5\xc1\xf7\x1f\x96\x8a\x9c\x0b\x6e\x77\x52\xc7\xb1\x3c\xe9\xda\xf5\x13\x69\x82\xdf\xdd\x7e\x04\x93\x6e\x12\xa2\xa9\x9c\x97\x2d\x19\xfc\xdd\x0d\x53\xd7\xb6\x9a\xee\xba\xab\x2e\x22\xd9\x10\x36\xb7\xc9\x90\x0d\xf3\xa2\xec\xc5\xad\x0e\xa4\xdf\x49\x53\xf0\x88\x65\xf4\x14\x32\x37\xb4\xc1\xac\x0d\xa0\xd2\x5f\x1b\x52\x2a\x77\x21\xb2\x9f\xb2\xc7\x4e\x94\x1a\xb1\x63\xfe\x6b\x77\xa1\x43\x3a\x58\x11\xe5\xcf\xa3\x0d\x55\xe3\x96\x06\x5c\x8a\x79\xf8\x31\x0a\xac\x29\xd1\xf6\xe2\x0d\x5e\xe0\xdd\x11\xa8\xcf\x58\x2c\x4d\x07\x5d\x86\xfe\x0d\xe4\x3f\xb9\x2b\x45\xd1\xdc\x97\x0d\xc5\xab\xf2\xc2\xbb\x57\x7a\x13\x27\x87\xa3\xac\xa8\xb6\xde\xc7\x97\xf6\x5e\x87\xe1\xc5\xee\xdd\x6d\xe9\xed\x16\x0f\xf1\x79\x66\x78\x99\xf0\x70\xab\xd0\x0d\x2e\xc3\x61\x7d\x4f\x4a\x85\xe3\x22\x7c\x6f\xd7\xab\x50\xf4\x60\x58\xc6\x77\x24\x9a\xa9\x35\xb3\x42\x7a\x88\xfa\x21\xe2\x6f\x28\x29\xf6\xb3\xd1\x46\x34\x63\x40\x0d\xd8\xcb\x83\x2b\x91\x99\xf2\x37\xb5\x66\x01\x65\x06\x6d\xa4\x19\x41\x64\x92\x3e\x14\x67\xec\xe9\xfa\xd5\xd2\x4d\x69\x1c\xf0\x6c\x64\x23\x73\x3a\xdc\x75\x8d\xcc\xb1\xe1\x42\x7f\x47\x77\x7b\x21\xee\xf5\xab\x65\x48\x8a\x19\x25\x20\x7b\x17\xae\xfb\x6f\x27\x6e\x2f\x0f\x6f\xa1\xb9\x7e\xb5\x1c\xc0\xc4\xdb\xd0\x3f\x9c\xa7\xcc\x10\x06\x30\xaf\x5f\x2d\x3f\x80\x93\x1c\x3e\xd7\xaf\x96\xb1\x9c\x8b\x03\xe6\x09\x2e\x7f\x87\x2d\xd9\x51\x58\x51\xca\x41\x35\x78\x7d\xc6\xba\x29\xcb\xbd\xbf\x0f\x39\xc0\x6d\x18\x5a\x9e\x8f\xeb\xa1\x01\x91\xd8\x9e\x89\x9e\x56\xbc\xf2\x60\xcd\xd4\xe1\x89\x21\x27\xc6\x78\x41\x64\xd1\xf5\xea\xce\x74\x0c\xd9\x7f\x7c\x7f\xae\x24\x4a\xdf\x4a\xc2\x15\x02\xb9\x65\xa9\x3a\xc9\x5e\xc7\x15\x44\xd3\x45\xd2\x36\x9d\x08\xd5\xbb\x02\xb2\x1f\x94\x2e\x24\x29\x51\x29\x67\x6a\xe2\xd3\xa1\x75\x33\xfb\xd3\xf4\xed\x5d\xa3\x1f\x4e\x26\xdb\x0c\x37\xd6\xec\xfa\x1c\x35\x05\xba\x25\x8c\x6e\x56\xae\x8d\x3f\xe5\x7f\xe4\xd0\xa8\xc1\xb6\x56\x72\x90\x5e\x02\xdd\xb4\x02\x67\xe9\xe4\xcd\xe8\x08\xd2\x9f\x1d\x8c\xaa\x95\x5e\xf1\x71\x8d\xf1\xe4\xb6\xbb\x01\x7b\xd2\x8f\x0d\xda\xa6\x2f\xf4\x0d\xae\xd4\x4e\x4b\x5e\x88\x4b\xdf\xf4\x9d\xbe\x01\xd4\x23\xd3\xad\x00\x35\x97\x57\x9b\x93\x38\x86\x8d\xd3\x48\xf6\x94\x61\xdc\x57\x4f\x61\x12\xb9\x9a\x3c\x06\x60\x6a\x9f\x5f\xe5\x22\x7d\xd3\x5d\xdf\x9d\x30\x2d\x0f\xca\x06\xd8\xdf\x30\xd5\xca\xd7\x35\xee\xa1\x94\xdc\x0a\x65\xca\x9f\x83\xc9\xe0\x46\x28\xc5\x8c\xb1\xda\xa6\xd4\x51\x38\x79\xfe\x5e\x53\xc9\x49\x79\x82\x9a\xf4\x04\xdd\x30\xf3\x67\x6a\x0b\x78\x7c\x7b\xd4\x7f\x9e\x6c\xe0\xbb\xfb\xb0\xcd\xcc\xf1\x5a\xc5\x48\xa4\x63\x99\x8d\xbb\x5b\xe1\x27\x19\xcd\x37\x4c\x33\xd9\xc1\x05\xf3\x9f\x70\x35\x1d\x40\x3e\x7a\x45\xd5\xf6\x5a\xfc\x49\x1c\x5d\xbb\x34\x8a\xee\x7e\xfd\x98\xd9\x1d\xe7\xfa\x49\xd4\x1c\xc4\xa3\x51\x3a\x2e\x90\x87\x47\xe4\x23\xd6\xa3\xcd\x60\xf0\x29\xef\x23\xe5\x32\x88\xa4\xee\x56\xc8\x88\x3c\x30\x2f\x9c\xcc\xa7\x29\xcf\x31\x0a\xd5\xa7\x71\xfd\xa9\x2d\xe1\xd2\x03\x0f\x7e\xbe\x31\xb1\x93\xfb\xfa\x12\x41\x58\x2d\x9e\x38\x33\xed\xbb\x36\x8a\x86\x77\x33\x72\x2b\xa9\xf1\xe8\xd6\x65\x14\x64\x6c\x58\x18\x68\x72\x87\xe4\xb5\xf0\xf4\x75\x79\xa7\x6d\x34\x20\x95\x05\xb0\xa4\xf4\x62\x56\x0d\x1b\xe7\xba\xa9\x45\x37\x4a\xff\xdb\xd9\x17\x46\x0a\x8e\x0a\x41\x9b\x12\xdb\x33\xef\x4f\xc3\xe3\x67\x9d\xb5\xdb\x9e\x11\x76\xf6\x70\x2a\x1c\x68\x19\xdf\x85\xe3\x62\x74\x79\x68\x64\xae\x15\x73\xee\x3e\x8c\xc0\xa4\x4e\x71\x57\xdb\xab\x5d\x20\x1c\xbf\x41\x0f\xa2\xbd\xfc\x62\xb5\x9f\xf2\x48\xa2\xc0\x6d\xa4\x00\x67\x27\xff\x45\x70\x1b\x87\x70\x3f\xda\xc5\x67\x7e\xed\x9d\x9c\xc3\xce\xed\x80\x92\x89\xdf\xbd\x28\x63\x17\x61\xc4\xe1\xbb\x2c\xe3\xcb\xbf\x2c\x4f\xe1\xf2\xb7\x46\xba\x0c\xe0\x1f\xae\x6e\x5a\x5f\x2d\x71\xaa\x07\x97\x58\x68\x92\xcc\x58\x5a\xa6\x3b\x2c\xef\x89\x47\xfa\xa2\x60\xef\x31\x34\x92\xf8\x9c\xa9\x36\x8f\xf7\x77\x5a\x69\xf6\x5c\x71\xcb\xbe\xa7\xb0\x12\x4d\xe2\xf8\x8c\x16\x01\x2e\xf0\xed\x13\x24\xdc\x57\x5f\x3d\xb3\x49\xee\x8d\xf2\xbe\x3c\xde\x36\x84\xda\x7c\x1d\xdc\x87\x9a\x92\xc3\x84\x77\x2c\xd9\x0f\x0c\x1c\x2c\xdc\x08\x32\x3b\x16\x3f\x3b\xd4\x56\x55\xc5\xa1\xba\xdb\x43\xbd\x82\x78\xcb\xf1\x48\x0b\x86\x98\xc7\xe1\x27\xf9\x20\x3e\x0d\x33\x49\x1e\x05\x1a\x13\x78\x96\x33\x5d\x30\xdc\x57\xcd\x2d\xf7\x7e\xd0\x86\x25\x3c\xe1\xa3\x30\xf1\x08\x50\x45\x78\x43\xca\xee\xab\xb1\xd3\xa9\x5f\x1e\x6a\xf3\x14\xfe\x93\x6c\x1f\xd1\x1e\x1e\x74\x42\xe2\x4e\x69\x93\x69\xe2\x26\xd4\x58\x5a\x9b\xb4\x43\x1a\xd7\x1a\x49\x0e\x0b\x35\xc9\xed\x36\xa8\xd9\x10\xac\x12\xdc\xe4\xd9\x73\x52\xb1\x1c\x67\x81\x94\xa5\xc8\x93\x17\x57\xae\xf6\xf0\xba\xa6\x7c\x69\x64\xe7\x1f\x61\x2b\xee\xe9\x8e\x4a\x4c\x66\xf4\xe1\x23\xe3\x11\xb3\xdc\x5e\x28\xee\x60\xd9\x73\x2d\x49\x2e\xb0\x5b\x53\xed\xd5\xc9\xed\xd8\xdc\xf9\x17\x17\xf5\xf7\x22\xfe\x90\x24\x71\x91\x65\xb4\x11\x1e\xeb\x93\xbb\x44\x82\x4a\x7a\x97\x25\x62\xa4\x44\xdb\x05\x92\x36\xfa\xde\x2d\xe7\xe8\xbb\x69\x36\x1e\xb1\xe6\x53\x96\x7c\xf4\xd6\xd9\xa4\x21\xe8\x37\x31\x7e\xa0\xdc\x55\xad\x19\xf5\xcf\x87\xcd\x23\x9b\x36\xb0\xe9\xde\xfa\x0f\x46\xb6\x34\x06\x85\x7b\xd2\x5b\x1a\x6a\xce\x19\xea\xb0\x6a\x33\x39\x38\x85\x7b\x6a\xec\x02\x77\x9a\xd1\xdf\xfc\x33\xef\x70\x06\xd4\xa2\x30\x4b\x54\x5a\xc5\x11\xee\xe5\x0c\xb7\xa2\x70\x9d\xd9\x9d\xa2\x01\x48\x7f\xdc\xcb\x00\x40\x98\xae\xa2\x03\xee\x4a\x04\x15\x7f\xc4\x7a\xb8\x01\x35\x3b\xfc\xa2\x4b\x35\xe7\x40\x55\xd7\xcc\x4f\x63\xff\xdc\xd4\xe1\xe1\x19\x9b\xff\x3c\x8c\x54\x72\x77\xe0\xe8\x98\x30\xcc\x48\xda\xfe\xc7\xa5\xec\xa7\x8b\x96\x7d\x60\xba\xbe\x4b\xcb\x8f\x82\xfc\x90\x54\xfd\x58\x4a\x7e\x5c\x85\x7d\x54\x9e\xfe\x48\x8e\xfe\xac\x8c\xe7\xc4\xe9\xcd\xa9\xd4\x93\xdf\x29\x27\xff\x77\xc9\xc7\xff\xe0\x5c\xfc\x58\xce\x7d\xb4\x87\x79\x79\xf8\xc9\x7c\xfb\x28\xcc\xa9\x1c\xfc\xb4\x52\x9b\xc8\xbd\x9f\xcc\xbb\x9f\xcc\xb9\x9f\xcc\xb7\xff\x24\xf9\x04\x07\x3f\xed\x7c\xa6\xea\xee\xbc\xfb\x0b\x39\xdf\xde\xe9\xe7\x5e\xd8\xed\x64\x5a\x04\x69\x4f\x4a\x0b\x49\x36\x3e\x11\xaa\x0b\xe3\x93\xdc\x38\xce\xb4\xc0\x32\x42\x96\x94\x77\x8c\x17\x17\x70\x62\xe9\x5d\x97\x8d\x24\xa5\xfb\x33\xd8\x67\x87\xbf\xfe\xed\x81\x85\x4a\x8b\x9f\xfd\x38\xcc\x8f\xff\x37\x00\x00\xff\xff\x55\x01\x3f\x04\x28\xb4\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 46120, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb0, 0x43, 0x39, 0xfd, 0x67, 0xfc, 0xe2, 0x1e, 0x48, 0xa6, 0x54, 0xe7, 0xef, 0x1f, 0x19, 0x43, 0x74, 0x6a, 0xd7, 0xc0, 0x68, 0xc5, 0xe7, 0xcd, 0x44, 0xf7, 0x3d, 0xb5, 0x6a, 0x3a, 0x5b, 0xd6}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x52\xc1\x6e\x1b\x3b\x0c\xbc\xef\x57\x10\x3e\x3e\x40\x9b\x17\x14\x05\x0a\xdd\x12\xb7\x48\x0f\x39\x04\x36\xd0\x02\xbd\xd1\xd2\x78\x23\x44\x16\xb7\x22\x37\x05\xfa\xf5\x85\xec\xed\xba\xa9\x4f\xbd\x05\xb9\xad\x38\x24\x67\x76\x38\x3c\xa6\x2f\xa8\x9a\xa4\x78\x0a\x59\xa6\x18\x2a\x22\x8a\x25\xce\xbd\x8c\x28\xfa\x98\xf6\xd6\x27\xb9\x7a\xbe\xee\x9e\x52\x89\x9e\xd6\x4b\x83\x6e\xf0\x7d\x82\x5a\x77\x80\x71\x64\x63\xdf\x11\x65\xde\x21\x6b\xfb\x22\x0a\x52\xac\x4a\xce\xa8\xce\x44\xb2\xf6\x4f\x1f\xb4\x4f\xe2\x69\x75\xdd\xff\xbf\xea\x88\x0a\x1f\xe0\x69\xe1\x71\xa9\x0c\x15\xaa\x33\xa2\x23\x87\x17\xf0\x51\xa0\x3b\x2b\x74\x32\xa2\xb2\x49\xed\x74\x44\x68\x9c\x8a\x50\x61\x1b\xec\x4f\x02\x4e\xfb\xff\x1e\xd3\x05\xbb\x60\x98\x05\x9c\x17\x13\x8d\x55\x9e\x53\x44\xdd\xce\x14\x44\xff\xe2\x59\xeb\x3f\xf9\x76\xf3\x75\xfb\xf0\xc7\xaa\x23\xa2\xc6\x86\x03\x8a\x7d\x2a\x56\x13\x66\xdb\x1c\x61\xbf\x47\x30\x4f\x37\x39\xcb\x8f\x63\x8d\x88\x83\x35\xc6\xf9\xe5\x08\x99\xd5\x52\xc8\xc2\x71\xc7\x99\x4b\x48\x65\xf0\x1f\xa1\xa1\xa6\x1d\xee\x85\xe3\xed\xb1\x8a\xaa\xcb\x48\x95\xc9\xf0\xfe\x9d\xbf\x4f\x6a\x9f\x45\x0d\xf1\x9b\x14\x5c\xe2\xeb\x47\x2e\x03\x36\x50\x99\x6a\xc0\x06\x41\x6a\xdc\xc2\xce\x8d\xc6\x83\xbf\x6b\x3e\x9f\x3a\x7e\x03\x75\x7e\x7b\x5a\xfd\xb7\xea\x9c\x73\xdd\xab\x8c\x97\xe3\x9f\x53\xc5\xdb\x0c\x59\xfb\xb3\x8b\x98\x55\xc9\xb8\x4d\x25\xa6\x32\x2c\x11\x6b\x35\x4f\xeb\x66\x61\xda\x4d\x4d\xc5\xeb\xbd\xd7\x10\xc6\x37\x79\xad\xbb\xf5\xc3\xc5\xad\xc6\x36\xb8\x4f\x05\x71\x23\x19\x2f\xce\xa5\x57\xb1\x68\xcf\xf1\x90\x4a\xf7\x2b\x00\x00\xff\xff\x8f\x64\x7a\x7c\xb8\x05\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1464, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x2c, 0xb5, 0xfb, 0x97, 0x77, 0x7d, 0xd7, 0x6d, 0x81, 0x2f, 0x39, 0x37, 0xcd, 0x2b, 0x82, 0x89, 0xac, 0x43, 0x14, 0x12, 0x84, 0x8, 0xf9, 0x32, 0x7f, 0xa9, 0x86, 0xe7, 0x98, 0x8d, 0x15}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\x51\xa8\x03\xa2\xdd\x7f\x80\x06\x89\xde\xb7\xf1\xdd\x99\xdb\xd8\x2b\xdb\x17\x7e\x1f\x45\x20\x88\x44\x69\x79\xde\xcc\xbb\x89\x2e\x15\xaf\xb4\x72\x0c\x6a\x5c\x68\xc8\x3b\x7b\x88\x69\xc5\xf6\x5c\x56\x4e\x5a\x28\xa9\x16\x80\x54\x2d\x29\xc5\x34\xf6\x13\xb0\xc1\x1a\x57\x39\xe7\xa3\xd8\x93\xda\xc2\x73\x70\xe7\x96\xe6\x15\xd3\x54\x80\x4e\x27\xee\x3f\xe1\x07\x50\xef\xf6\xf9\x07\xcd\xab\xa9\xa4\xb9\xe8\x05\x69\xe8\x66\x37\x9c\xcd\xf1\xc6\xbe\x49\xe3\x97\xef\x2f\xec\xf4\xc1\x2d\x03\xa2\xc8\xab\x04\xf4\x57\xf5\x9f\x42\xeb\xf7\x48\xf6\x43\x71\xc5\x94\x7e\xe7\xdd\x65\xe7\xea\x61\x5d\xf4\xe2\x1c\x31\xdb\x60\xa7\x34\x2f\x5f\x01\x00\x00\xff\xff\xf3\x40\x5a\x74\x0a\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x8c, 0x18, 0x1c, 0xe2, 0xe5, 0x97, 0x66, 0x8, 0xfe, 0x5b, 0x6, 0x60, 0x9d, 0x8f, 0xac, 0x16, 0x66, 0x66, 0x65, 0x25, 0xb3, 0x8f, 0xef, 0x71, 0x1d, 0x82, 0x2c, 0x1f, 0xa4, 0xd, 0x83}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xc8\x2e\x17\xdd\x02\x5d\xa0\x7b\x87\xee\x8c\xfc\x1b\x13\xb6\x45\x81\xa4\x5c\xa0\xa7\x0f\x92\x78\xe2\x7b\x0f\xc4\xe7\x2e\x3f\x30\x17\x6d\x85\xec\xc6\x75\xe2\x11\x8b\x9a\xfc\x73\x88\xb6\x69\xbd\xfa\x24\xfa\x71\x7c\xa6\x55\xda\x5c\xe8\x5b\x37\xa4\x1d\xc1\x33\x07\x97\x44\xd4\x78\x47\xa1\x6e\xba\x23\x16\x0c\xcf\xeb\xd5\xcf\xec\x9d\x2b\x0a\x69\x47\xf3\x45\x7e\x23\x4b\xbb\x1b\xdc\xb3\x76\x18\x87\x5a\xb2\xb1\xc1\x4b\xca\xc4\x5d\xbe\x4c\x47\xf7\xe7\x64\xa6\xcb\x25\x11\x19\x5c\x87\x55\x9c\xcd\x61\x87\x54\xf8\x4b\xd0\xe6\xae\xd2\xe2\x6d\x5d\xe7\x27\x1c\xb0\xdb\xf9\x7c\x47\xbc\xee\x26\xfe\x86\x3f\x8e\xba\xa4\x47\x00\x00\x00\xff\xff\xca\x87\x68\x45\xed\x00\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 237, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xfa, 0xc5, 0xb2, 0xce, 0xdd, 0xc0, 0x21, 0x49, 0xc0, 0x28, 0xa6, 0x7d, 0x8c, 0x46, 0xd4, 0xf3, 0x9d, 0x8, 0xb3, 0x2c, 0x8c, 0xac, 0x17, 0x87, 0xc8, 0x6c, 0x6a, 0x69, 0x5d, 0xef, 0x90}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\x06\xe0\x3d\x4f\xe1\x17\x48\x11\xdb\x29\x1b\x2c\xec\x87\xc4\xee\x4b\x7d\x57\xd3\xc6\x8e\x6c\xa7\x03\x4f\x8f\x2a\x55\x62\x02\x89\xd5\xb2\xfe\xff\xfb\xb1\xf3\x07\x99\xb3\x4a\x01\xbb\x61\x9d\x70\xc4\xa2\xc6\x5f\x18\xac\x32\xad\x17\x9f\x58\x9f\xf6\xe7\xb4\xb2\xcc\x05\xae\xba\xd1\x2b\xcb\xcc\xf2\x48\x8d\x02\x67\x0c\x2c\x09\x40\xb0\x51\x81\x6e\xda\x28\x16\x1a\x9e\xd7\x8b\x9f\x67\xef\x58\xa9\x80\x76\x12\x5f\xf8\x1e\x99\xe5\x61\xe4\x9e\xb5\x93\x61\xa8\x25\xd3\x8d\xae\x74\x3f\x72\xb0\xf3\x9b\xe9\xe8\x7f\x60\x12\xc0\x8f\xe5\xb7\x6a\x1f\xb7\x4f\xaa\xe1\x25\xe5\xf3\xfb\x9d\x6c\xe7\x4a\x2f\xb5\xea\x90\xf8\x27\xb9\xa9\x70\xa8\x1d\xab\xbf\x03\x00\x00\xff\xff\x37\x75\xb6\xb0\x31\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xb9, 0xd5, 0x57, 0xe3, 0x88, 0x98, 0x3e, 0x29, 0xea, 0xbf, 0x8c, 0x99, 0x2e, 0x96, 0xf8, 0xdf, 0xc2, 0x96, 0xd, 0xc7, 0x9e, 0xa3, 0x8b, 0x90, 0x2b, 0x7a, 0xa1, 0x1f, 0xfc, 0x4f, 0x3f}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\xae\xd5\x30\x0c\x86\xf7\x3e\x85\x5f\xa0\x0d\x88\x2d\x2b\x12\x13\xb0\x80\xd8\x53\x9f\xff\xb6\xe1\x34\x76\x64\xbb\x7d\x7e\xd4\xf6\xdc\x09\xdd\xd1\x7f\xbe\xfc\xfa\xe2\x94\x5e\xff\xc0\xbc\xaa\x64\x6a\x2a\x35\xd4\xaa\x2c\x13\xab\x41\x7d\x62\x6d\xe9\xf8\x3c\x3c\xab\x3c\x32\xfd\x82\x1d\x95\xf1\xe3\xa6\x86\x86\x28\x8f\x12\x25\x0f\x44\x52\x1a\x32\x55\x59\x0c\xee\xa3\x76\x58\x39\x91\xfb\xc0\x7b\x61\x64\xd2\x0e\xf1\xb5\xbe\xc5\xf8\x1f\xe7\x1d\x7c\xd6\x40\x1e\x5d\xab\x84\x9f\xc3\x48\x33\x8a\xc1\x7e\xeb\x13\xf2\xad\x6e\xc8\x94\x8e\x62\xc9\x76\x49\x0e\x36\x84\xa7\xe7\x3e\xc3\x04\x01\x9f\xaa\x26\xbf\x05\x0b\xb3\xee\x12\x29\xce\x8b\x03\x11\x51\x95\x80\x1d\x65\xcb\xf4\xe5\x93\x5f\x49\x57\x8b\x4c\x0d\x61\x95\xef\xc4\x79\xc5\xf9\x88\x35\xa2\xdf\x49\x6c\xfe\x55\xe5\xad\x2e\xf9\x1a\x89\xb8\xbc\x34\x10\x9c\xba\x69\x43\xac\xd8\x3d\xf1\x45\xb5\xd2\xfd\x56\x90\x65\x64\x58\xf8\xc8\x65\x9c\x77\x79\x6c\x78\x57\x1b\xb9\x4c\x6c\xf1\xea\x3b\x43\xd8\xcf\x6b\x77\x2f\x95\xe9\xe3\x2d\x4d\x7e\xf0\x40\xf4\x57\xe7\xef\x65\xc6\x96\x89\xb5\x75\x15\xc8\x59\xe7\xd8\xc0\xa1\x76\xab\xb6\x12\xbc\x5e\x94\xbf\xbb\x7f\xf0\x43\xff\x02\x00\x00\xff\xff\xf3\xaa\xe4\xf4\xff\x01\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xe6, 0x77, 0x40, 0x4f, 0x55, 0xae, 0x76, 0xce, 0xd1, 0x27, 0xf5, 0x2e, 0xec, 0x50, 0xfd, 0xf9, 0xf5, 0x2, 0xcd, 0x27, 0xfc, 0x51, 0x80, 0xdf, 0x29, 0x71, 0xe1, 0xca, 0xa7, 0x73, 0x22}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\x4b\xcc\x17\xc4\x86\xb2\x01\x03\x7b\x91\xd8\xdd\x9c\xdb\x33\xbd\xda\x91\xed\x74\xe0\xd7\xa3\xe8\x0a\x4b\xa5\x8a\xd9\x7e\xef\x7d\xdf\x03\xbc\xb2\xcc\x0e\xb1\x10\x68\x23\xc3\x50\x83\xba\x76\x0f\x32\x30\x5d\x09\x42\x81\xc3\xe1\x83\xec\xc2\x95\xe0\xa5\x56\xed\x12\x39\x9d\x58\xe6\x02\x6f\xdb\xeb\x4e\x57\x1a\x45\x2c\xc7\x84\x8d\x3f\xc9\x9c\x55\x0a\xd8\x1e\x6b\xc6\x1e\x8b\x1a\x7f\x63\xb0\x4a\x3e\x3d\x7b\x66\x7d\xbc\x3c\xa5\x33\x05\xce\x18\x58\x12\x80\xe0\x99\xca\x20\x10\x5f\xf8\x10\x13\xcb\xd1\xc8\x7d\xfa\x65\x4a\xde\xf7\x5f\x54\xc3\x4b\x9a\x60\x9b\xbe\x12\x5d\x81\xfe\x3a\x6e\x92\xdb\xc1\x1b\xd6\xfb\x0b\xc3\x76\x47\x87\x41\x73\xe3\x96\x00\xb0\xf1\xbb\x69\x6f\x77\xa4\xfe\xe3\xf1\x13\x00\x00\xff\xff\x5e\x3a\x23\xb1\x71\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 369, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x8e, 0x10, 0x4b, 0xec, 0x40, 0x80, 0x5c, 0x10, 0x83, 0xa9, 0x57, 0x2, 0x49, 0x9d, 0x4e, 0x4d, 0x6a, 0xec, 0xaf, 0x5d, 0x81, 0xa3, 0x2f, 0x1e, 0xd3, 0x8b, 0x69, 0xa0, 0x39, 0x50, 0xdf}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\x93\x98\x13\xc4\x86\x6e\x83\x85\xbd\x48\xec\xee\xc5\x6d\x4c\x5b\xfb\x64\x3b\x1d\xf8\xf5\x28\x22\x88\x01\xc1\xd2\xd9\xb6\xde\xf7\x7c\x87\x67\xd1\x29\x90\x33\xc3\x3a\x3b\xa5\x39\xdc\xce\x8c\x34\x48\x06\x5e\xd9\xaf\xd2\x18\x4f\xad\xd9\xa2\x39\x96\x93\xe8\x54\xb1\xb3\x33\xaf\x97\xa2\xc7\x42\x5d\xde\xd8\x43\x4c\x2b\x7c\x4f\x6d\xa4\x25\x67\x73\xf9\xa0\x14\xd3\xf1\xf4\x18\xa3\xd8\xfd\xf5\xa1\x5c\x38\x69\xa2\xa4\x5a\x00\xa5\x0b\x57\x88\x1e\x9d\x23\x86\xef\xe8\x6d\x10\x9d\x1a\xd7\x15\xa4\x31\xcb\x21\x87\x5f\x7b\xb1\xec\xdf\xb9\x65\xd4\x32\xe0\x4b\xb4\x41\x37\xe7\xed\x09\xeb\x13\x76\x7c\x58\xad\x3f\x95\x0b\x40\x5d\x5e\xdc\x96\xfe\x4f\xd7\xbf\xc3\x3f\x03\x00\x00\xff\xff\x1f\x8f\x27\xc8\x6f\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 367, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x6b, 0xe2, 0x98, 0x77, 0x85, 0x4, 0x5f, 0x81, 0xee, 0xa8, 0x60, 0xbe, 0x8a, 0xf3, 0x3, 0xad, 0xd8, 0x7, 0x27, 0x33, 0x11, 0xe8, 0x28, 0x66, 0xe4, 0xd9, 0x9, 0x76, 0xee, 0x60, 0xb5}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x70\xb7\x02\x56\xd1\xad\xd0\x05\xba\x77\xe8\xce\xc8\x74\x42\x44\x12\x05\x52\x36\xd0\x9e\xbe\x88\x63\x1b\x41\x3c\x74\x13\xc5\xf7\x9f\x3e\xf4\x02\x5f\x92\x08\x46\x51\x68\x17\x02\xa9\xa4\xd8\x44\x81\x9b\x51\x1a\xbd\xbb\x72\x19\xc2\xc2\x38\xac\xfc\x4d\x6a\x2c\x25\x80\x9e\x30\x7a\x9c\xda\x45\x94\x7f\xb1\xb1\x14\x7f\xfd\x30\xcf\xf2\x36\xbf\xbb\x4c\x0d\x07\x6c\x18\x1c\x40\xc1\x4c\x01\xb8\x9c\x95\xcc\xfa\x4d\xbf\x2e\xac\x62\xa4\x70\x7b\xb4\xd8\x85\xc7\xd6\x1f\x38\x9d\x12\x59\x70\x3d\x60\xe5\x4f\x95\xa9\xda\x4d\xda\xef\x3d\xfd\x9e\xf5\x2c\x0e\x40\xc9\x64\xd2\x48\x2b\xd6\xbd\x76\x0e\x60\x26\x3d\x3d\x5c\x1c\x6d\x5d\x77\x8c\x56\x19\x6c\x39\x18\xe9\xcc\x91\xee\x03\x95\xa1\x0a\x97\x76\x9f\xea\xed\x3b\xac\x51\x69\xb3\xa4\x29\x53\x4c\xc8\x79\x05\x67\xda\xa8\x28\x65\xe4\x73\xc6\xba\xf9\xa2\xd2\xb2\xfa\xb7\x17\xd6\x25\xf3\xd4\x6c\xa0\x9a\xe4\x27\xef\xfe\x87\x82\x4f\xc6\xbf\x00\x00\x00\xff\xff\x4f\x96\x11\xa4\xdd\x01\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 477, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xf1, 0xe, 0xa2, 0x89, 0xa6, 0xa5, 0x86, 0x8d, 0x2d, 0x22, 0x6e, 0x62, 0x6c, 0x7c, 0x58, 0xca, 0x7b, 0x96, 0x5f, 0xa7, 0xbd, 0x5f, 0xcb, 0x2d, 0x53, 0xeb, 0x25, 0xd3, 0x62, 0x2c, 0xf8}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\x84\x30\x10\x44\x7b\x7f\xc5\x48\xd4\x20\xa5\x75\x97\x32\x75\xa4\xf4\x96\x3d\x84\xd5\x81\xed\xdb\x5d\xf8\xfe\x13\x88\xab\xae\x9e\xa7\x37\x6f\xc0\x77\xce\x6d\xaf\x8e\xb9\x29\x7c\x21\x5a\xa7\x26\x6f\x0a\x71\xe3\x3a\x4f\xf8\x71\xd8\xd2\xf6\xb5\x40\xf9\xdc\x45\x89\x9a\x36\x5a\x4f\x99\xb0\xdc\x3a\x4b\x18\xd0\xa9\x9b\x98\x49\xab\x36\x85\x87\xd4\x12\xf1\x4b\x3d\x24\xf3\xf6\x87\xd4\xe5\x8f\x7a\x12\x11\xc7\x57\xd8\xe8\xa9\x24\x4f\x31\xe0\xf2\x45\x48\xfd\x57\x9a\x8d\xef\x80\x7b\xb8\x8e\xe2\x99\x55\x6d\x91\xd9\xc7\x0f\xee\x15\x00\x00\xff\xff\xe5\x09\x18\x74\xc4\x00\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 196, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0x8d, 0xe1, 0x55, 0xc4, 0xdf, 0x60, 0x69, 0xa, 0xef, 0xf1, 0x8c, 0x61, 0xea, 0x45, 0xf4, 0xa, 0xcb, 0x9d, 0xc7, 0xc3, 0xb4, 0x10, 0x8a, 0xb6, 0xf3, 0x21, 0xe6, 0x97, 0xc0, 0x28}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\x03\x41\x0c\x85\xfb\x39\x85\x2f\x30\x8b\x50\xaa\x4c\x4b\x45\x17\x09\x89\xde\x99\x3c\x96\x11\xb3\xf6\xc8\x36\x91\xb8\x3d\xca\xee\x02\x45\x0a\xca\xe7\xef\xfd\x98\x47\x7b\x85\x79\x53\x29\x74\x7d\x4c\x1f\x4d\x2e\x85\x5e\x60\xd7\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\x16\xd1\xe0\x68\x2a\x7e\x93\x44\xbe\x99\xa6\x33\x82\x27\x1d\x10\x7f\x6f\x6f\x31\x35\x7d\x58\x89\xcc\xb9\xc2\x22\x3b\xaa\x21\xb2\xf0\x82\x42\x0b\xc2\x5a\xf5\x1c\xdd\x13\x51\xe7\x33\xfa\xde\xb6\xf1\x26\xb3\xc1\x3d\xeb\x80\x71\xa8\xa5\x1f\xb0\x07\x77\xed\x83\x2b\x0a\xfd\x8e\xe6\xbb\x9c\x0f\xd4\x5b\xf1\x50\x8b\x75\x21\xdf\x15\x6d\xb0\xd0\xf1\x70\x3c\xac\x32\xd8\x66\xc4\x69\x3d\xfe\xd9\x1c\x1d\x35\xd4\xfe\x79\x33\xbe\x06\x0a\x3d\xf5\x4f\x0f\xd8\xf3\x29\x7d\x07\x00\x00\xff\xff\x31\x2a\x66\x9a\x58\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 344, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x93, 0xf5, 0x35, 0x51, 0xf2, 0xbd, 0xe6, 0x30, 0xc3, 0xd3, 0x25, 0x22, 0x49, 0x95, 0x6a, 0x8f, 0xa2, 0x8a, 0x9c, 0x67, 0xa6, 0xe4, 0xd, 0xee, 0x77, 0x40, 0x1c, 0x28, 0xe7, 0x40, 0xa3}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x21\x99\x9d\x0f\xdf\xaa\xb5\x73\xb7\xa2\x3b\x23\xd3\x36\x1b\x99\x14\x44\xba\x45\xdf\xbe\x48\xed\xfe\x1b\x79\xe4\x1d\x7f\xb8\x33\x9e\x16\x86\x72\xbc\x59\xbf\xc1\x1a\x77\x0a\xeb\x10\x47\x67\x6f\xa6\x2e\xd7\xca\x98\xee\x92\xbe\x70\x09\xd1\x39\x9d\x11\x0b\x23\xfa\xe6\xc1\x23\x0a\xe1\xba\xe9\x58\x19\xa2\x61\x88\x45\x1c\xc5\x74\x92\x79\xa5\x76\x49\xd4\xe4\x99\xbb\x8b\x69\xc6\xeb\xff\x74\x13\x1d\x33\x1e\x3e\xf7\x8f\xd4\xd2\xca\x41\x23\x05\xe5\x04\x90\xaa\x05\x85\x98\xfa\x7d\x04\x3a\x57\x26\xe7\x8b\x35\x56\x5f\x64\x8a\x8b\xd8\xbf\xd2\x99\x82\x07\xd3\xfa\x9e\x71\x8a\xbe\xf1\x29\x01\x95\xae\x5c\x0f\xdb\xfe\xfd\xaf\x6b\xa7\x1f\x0e\xe8\xa1\xd0\xce\xfc\x2b\x41\x69\xe5\x8c\x9f\x83\x43\xf2\x46\x85\x33\xbe\xc3\x06\xd1\xb9\xb3\xfb\xf0\xd5\x55\xfa\x08\x00\x00\xff\xff\x4c\x3f\xbd\xa8\x43\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x99, 0xa0, 0xf5, 0x24, 0x3, 0x8, 0xa4, 0xc3, 0xec, 0x80, 0xc0, 0x88, 0xbd, 0x8, 0xb0, 0xfc, 0xf0, 0x3, 0x42, 0x53, 0x21, 0xf3, 0xbb, 0x4a, 0x33, 0xfd, 0x7, 0xa3, 0x23, 0x4, 0xfa}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\x20\x8c\x3d\x6c\xc0\x68\x39\x69\xd7\xad\x04\xf2\xe0\xb9\x6a\x13\x20\x4e\x83\x38\x68\x1f\x0d\x9a\x3a\xdb\x9c\x29\x92\xbd\x3b\x19\xd1\xbf\x1f\x28\x3b\xb6\x2c\x3b\x6e\x1e\x36\x3d\x09\xe4\xf7\x7d\xfc\xee\x74\x77\xa2\x8e\xf6\x1b\x20\xd9\xe0\x95\xd0\x31\x52\xb6\xbe\xbc\x58\x59\x5f\x28\xf1\x09\xa2\x0b\x75\x09\x9e\x2f\x4a\x60\x5d\x68\xd6\xea\x42\x08\xaf\x4b\x50\xc2\xfa\x05\x02\x91\x0c\x11\x50\x73\xc0\xed\x06\x45\x6d\x40\x89\x10\xc1\xd3\xd2\xce\x59\x9e\xc0\x69\xef\x03\x6b\xb6\xc1\x53\xd2\x13\xc2\x04\x3f\xb7\x8b\xfe\x8e\xd4\xb7\x21\xb3\xfe\x1f\x30\x2c\x23\x86\xe7\xfa\xc4\x69\x14\xc1\x24\x32\x42\x74\xd6\x68\x52\xe2\xf2\x42\x08\x62\xd4\x0c\x8b\x7a\x23\xcb\x75\x04\x25\x1e\xc1\x20\x68\x86\xb4\x0d\x0e\x0c\x07\xdc\x6c\x97\x9a\xcd\xf2\x4e\xcf\xc0\x6d\x6d\x9c\x09\x8d\xa1\x8c\x4e\x33\x6c\x99\xad\x6c\xa4\xc7\x1d\x88\x9c\x91\x11\xe2\xc5\x77\x03\x0b\x05\x4c\x0e\x2c\xa5\x67\x55\xcd\x00\x3d\x30\x50\x4a\x43\x20\x25\x9c\xf5\xd5\xf3\x5e\x3c\x14\x20\x31\x38\xe8\x1f\x22\x4b\x4d\x0c\xa8\x44\xaf\xb7\x85\x72\x70\xe9\xe0\x7d\x9a\x85\x90\x62\x05\xb5\x12\xbd\xf3\x1a\xbd\xdd\x59\x2f\xd6\x95\xe8\xe5\xcf\x96\x98\xf6\x5b\x30\x9f\x83\x61\x25\x7a\xf7\x61\x62\x96\x50\x54\x0e\x7a\x27\x4e\xe9\x1c\x50\x79\x04\x6d\x96\x7a\xb6\x47\xbf\xf5\x94\xfc\x19\x4c\xc5\x2d\xda\x3e\xbe\x09\x98\xe0\x8b\x54\x03\x57\x83\x9f\x7b\xf0\x81\x25\x82\x2e\xea\xff\xd7\x01\x01\xae\xad\x81\xa1\x31\xa1\xf2\x7c\xff\x7a\x49\x08\x11\xd1\x06\xb4\x5c\x8f\x9c\x26\xda\x20\xa9\x26\x86\x52\x1a\x57\xa5\x2f\x22\x0d\x5a\xb6\x46\xbb\x2d\xc1\x04\xcf\xda\x7a\xc0\x56\xd1\xc9\x73\x65\xb7\xf5\x0b\x58\x5a\xdf\x18\x1e\x03\x91\x5e\xc0\x43\x70\xd6\xd4\x4a\x7c\xd6\xce\xcd\xb4\x59\x3d\x85\xbb\xb0\xa0\xaf\x3e\x47\x3c\x60\xda\x32\x81\x2b\xe7\x5e\x08\xb7\xf3\xfb\xc0\x0f\x08\x94\xa6\x43\x07\xd7\x6a\xff\x2c\xa0\x5d\x58\xbf\x8b\xa3\x6b\x4e\xa5\xa6\xa2\xb6\x82\x09\x65\xa9\x7d\xa1\x5a\x4b\xf2\x5c\x4c\x52\x10\x6b\xe4\x83\x15\x29\x77\xa3\xe8\x60\xbd\xf7\xcb\xaf\xdf\x87\x4f\xa3\x9b\xe9\xfd\x70\x9c\x4f\x1e\x86\xa3\xfc\xb7\x5e\x87\xd8\x04\xd0\x25\xdd\x8e\x87\x5f\x8e\xa1\x08\x0e\x34\x81\x5c\x6f\xa6\x67\x97\xf4\x98\xdf\xe5\xc3\x49\x3e\xfd\x96\x3f\x4e\x6e\xbf\xde\x1f\xd0\xc1\xaf\xdb\x01\xee\x3f\x5e\x87\x74\x80\x11\x62\xad\x5d\x05\x4a\xf4\x06\xfd\x41\xff\x52\x92\xd7\x91\x96\x81\x7b\x27\x95\x3a\x81\x9e\x52\xfa\x8c\xa1\x54\x9d\x0d\x21\xe6\x16\x5c\xf1\x08\xf3\xe3\x9d\xed\xde\x83\xe6\xa5\xda\xcd\xc0\xfe\xa9\x54\xef\x6d\x34\xa9\x3b\x1d\xc6\x51\x91\x2c\x75\x33\xed\x25\x86\x2a\x4d\xb2\xf5\xfb\xfe\xa0\xc5\x44\xa0\x50\xa1\x01\x3a\x34\x86\xf0\xa3\x02\x62\xea\xda\x35\xb1\x52\xe2\x72\x50\xb6\x96\xd7\xc1\x55\x25\x8c\x53\x3b\xd2\x61\x7d\x6d\xbc\x32\xa6\x22\x2d\xa4\xd1\x07\x5a\x65\x22\x6c\x82\xce\x80\x4d\x16\x57\x36\x33\x5a\x36\xe8\x0c\x9e\x19\xb5\x61\x28\xb2\x08\x65\xc7\x98\x2e\xbe\x7a\x57\x37\xba\x70\xd4\xa6\x69\x26\x49\x9c\x69\xb3\xf9\xc5\x1d\xf7\xd0\x8f\x4a\xd7\xcd\x1f\xa0\x9b\xa6\x0e\xf3\xb8\x85\x34\x2e\x3a\xf1\x49\xe9\xc2\x82\x03\x71\x01\x88\x9d\x1d\x02\x53\x21\x48\x67\x89\xc1\x4b\x5d\x14\xa9\xd3\xae\xd5\xc7\x77\x1f\xdf\x75\x90\xec\x48\x1a\x1b\x97\x80\x92\x2a\xcb\x40\xd7\x4f\x77\x93\x69\x3e\xfa\x74\x93\x4f\x1f\x27\xc3\xe9\xf7\xdb\xa7\x9b\xe9\x30\x9f\x4c\x2f\xaf\xfe\x9a\x7e\x19\x8d\xa7\x93\x9b\xe1\xd5\x1f\x1f\x7e\xdf\xa3\xf2\xd1\xa7\x9f\xe0\x8e\x74\x46\x7f\x8f\xde\xa4\x73\x12\x77\x46\xad\x13\x5b\x15\x89\x11\x74\x79\xbd\x64\x8e\x2a\xcb\x2e\xaf\xfe\xec\x37\x6d\xa6\x3e\x0c\x06\x83\x41\x76\x2a\x15\x80\x2c\xe7\xd6\xc1\x75\x53\x16\xec\x28\x8b\x68\xd7\x9a\x21\xbd\xf7\xcd\xd1\x50\x4a\xa4\x2d\x42\xae\xa0\x3e\xc3\x5d\x41\xbb\x20\x62\xc0\x6e\xc1\xee\x7e\x00\x0f\x01\x59\x89\xce\xc7\x7a\xb9\x81\x94\xc0\x68\x0d\xfd\xa7\x4d\x24\x9a\xfb\x4f\x19\xb0\x56\xe2\xfd\x60\x6c\xdf\xd4\x5f\xdd\x16\x6a\xc5\xfb\xba\xed\x94\xaf\x9f\x77\xd4\xe6\xd0\xd6\x0d\xe7\x75\x0d\x4a\x37\x41\x6e\x3b\xdb\xac\xdc\xbf\xc2\x38\x33\x17\x36\x37\xd6\xb1\x8e\x6d\xb5\x33\x53\xc4\x32\x94\xd4\x1d\xf9\xcd\x0d\xc5\x68\x39\xab\x7c\xe1\xa0\x53\x30\xe9\x89\x4d\xc6\x9a\x5a\xdb\xa1\xd2\x98\xf9\x37\x00\x00\xff\xff\x62\x28\x75\x1a\xb3\x0b\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 2995, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xb3, 0xcc, 0x34, 0xd9, 0x3a, 0xec, 0x8d, 0xd5, 0x2d, 0x95, 0xf6, 0x2c, 0x82, 0x27, 0x83, 0x59, 0x81, 0x59, 0x76, 0xf7, 0xee, 0x34, 0x42, 0x3a, 0xc0, 0x78, 0xa8, 0xa2, 0x50, 0xf3, 0xb7}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x6f\xc2\x40\x0c\x85\xf7\xfb\x15\x4f\xb0\x96\x14\xd6\xac\x4c\x9d\x58\x2a\x76\xf7\x62\x38\xab\x89\x1d\x9d\x7d\x20\xfe\x7d\x45\x00\xb5\xea\x4d\x4f\x67\xfb\x7d\xdf\x1a\x9f\x45\x1c\x95\xdd\x5a\xcd\x0c\x71\xa8\x05\x72\x65\x0a\x1e\xf0\x75\xc3\xfe\x78\x78\x83\xc4\x7d\x62\x3a\xde\xd0\x9c\x07\x90\x83\x90\x6d\x9a\x9a\x4a\xa6\x10\xd3\xb4\xc6\xc4\xb9\x90\x8a\x4f\x08\x43\xf0\x38\x22\x0a\xdf\xef\x71\x2d\x92\x0b\xf6\x63\xf3\xe0\x7a\x98\xb9\x52\x58\xfd\x85\x86\xe1\x4a\x12\x38\x59\xed\xd2\x1a\x1f\x7a\xae\xec\xbe\x37\x8d\x6a\xe3\xc8\xf5\xa9\xe3\x20\x1d\xd0\xe6\x61\xc9\xf1\xd7\xbb\x4b\x34\xcb\x91\xab\x8b\x69\x8f\x6c\x7a\x92\x73\x67\x33\xab\x17\x39\x45\x27\xf6\x7e\xd9\xa5\x6f\xd1\xa1\xff\x6f\x91\x26\x0e\x1a\x28\xa8\x4f\x80\xd2\xc4\x3d\xe4\xc1\x4f\x1e\x14\xcd\xef\xff\x97\x47\xf3\x92\x81\xcd\x73\xcf\x5e\x15\x58\xde\xe5\x85\x5f\x6d\xbb\x6d\xb7\xdb\xb8\xd2\xec\xc5\x62\x95\x7e\x02\x00\x00\xff\xff\xb3\xe2\x1b\x07\x65\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 357, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x55, 0x62, 0x66, 0x26, 0xb0, 0xbd, 0x39, 0xb8, 0x3f, 0x33, 0x66, 0x5d, 0x9f, 0x49, 0x8a, 0xa2, 0xac, 0x2a, 0x5c, 0x3e, 0x18, 0x29, 0x74, 0xbc, 0x0, 0x97, 0xc9, 0xe2, 0x1b, 0x83, 0x26}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x6e\xc3\x20\x10\x80\xe1\x9d\xa7\x38\x79\xc7\x69\xa5\x4e\xcc\x5d\x3a\x57\xea\x7e\x71\x2f\xce\xc9\x31\x47\xef\x8e\xa8\x79\xfb\xca\x4e\x54\x91\x56\x5e\x32\x81\x00\xfd\x1f\x30\x71\xfe\x4c\xf0\x36\xe3\x48\xef\xae\x84\x73\xc0\xc2\x1f\xa4\xc6\x92\x13\xf0\xb2\xde\x4b\xa1\x6c\x47\x3e\x78\xcf\xb2\x3b\x3f\x07\x2b\x34\xa4\x00\xe0\x38\xda\x32\x46\xc8\x38\x53\x82\xe1\x54\xcd\x49\x23\xe7\x51\xc9\x2c\x4a\x21\x45\x17\x0d\x00\x00\x07\x95\x39\xc1\x3a\x05\xb8\xaa\xdd\xab\x0c\x13\xe9\x8a\x77\xb7\x9d\x6b\xa9\xfb\x25\x77\xa2\x3c\x72\x8e\x5b\xed\x74\x42\x27\xf3\xae\xb9\xc6\x11\x8b\xca\xf7\x25\xaa\x54\xa7\x06\x7f\xd8\xbe\x0f\xa6\xf3\x4b\xff\xd4\x7a\x53\xdd\x53\xd4\x3d\x0e\x71\x3d\xb6\x01\x36\xde\x1d\xf7\x55\xf1\xb2\xfc\xeb\x3f\xf5\x4f\xf6\xf6\xd0\xf0\x13\x00\x00\xff\xff\xac\x8b\xd7\x12\xb1\x01\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 433, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x14, 0x39, 0xff, 0xa2, 0xc1, 0xc5, 0xd4, 0x2e, 0xb7, 0xd, 0x93, 0xd5, 0x83, 0x85, 0x1f, 0x1d, 0xe7, 0x73, 0xd1, 0x42, 0x8, 0xfa, 0x7a, 0x25, 0x4a, 0xed, 0x37, 0x10, 0xb8, 0x13, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
