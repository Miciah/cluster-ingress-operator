// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (1.345kB)
// assets/router/deployment.yaml (1.76kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.333kB)
// manifests/00-custom-resource-definition-internal.yaml (5.796kB)
// manifests/00-custom-resource-definition.yaml (35.592kB)
// manifests/00-ingress-credentials-request.yaml (1.464kB)
// manifests/00-namespace.yaml (266B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (237B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (305B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (511B)
// manifests/01-cluster-role-binding.yaml (369B)
// manifests/01-role-binding.yaml (367B)
// manifests/01-role.yaml (477B)
// manifests/01-service-account.yaml (196B)
// manifests/01-service.yaml (344B)
// manifests/01-trusted-ca-configmap.yaml (323B)
// manifests/02-deployment.yaml (2.832kB)
// manifests/03-cluster-operator.yaml (357B)
// manifests/image-references (433B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x4f\xaf\xd3\x30\x10\xc4\xef\xf9\x14\xd6\xe3\xdc\x3c\x71\x43\xb9\x72\xe0\xc6\x01\x21\xee\x8e\x33\x7d\x59\xea\x7a\xad\xdd\x75\x5a\xf8\xf4\xc8\x69\x8a\xaa\xfe\x11\x0d\x88\x5b\x36\xb2\x7f\xb3\x3b\x3b\xf2\x3b\xf7\x31\x16\x35\x88\xd3\xc0\x19\x83\x13\x8e\x70\x5b\x16\x27\x5c\x0c\xa2\xad\xfb\x3a\x92\x3a\x1d\xb9\xc4\xc1\xf5\x70\x5e\x9d\x40\x4d\x28\x18\x4d\x73\x99\x59\x95\xfa\x88\xb6\xd9\x51\x1a\xba\x33\xf1\x0b\x47\x34\x3e\xd3\x37\x88\x12\xa7\xce\x49\xef\x43\xeb\x8b\x8d\x2c\xf4\xd3\x1b\x71\x6a\x77\x1f\xb4\x25\x7e\x9d\xde\x37\x7b\x98\x1f\xbc\xf9\xae\x71\x2e\xf9\x3d\x3a\xc7\x19\x49\x47\xda\xda\x86\xd2\x9b\x40\x75\x73\x6a\xa9\x91\x12\xa1\x5d\xb3\x71\x3e\xd3\x27\xe1\x92\xb5\x5e\xda\xb8\x97\x97\xc6\xd5\xde\xb8\x48\xc0\xf2\x0f\x69\xc8\x4c\xc9\x74\xae\x2a\x58\xb3\x0f\x38\x95\x0a\x99\xe8\x54\x4c\x90\x7e\xb9\x12\x49\x6d\xfe\x38\x78\x0b\x63\x73\xab\x53\x47\x40\x32\x0a\x97\x33\xdc\x4a\x1b\xef\x90\x04\x13\xe1\x70\xa5\x10\x04\xde\xf0\x80\x7c\x6d\xce\x2d\x58\x4b\xff\x1d\xc1\x7c\x08\x50\x5d\x27\x30\x3b\xd8\xfe\x76\xf6\x2e\x7e\x3e\xb3\xd6\x93\xc0\xc9\xb8\x48\x3b\x22\x1b\x71\x1b\x78\x7f\x0b\x5e\xd6\xf8\x04\xff\xa9\xd5\x2a\x82\xc0\x56\x82\x70\x34\xa4\x1a\x47\x7d\xd8\xdf\xda\xde\xb2\x70\x5d\xc7\xd9\x81\x7b\x96\x8e\x66\x39\x0b\x1f\xe9\x3f\xb0\x2d\x6a\x80\x18\x6d\x6b\x1e\x31\x20\xe2\x6d\x8e\xcf\x4a\xa5\x67\x16\xf8\x77\x52\xff\x92\xc2\x57\x35\x6f\xe5\x8a\x5f\xf2\x70\x3f\xdd\x8a\x50\x84\xec\xc7\x1f\xd0\xe7\x63\x75\x64\x1c\xab\xb9\x6a\xe2\x97\x47\xe2\x52\x47\x71\x71\xf9\x73\x7d\x3b\x96\x75\xb2\x5a\x82\x1d\x58\x76\xcd\xaf\x00\x00\x00\xff\xff\x77\xbd\x24\x2b\x41\x05\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 1345, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x2c, 0x40, 0x91, 0xbf, 0xde, 0x36, 0xf0, 0xe2, 0xe4, 0x1b, 0xb8, 0x91, 0x2f, 0xd4, 0x55, 0x71, 0x4e, 0x59, 0xb1, 0x18, 0x2e, 0xf9, 0xc5, 0xac, 0x2b, 0x89, 0x8c, 0x8, 0x96, 0x83, 0xbf}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x41\x6f\xea\x48\x0c\xc7\xef\x7c\x0a\xeb\x71\x66\xa1\xaf\xdd\x6a\x37\x37\x04\xe9\x0a\xa9\x94\x08\xd2\x5e\xd1\x74\x62\xc0\xea\x64\x66\xd6\x76\xa8\xb2\x9f\x7e\x95\x40\x5b\xc2\xd2\xaa\x7b\x78\x9c\xa2\xf1\xdf\x7f\xff\x9c\xd8\x43\x1f\xa6\x18\x5d\xa8\x4b\xf4\x0a\xaf\xa4\x3b\x28\x70\x63\x2a\xa7\xb0\x37\xae\x42\xe9\xf5\x61\xe6\xb7\x8c\x22\x30\x09\x5e\x39\x38\x87\x0c\x12\xd1\xd2\x86\xec\x51\x04\x86\x11\x4c\x8c\x8e\xb0\x00\xa3\xc0\x95\x57\x2a\xf1\xb7\xde\x0b\xf9\x22\x39\xa9\xd0\x33\x91\x9e\x90\x85\x82\x4f\x9a\x04\x19\xee\xaf\x7a\x7d\xf0\xa6\x44\x30\xbe\x68\x1f\x24\x1a\x8b\xad\xa3\xa0\x76\xdc\x9a\xaa\x49\x0f\x20\x72\x68\x89\xa6\x68\x0a\x47\x1e\x57\x68\x83\x2f\x24\x81\xdb\xd1\xa8\x07\xa0\x58\x46\x67\x14\x1b\x29\xc0\x5b\x52\xfb\x8c\xbc\x27\x8b\x63\x6b\x43\xe5\xf5\xc1\x94\x98\x00\x87\x4a\x91\x8f\x82\x3e\xf8\x50\xe0\x0a\x1d\x5a\x0d\x0c\x24\xff\x61\x38\xe8\x22\x53\x60\xd2\x7a\xe2\x8c\xc8\xc1\x47\x6a\x51\x2c\x07\xd6\x55\xa2\xc8\x03\xcb\xa4\x64\x8d\x3b\x26\xd8\xe0\xd5\x90\x47\x96\x37\x16\x80\x41\xdb\xee\x19\xc1\x81\x82\x4a\xb3\xc5\xcf\xcb\x37\xbf\x56\x92\x55\xce\x65\xc1\x91\xad\x13\x98\x6d\x1e\x82\x66\x8c\xd2\xbc\xe7\x0f\x9d\x22\x97\xe4\x8d\x52\xf0\x73\x14\x69\x92\x8e\x09\x77\xc6\xb9\x67\x63\x5f\xf2\x70\x1f\xb6\xb2\xf0\x29\x73\x38\xc5\x88\x81\xf5\x04\xf7\x03\x78\xa7\x1a\x4f\x8e\x4f\xba\xcb\x02\x6b\x02\x7f\x8c\x3a\xd1\xc8\x41\x83\x0d\x2e\x81\x7c\x92\x7d\x62\x27\x5f\xf9\xdd\xdc\x5c\xff\x2f\xc3\x12\x95\xc9\x7e\x69\x79\xf5\xe7\xf5\xed\xb7\x3c\xfb\x30\x47\xde\x9e\x8d\xf5\x47\x18\xfd\x3e\xe9\xa8\x45\x8d\x0a\x54\x82\xfc\x3e\xd4\xd1\x88\xbc\x06\x2e\xda\x99\xde\xa2\x47\x36\xda\x31\xbc\xd0\xc2\x2a\x1f\xe7\xab\x75\xb6\x58\xe6\x1d\xca\x76\xdd\x12\xf8\xd1\xe0\xff\xb8\x90\xb6\x5c\x3c\xe6\xe9\x72\xbd\x4a\x97\x4f\xb3\x49\xba\x7e\x18\xcf\xd3\x55\x36\x9e\xa4\x97\x4c\x42\x44\x2f\x3b\xda\xe8\x80\x0e\x0b\x7e\xc1\x6f\x9a\xde\x8d\x1f\xef\xf3\xf5\x24\x5d\xe6\xb3\xbb\xd9\x64\x9c\xa7\xeb\xe9\x6c\x79\xc9\x6e\x88\x6a\x87\xf1\x85\x86\xea\x64\x18\x99\xf6\x46\x4f\x1b\x73\xb4\x47\x8f\x22\x19\x87\x67\x4c\x3a\x06\xe4\x49\xc9\xb8\x29\x3a\x53\xbf\xaf\xf2\x55\x77\x86\x9a\x19\xf9\x0b\xb5\x9b\x08\x10\x8d\xee\x12\x18\xee\xd0\x38\xdd\xfd\x73\x1e\xbc\xf4\xa5\x19\x4d\x41\xbf\x1a\x64\xd8\x54\xa9\xbf\x87\x23\xa1\x62\x8b\xd2\x35\x64\xfc\xbb\x42\x51\x39\x2f\x63\x63\xd5\x10\x8d\xca\xb3\xf3\x12\xcb\xc0\x75\x02\x3f\x7f\xbf\x9d\xd3\x49\x6c\x1f\x5c\x55\xe2\xbc\xb9\xed\xce\x36\xb9\x6c\xce\xb2\x03\xf5\xd7\x5f\x0e\x8e\xb3\x70\xfc\x5f\x18\x58\x64\x6d\xee\xfe\x73\x55\xd3\xf3\xc2\xbb\x3a\x01\xe5\xea\x2d\x74\x00\x78\xaf\x3d\xf8\x86\x97\xa0\xe5\xee\x0b\x3e\xaa\xe7\xa1\xc0\x04\x6e\x7e\x8e\x3a\x0b\xb7\x6a\xe5\xcd\x1d\xdc\xbd\x2f\x07\x87\x55\xfd\x37\x00\x00\xff\xff\xc6\x3b\xf5\x23\xe0\x06\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 1760, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xae, 0xdd, 0xfc, 0xcf, 0xfb, 0x9e, 0x6a, 0x40, 0x54, 0xc3, 0x32, 0x6a, 0x41, 0xf4, 0xdf, 0xec, 0xfc, 0x28, 0xfd, 0x94, 0xab, 0xf5, 0x8c, 0xb4, 0x26, 0xb, 0x57, 0x70, 0x30, 0xba, 0x1c}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x8f\x13\x31\x0c\xbd\xcf\xaf\x88\xb6\x37\xa4\x4e\xc5\x0d\xf5\x86\x40\xe2\x04\x2b\x21\xc4\x3d\x4d\x3c\x1d\xd3\x4c\x1c\xd9\x4e\x4b\xf9\xf5\x68\xbe\x76\xd9\xe9\x6c\x3b\xc0\xc2\x69\xc6\x8e\xf3\xfc\x62\x3f\x27\x2b\xf3\x2e\x64\x51\x60\xc3\x14\xc0\x54\xc4\x46\x6b\x30\x94\x80\xad\x12\x1b\x54\x81\x50\x95\xc5\xca\x7c\xb9\x7f\x7f\xbf\x35\x6f\x4d\x20\x35\x54\xb5\x51\x02\x46\x6a\xca\xc1\x9b\x1d\x18\x86\x14\xac\x03\x6f\x76\xe7\x0e\x4a\x0c\xc6\x0e\x2a\xda\x06\x24\x59\x07\xd2\xa1\x9f\x6a\x74\x75\xb1\x7a\x9a\xc5\x3a\xcd\x36\x84\xb3\x89\x00\x5e\x8c\x75\x0e\x44\xca\xe2\x80\xd1\x6f\x47\x82\x9f\x29\x40\x61\x13\x7e\x05\x16\xa4\xb8\x35\xbc\xb3\xae\xb4\x59\x6b\x62\xfc\x61\x15\x29\x96\x87\x37\x52\x22\x6d\x8e\xaf\x8b\x06\xd4\x7a\xab\x76\x5b\x98\x8e\xc1\xb6\x4d\x16\xa5\xc6\x4a\xd7\x18\xf7\x0c\x22\xeb\x31\x7d\xc1\x39\x80\x6c\x8b\xb5\xb1\x09\x3f\x30\xe5\x24\xed\xb6\xb5\xb9\xbb\x2b\x8c\x61\x10\xca\xec\x60\xf0\x39\x8a\x15\xee\x1b\x9b\xa4\x33\x1f\x4f\xd7\x99\x02\x7c\x44\x07\xd6\x39\xca\x51\x7b\x1f\x44\x9f\x08\x47\x6b\x88\x18\x0d\xc7\x30\x2c\x24\xf2\x43\xfc\x11\xfa\xe0\x23\xf0\x6e\x64\xf2\xea\xae\xb8\xe4\x67\x53\xc7\x62\xc2\xd0\x5b\x68\x28\xca\x88\xeb\x21\x05\x3a\x37\x4b\x31\x13\x05\x74\xe7\x4b\xd4\x44\xde\xa3\x70\x4e\x6d\xa1\x77\xd9\xef\x61\x19\x5e\x43\x11\x95\x18\xe3\xbe\x74\xc4\x40\x52\x3a\x6a\x2e\xe1\x87\xb2\x0c\xd1\x13\x64\xc7\x60\x15\xba\xdf\x3d\x68\xf7\xcd\xc9\xb7\xae\xcb\x7c\xcf\xaa\x62\xa6\x95\xbd\xb0\x3a\xb5\x4e\x1d\x3b\x8c\x1e\xe3\xbe\xf7\x3f\x46\x4c\x96\xae\x73\x0c\x28\xfd\xcf\xc9\xaa\xab\x67\xb8\x8e\x02\x2c\x1f\xb4\x39\xcb\x73\xd0\xab\xa3\xa8\x4c\x21\x00\xcb\x33\xee\x8d\xa8\xd5\xbc\xa8\x2d\xc3\xe6\x72\x21\x05\x1f\x85\xc1\x11\x0f\x12\x7d\x34\x7f\x23\x65\x3f\x39\x37\xcf\x5a\xb1\x15\xe5\xec\x34\x33\x3c\x39\x28\x3c\xe4\x1e\xfe\x6c\xc2\x56\x36\x63\x3d\x22\xe8\x89\xf8\x30\xe1\xd2\x36\xe3\x0f\xb9\x0c\x72\x18\x4b\x74\xbd\xe1\x2f\x94\x63\xb6\x9e\xa3\xd8\x57\xe6\x23\x32\x13\x83\x37\x15\x53\x63\xac\xb4\x53\xbe\x61\xca\x0a\xbc\x69\x40\x19\x9d\x6c\x06\xc8\x75\xab\xd5\xf2\x6c\x9b\x30\x33\x24\xed\x8e\x1b\xcc\x7a\x54\x19\x61\x67\xaa\x7a\x9d\xce\x02\x1a\xed\x98\x42\x54\x74\xd7\xe7\x54\xe9\x00\x91\xe1\x88\x70\x9a\xef\xc1\xcb\x30\xb9\x7d\x61\x48\xde\x7d\x03\xa7\xfd\xf3\xf4\x6f\x09\x2d\xee\xd0\x84\xc0\xf4\xce\xf9\x8f\x44\xfe\x42\xba\x0b\x78\x08\xb8\xcc\xa8\xe7\x1b\x54\xc6\xb0\xf6\x56\x84\xef\xea\x28\x8a\xb2\xc5\x8b\xc7\x2f\x0b\xfc\xb2\xf9\x53\xfb\x8a\xf7\x0b\x35\x89\x0e\x37\x49\xf1\x33\x00\x00\xff\xff\x17\x12\x5f\xb4\x1d\x09\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2333, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0xd1, 0xb8, 0xe7, 0xc5, 0x9c, 0xbc, 0xd8, 0xfe, 0x28, 0x9e, 0x19, 0xef, 0x6e, 0xa4, 0xbd, 0xa5, 0x40, 0xef, 0xd3, 0xe0, 0xa4, 0x60, 0x5d, 0xd6, 0xe6, 0x9c, 0xfd, 0x49, 0xb7, 0xf3, 0x94}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x51\x6f\xdc\xc8\x0d\x7e\xf7\xaf\x20\x36\x0f\xf7\x62\x69\xcf\x97\xb6\x28\x16\x28\x8a\xc0\xb9\x14\x46\x73\x6e\x10\xbb\x29\xd0\xc4\xc0\xcd\x6a\x28\x89\x17\x69\x46\x37\x1c\xad\x6f\x5d\xf4\xbf\x17\x9c\x91\xb4\xd2\xae\xb4\x36\x1a\xdc\x3c\xed\x72\x28\xf2\xe3\x47\x0e\x87\x92\x6a\xe8\x13\x3a\x26\x6b\x36\xa0\x1a\xc2\xdf\x3c\x1a\xf9\xc7\xe9\xd7\x3f\x73\x4a\x76\xbd\xbb\xda\xa2\x57\x57\x17\x5f\xc9\xe8\x0d\x5c\xb7\xec\x6d\xfd\x11\xd9\xb6\x2e\xc3\xb7\x98\x93\x21\x4f\xd6\x5c\xd4\xe8\x95\x56\x5e\x6d\x2e\x00\x8c\xaa\x71\x03\xda\xb0\xc3\xcc\x3a\xcd\x29\x99\xc2\x21\x73\x6a\x1b\x74\xca\x5b\x27\x3f\x0c\x97\x94\xfb\x94\xec\x05\x37\x98\xc9\x63\x85\xb3\x6d\xb3\x81\xf3\xca\xd1\x3a\x8b\x3e\x40\xc4\xf4\xf6\xf6\xee\x63\x70\x14\x64\x15\xb1\xff\xfb\x54\xfe\x9e\xd8\x87\xbd\xa6\x6a\x9d\xaa\xc6\xd0\x82\x98\xc9\x14\x6d\xa5\xdc\x68\xe3\x02\x80\x33\xdb\xe0\x06\x56\xab\x0b\x80\xc6\x21\xa3\xdb\xe1\x3f\xcd\x57\x63\x1f\xcd\x3b\xc2\x4a\xf3\x06\x72\x55\x31\x8a\x6a\xbb\x75\x1d\x25\x1d\x32\xf6\xca\xb7\xbc\x81\xff\xfc\xf7\x02\x60\xa7\x2a\xd2\x4a\x68\x8a\x9b\x12\xd0\x9b\x0f\x37\x9f\x5e\xdf\x65\x25\xd6\x2a\x0a\x01\x34\x72\xe6\xa8\x09\x7a\xb0\x1a\xd0\x03\x31\x28\x09\x06\x22\x34\xa8\x95\x51\x05\x6a\x20\x03\xbe\x44\x78\xb2\x06\x19\xb4\xa4\x02\x35\x6c\xf7\x12\x44\x9a\x59\x93\x53\x31\xa1\x6e\x9d\x55\x2d\x7b\x74\x9d\x37\x80\x54\x88\x4f\x9b\x76\x5b\x51\xf6\x6f\x6b\x10\x94\xd1\xbd\xd0\xd1\x4e\x79\x14\x69\x0a\x5f\x0c\x5c\xc7\x47\x41\xe9\x9a\x8c\x00\xa0\xa6\xad\x42\x44\x60\x73\xf0\x25\xf1\x60\xb5\x27\x42\x60\x1b\xeb\x81\xdb\xa6\xb1\xce\xa3\x4e\xe1\xbe\x24\x9e\xec\x5b\x53\xed\x21\xb7\x0e\xc8\x78\x74\x46\x55\x90\xd9\xba\x6e\x0d\x65\xc1\xf6\x60\xd3\xe6\xf0\x8f\x06\xcd\x9d\x44\x02\x7d\x5d\x70\xba\xea\x14\xfc\x5e\x12\x65\xb7\xbf\x60\xe6\x3b\x51\xe3\x44\xcd\x53\x9f\x0f\x59\xa3\x52\x1f\x64\x47\xac\x7f\x27\x69\x89\x3a\x1d\xa3\x1c\x38\xde\x45\x19\x6a\xe0\x90\xb2\x3e\x6a\x70\x18\x4a\xc3\xf8\x29\xe0\x0e\xb4\x32\x1d\xaa\x14\xee\xa4\x7c\x1c\x03\x97\xb6\xad\x34\x64\xd6\xec\xd0\xf9\x90\xd2\xc2\xd0\xd3\x60\x99\xc1\xdb\xe0\xb2\x52\x1e\xd9\x4f\x2c\x0e\x2c\xed\x54\xd5\xe2\x65\xc8\x57\xad\xf6\xe0\x50\x7c\x40\x6b\x46\xd6\x82\x0a\xa7\xf0\x93\x75\x08\x64\x72\xbb\x81\xd2\xfb\x86\x37\xeb\x75\x41\xbe\x3f\xdc\x1d\xdd\x7e\xbf\xce\xac\xf1\x8e\xb6\xad\x10\xbb\xd6\xb8\xc3\x6a\xcd\x54\x24\xca\x65\x25\x79\xcc\x7c\xeb\x70\xad\x1a\x4a\x02\x70\xe3\x43\x87\xa8\xf5\xab\xa1\xec\xbf\x1b\x21\x8d\xf9\x60\xef\xc8\x14\x83\x38\x9c\xd5\x45\xde\xe5\xc4\xc6\x42\x8f\x8f\x45\xfc\x07\x7a\x45\x24\xac\x7c\xfc\xf1\xee\xfe\x50\x42\x93\xc2\x0b\x9c\x07\xb6\x0f\x8f\xf1\x81\x78\x21\x8a\x4c\x8e\x2e\x26\x2e\x77\xb6\x0e\x16\xd1\xe8\xc6\x92\xf1\xe1\x4f\x56\x11\x9a\x29\xe9\xdc\x6e\x6b\xf2\x92\xe9\x5f\x5b\x64\x2f\xf9\x49\xe1\x5a\x19\xa9\xed\x2d\x42\xdb\x68\x15\x8a\xfb\xc6\xc0\xb5\xaa\xb1\xba\x56\x8c\xbf\x3b\xed\xc2\x30\x27\x42\xe9\xf3\xc4\x8f\x3b\xf3\x54\x71\x72\x62\x00\xfa\x3e\x3c\x9b\x21\xd9\x94\x04\x09\x4b\xf2\x9b\xf2\xee\x90\xc6\xa3\x80\xa2\x4d\x4e\x1a\x10\x96\x6a\x47\xd6\x0d\x72\xc3\xa1\x6d\xa5\xcf\xb9\x87\x40\xb1\xd8\x18\x83\x48\xc4\xc0\xad\xaa\x71\x22\x8b\x9d\xf0\xfe\xfe\xfd\x9c\x74\xdf\x4c\x95\xbd\x72\x05\xfa\x71\xa1\xcc\x75\x87\x10\x71\x74\x35\x15\x1e\x11\xd1\xe9\xf4\x5c\x94\x96\xbd\xdc\x48\x7d\xb8\x87\x3e\x7d\x64\x64\x36\x37\x5d\x86\xc8\xbc\x47\x53\xf8\x72\x03\x57\x93\xad\x21\xcc\xb3\x88\x06\xad\x1e\x53\x77\x4f\x04\x89\x01\xa1\xdf\x68\x4e\xe1\x26\x87\x27\x74\xf6\xb2\x4b\x57\xae\xda\xca\x1f\xd9\x05\x31\xf1\xfa\xfb\x74\x16\xbb\xb4\x9f\x62\x74\x7f\xc4\x95\x5b\x57\x2b\x1f\x76\xff\xf4\x87\xd3\xc0\xa8\x6e\xeb\x0d\x7c\x3f\x17\x96\x18\x7d\x41\x5c\xfb\x66\x20\x7b\x74\x09\x0a\xa4\x14\xde\x59\x07\xf8\x9b\xaa\x9b\x0a\x2f\x61\xf5\x66\x05\xf6\x18\x1e\xc0\xea\xfa\xf6\xcd\x4f\x3f\xae\xe6\x63\x9a\xcd\x07\x9a\xb6\x3e\x46\x96\x40\x30\x73\x22\x7d\x33\x91\x74\xa5\x76\x36\xac\x4e\x07\x94\x1b\x32\xd5\x89\xe6\x21\x2a\xe7\xd4\xfe\x94\xd8\x1b\x8f\x35\x1f\x17\x0c\x00\x05\xf1\x09\x09\xb3\xd1\x76\x43\xca\xe2\x91\x0f\xdb\x3d\xf7\xb5\xe5\x70\x5d\xa1\xf1\xd5\x1e\xec\x36\xcc\x43\xba\x57\x3a\x1c\xf6\x8f\x2f\x3d\xed\x4b\x87\x30\xcc\x33\x67\x19\x8c\x13\x8f\xf0\x17\xba\xd1\x04\x41\xc7\x28\x19\x40\x95\x95\x41\xf5\xe5\xb4\x2e\x90\x37\x71\xfe\xf6\xf6\x4e\xc6\xa2\xbb\x09\x39\x07\x0c\xaa\x47\xf0\x48\xbe\x24\x23\x17\x5a\xd7\x2d\x4f\xcc\xc2\x2c\xba\x45\xbe\xce\xb3\x16\x97\x9c\xf4\x30\x8f\xcf\xee\x1e\x8f\x98\x07\xed\x40\xa6\x32\x7b\x18\x8b\x98\x6d\x46\x72\xb9\x85\x58\x24\xce\x59\x9b\x30\xe2\xbc\x9f\x47\xc3\xd0\x78\x93\x43\x18\x2e\xb9\xec\x6f\xef\x4e\x31\x57\x54\x71\x6c\x43\x5f\x56\xef\x14\x55\xa8\xbf\xac\x16\x6c\x0f\x80\xe0\x91\xaa\x4a\x6e\x5c\x46\x1f\x01\x09\xd5\x8a\xad\x89\x73\x10\x32\xab\x02\xbb\x08\xb7\x9d\xc7\x25\xa3\xaa\xe5\xa1\x63\x0b\x9a\xd6\x61\x3a\x8f\x60\xb9\x58\xe2\x5a\x28\x99\x19\xba\xbb\xc2\xb9\x1e\x02\x22\x86\x5f\x5a\xf6\x7d\x01\x19\xad\x9c\x3e\xc4\xbb\x60\x12\x20\x0f\x2f\x1f\xa7\x65\x33\xc6\xbb\x50\x3c\x71\xcd\x5d\xb3\xe3\x95\x74\xe5\xbc\xb8\xed\xa7\x37\xec\x78\x9d\x2f\xcf\xb8\x2a\xc5\xfe\xde\x29\xc3\x21\xce\x7b\x3a\xbd\x70\x4f\x03\x9a\xed\xd3\xe3\xd5\x5f\x43\x32\x8d\x25\x9e\xea\x25\x80\xd0\x57\xca\x37\xfb\x8c\xc5\xf7\xcd\x66\x4e\x9b\xf0\xff\x65\xe6\xcc\x14\x71\x62\xeb\x77\xf7\xa5\x0d\x4b\xa9\xbf\xa0\x07\x75\x9a\x7d\x1f\x95\xde\x01\x8f\x25\x76\xad\xdd\x0d\x2f\xc0\x5d\x23\x41\x3d\x5f\xf7\xcf\x56\xfd\xf3\x75\x49\x8b\xe7\xe1\xb8\x6d\x92\xee\xe1\x92\x96\x99\x3c\xa7\xf0\x52\xa1\x3c\x64\xca\x84\x77\x02\x46\x2d\xaf\x71\x39\x99\xe3\x29\x70\x02\xba\x9b\x68\x64\x84\x44\x7d\xe8\x9b\xd6\xc0\x9b\x7f\xdd\x45\x2e\x3a\x8b\x39\xfa\xac\x44\x0d\x2d\x9f\xcf\xcb\xcf\x37\x6f\x7f\x06\xc5\x40\xa1\x1b\x7f\xbe\x7a\x08\xc6\x9e\x5a\x87\xcb\xe6\xc2\x43\x67\x6c\x2a\x79\x2b\x6b\x1c\x26\x1a\x3d\xba\x3a\x7c\x65\x08\x13\xaf\x78\xf8\xe1\xe1\x52\x5c\xfc\xed\xfa\xc3\x9c\x83\x33\x56\x0f\xae\xcf\x3b\x78\xfd\x10\x38\xf9\x7c\xf5\x70\x78\x93\xd2\x36\xe3\x54\x3d\x72\xaa\x6a\xf5\x64\x4d\x9a\xd9\x7a\x9d\x55\xb4\x8e\xaf\xcc\x6b\x87\x39\x3a\x34\x19\xae\x9d\x6d\x3d\xfe\xf1\xf5\xba\x40\x9f\x44\x96\x93\xc0\x72\xe9\xeb\xea\x95\x0d\xf9\x5c\xea\x72\xb2\x3e\xff\x70\xec\xb4\xa6\xcc\x59\xb6\xb9\x0f\x3e\xd1\x24\x2d\x07\xcf\x4a\x28\x5e\x1b\xf4\x8f\xd6\x7d\x5d\x6b\xc3\x6b\xf1\xf3\xd7\x1d\xe1\xe3\x5f\xc2\x5e\x92\x55\x94\x44\x7c\xaf\xd4\x53\xd2\x69\x26\xda\x70\x40\x94\x70\x69\x1f\xcf\x21\x79\x3d\x42\x92\x55\xb6\xd5\x69\x61\x6d\x51\x61\xc0\x21\xfe\x04\xde\x28\xf2\xdd\xd5\xba\xfb\x4c\x24\xc7\x8b\x85\x81\xa5\x1b\xf6\x45\x87\xde\xab\xe2\x4c\x8f\x9a\x9e\x0f\xd1\x3d\x3e\x0a\xbf\xb6\xe8\xf6\xb3\x15\x7f\x26\xea\xe1\x2c\x5c\x0e\xaf\xfc\xe1\x1b\x21\x7b\x55\x14\x64\x0a\xd5\x50\xa8\xf1\xe3\x63\x27\xc5\x77\xae\xa0\x63\xa9\x76\x15\x78\xaf\x0a\x0e\x35\xe8\x55\x91\xe4\x54\x79\x74\x7c\xf9\x0d\x25\xb7\x00\x34\xd4\xe0\xf0\xb5\x64\x52\x81\xcf\x25\xe6\xec\x65\x0e\xa0\x74\x1c\x18\x54\xf5\xe1\x05\x97\xef\x49\xb6\x77\xfd\xd7\xdf\xdd\xd5\xe1\x5f\x30\x90\x74\x1f\x72\x77\xb1\xc5\xc7\x81\x7f\x03\xde\xb5\xd8\x7d\xe3\xb4\x4e\x2e\xd2\x28\x39\xdc\x63\x2a\xcb\xb0\xf1\xa8\x6f\x8f\x3f\xd4\xae\x56\x93\xaf\xb0\xe1\xef\x68\x62\x85\xcf\x0f\x17\xd1\x2a\xea\x4f\x3d\x0e\x11\xfe\x2f\x00\x00\xff\xff\x3b\xc1\x21\x25\xa4\x16\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 5796, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x96, 0x1d, 0x70, 0x56, 0x61, 0xe2, 0x7a, 0xfb, 0x1e, 0x5a, 0xff, 0x33, 0xc7, 0xb6, 0xf8, 0xbc, 0xa8, 0x5a, 0x54, 0xb2, 0x91, 0x5b, 0xc, 0x24, 0xfc, 0xb2, 0xc8, 0xc8, 0x43, 0x30, 0x17}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x6b\x6f\x1c\x37\xb2\xe8\x77\xff\x8a\x82\xf2\xc1\xf6\x5e\x69\x14\xd9\x49\x90\xab\x5d\xec\x85\x22\x39\x89\xb1\x8e\x6c\x78\xb4\xd9\xbb\x7b\x7c\x60\x70\xba\x6b\x66\xb8\x62\x93\x1d\x92\x3d\xf2\x64\xb1\xff\xfd\xa0\xf8\xe8\xc7\x34\xfb\x21\x3f\xce\x87\x85\x06\x08\x62\x75\xb3\x8b\xc5\x62\xbd\x59\x24\x59\xc9\x7f\x45\x6d\xb8\x92\xe7\xc0\x4a\x8e\x1f\x2c\x4a\xfa\xcb\x2c\x6e\xbf\x37\x0b\xae\x4e\x77\x67\x2b\xb4\xec\xec\xd1\x2d\x97\xf9\x39\x5c\x56\xc6\xaa\xe2\x2d\x1a\x55\xe9\x0c\xaf\x70\xcd\x25\xb7\x5c\xc9\x47\x05\x5a\x96\x33\xcb\xce\x1f\x01\x64\x1a\x19\x3d\xbc\xe1\x05\x1a\xcb\x8a\xf2\x1c\x64\x25\xc4\x23\x00\xc9\x0a\x3c\x07\x2e\x37\x1a\x8d\xc9\x94\xb4\x5a\x09\x81\xda\x2c\x54\x89\x9a\x59\xa5\xe9\x1f\xd2\x6c\xf9\xda\x2e\xb8\x7a\x64\x4a\xcc\x08\xe0\x46\xab\xaa\x3c\x87\x74\x23\x0f\xd5\x50\x3b\x00\x8f\xe5\x4b\xdf\xc1\x65\xdd\x81\x7b\x27\xb8\xb1\x7f\x49\xbf\x7f\xc5\x8d\x75\x6d\x4a\x51\x69\x26\x52\x28\xba\xd7\x86\xcb\x4d\x25\x98\x4e\x34\x78\x04\x60\x32\x55\xe2\x39\x1c\x1d\x3d\x02\x28\x35\x1a\xd4\x3b\xfc\xab\xbc\x95\xea\x4e\xfe\xc8\x51\xe4\xe6\x1c\xd6\x4c\x18\xa4\xa6\xd5\x4a\x07\x22\x06\xcc\x4d\xc6\x04\xfa\x7f\x02\x08\xb6\x42\xb1\x44\x81\x99\x55\xfa\x0d\xb3\xdb\x73\x58\x18\xcb\x6c\x65\x16\x26\x3c\x0d\x2d\x89\x44\x6f\xb1\x14\x3c\x63\x26\x36\x2c\x31\x5b\xe8\xf0\x2c\x36\x73\x1f\x1f\x36\xf4\x10\xd9\x8e\x71\xc1\x56\x02\xdf\xb6\xbf\xf1\x2f\xcf\xe1\x5f\xff\x7e\x04\xb0\x63\x82\xe7\x6e\x4e\x3d\x86\x34\x01\x17\x6f\x5e\xfe\xfa\x7c\x99\x6d\xb1\x60\x11\xed\x1c\x4d\xa6\x79\xe9\xda\xc1\x51\x8f\xca\xe1\xfd\x0a\x0d\x30\x28\x98\x64\x1b\xcc\x23\x21\xa1\xa1\x24\xac\x95\x06\xbb\xc5\x00\x14\x20\x13\x95\xb1\xa8\x17\x70\xb3\xc5\x76\xbb\x8c\x49\x20\x22\xf3\x0c\xe1\x75\x89\x72\x49\x2c\x01\x6f\x55\x65\x11\x98\xcc\xe1\x2f\xd5\x0a\xb5\x44\x8b\x26\xce\x78\x0d\xb2\x26\xfe\x02\xde\x49\xf8\xdb\x16\x25\x30\xd9\xe7\x0b\xe0\xc6\x73\x33\xe6\xc7\xc0\x40\xe2\x5d\x02\xdf\x1a\x68\x8e\xa5\x50\xfb\x02\xa5\x6d\x7d\x07\x56\x01\x13\x42\xdd\x01\xc9\x96\x96\x4c\x80\xd5\x6c\xbd\xe6\x19\xbd\xd1\xc8\xb2\x2d\x0d\x36\x0e\xc4\x80\xdd\x32\x5b\x83\xc4\x0f\xa5\x32\x18\x11\x03\xa5\xc3\xf0\x5a\xf8\xff\xb5\xa4\x99\x91\x1b\xb0\x5b\x6e\xea\x17\x50\xb0\x3d\x08\x64\xae\xff\x9c\x1b\x5d\xb9\x69\xa9\x01\x13\x8d\xcb\x6a\x25\x78\x06\x6b\x96\xd1\xe7\x12\xed\x9d\xd2\xb7\x34\x30\x89\x19\x35\x36\xc0\xcc\xe0\xa8\x41\xe3\x8e\x9b\x36\x48\xea\x71\x85\xe0\x5e\xe7\xa0\x2a\xeb\x68\xbb\xb5\xb6\x34\xe7\xa7\xa7\xb7\xf5\x64\x90\x56\xc9\x55\x66\x4e\x33\x25\x33\x2c\xad\x39\x8d\x63\x3f\x09\x38\x70\xb9\x39\x0d\x3d\x9e\x1c\x8a\x20\xfd\xc2\x94\xe1\x0e\x35\x94\xca\x18\xbe\x12\x78\x0c\x86\x34\xd7\x4a\x20\xe4\xb8\x66\x95\xb0\x26\x32\x12\x94\x82\xd9\xb5\xd2\x05\x30\x8d\x50\x19\xcc\x17\xb0\x44\x04\xa2\x7d\x43\x10\x92\x50\xf7\x45\xa1\x34\xc1\xb0\x8c\x0b\xb3\x38\x0a\x0d\xec\x9e\x44\x5b\xad\xfe\x89\x59\x9c\x9d\x52\x93\x42\xb2\x3c\x4a\x30\xfd\x5a\xea\xb4\x7e\x76\x20\x17\x8f\x49\x70\x7c\x1b\xc2\x94\x4b\x37\xe7\x08\x3b\xff\x0c\x73\x30\x4e\xa8\x40\xad\xe3\x94\x3a\x65\x22\x2d\xeb\xcc\xa0\x93\xc3\x35\xb1\xad\xc7\x8a\xc6\xa4\x09\x08\x98\xad\xaa\x44\x4e\x73\xb5\x43\x6d\x41\x63\xa6\x36\x92\xff\x5e\x43\x36\xc4\x13\xd4\xa5\x60\x16\x8d\xed\x40\xe4\x32\x30\xe9\x8e\x89\x0a\x8f\x9d\x1c\xd1\xc4\x6a\xa4\x3e\xa0\x92\x2d\x68\xae\x89\x59\xc0\x2f\x44\x30\x2e\xd7\xea\xbc\x9e\xed\x0d\xb7\xd1\x80\x64\xaa\x28\x2a\xc9\xed\xfe\xd4\x4d\x25\x5f\x55\x56\x69\x73\x9a\xe3\x0e\xc5\xa9\xe1\x9b\x13\xa6\xb3\x2d\xb7\x98\xd9\x4a\xe3\x29\x2b\xf9\x89\x43\x5c\x3a\x0e\x5c\x14\xf9\x57\x35\xaf\x3f\x6e\x61\xea\xe7\xc3\x58\xcd\xe5\xa6\x7e\xec\xb4\xff\x20\xdd\x49\xf7\x93\x60\xb2\xf0\x99\xc7\xbf\x21\xaf\x97\x21\x84\xb7\x2f\x96\x37\x8d\x1c\xd1\x14\x74\x69\xee\xa8\xdd\x7c\x66\x1a\xc2\x13\xa1\xb8\x5c\xa3\xf6\x13\xb7\xd6\xaa\x70\x10\x51\xe6\xa5\xe2\xd2\xba\x3f\x32\xc1\x51\x76\x89\x6e\xaa\x55\xc1\x2d\xcd\xf4\x6f\x15\x1a\x4b\xf3\xb3\x80\x4b\x26\xa5\xb2\x24\x51\x15\x49\x38\x31\xed\x4b\x09\x97\xac\x40\x71\xc9\x0c\x7e\x71\xb2\x13\x85\xcd\x09\x91\x74\x9a\xf0\x6d\xeb\xdf\x6d\xd8\x91\x18\x6f\xae\x06\x67\x88\x5e\xd2\x04\x39\x75\x58\x62\xc6\xd7\x3c\x73\x3c\xef\x45\x81\x84\xd2\x70\x8d\x39\xac\x70\xcb\x76\x5c\xe9\xf8\xbc\xa7\xb7\x17\x53\x78\xa4\xa5\xd7\x63\xe4\x94\xc7\x25\xbd\x73\xfd\x63\xf7\xfd\xa1\x95\xeb\xb7\xf7\x3c\xa6\x71\x8d\x1a\x25\x71\x90\x22\x96\xc3\x4c\xa3\x75\xfa\x93\x71\xd9\xa6\x5d\x8d\xe7\xb6\xd6\x5c\x90\xb5\xa0\x39\x37\x22\x87\xd5\xde\xb5\xe8\x2b\xe2\x85\x37\x5f\xce\x2e\x98\x1e\xd4\x5c\xc9\xc7\x36\x50\xd3\x41\xe0\x1a\xd4\x9d\x6c\xf7\x70\x9c\x18\x33\x8d\xc1\x2b\xca\x77\xb2\x07\xf3\xc6\x99\x2b\x37\x9e\xa2\x32\xf5\xa0\x1c\x7e\x6b\x45\xb6\x8e\x44\xe9\x16\xf7\xc6\xa9\x0f\xc7\x18\xa4\xb3\x01\xac\x30\x8b\x4c\xdb\x43\x8a\x42\x67\xc0\x6b\x2e\xbc\x99\x27\xe1\x0a\x1f\xdd\xe2\xfe\x9c\x20\x1e\xbc\x7c\x27\xe1\xe5\x1a\x2a\x69\xd0\x1e\xf7\x60\x32\xb8\xe3\x22\xcf\x98\xce\x3b\xe0\x69\x76\x2a\xab\x0a\x66\x79\xc6\x84\xd8\xc3\x06\x25\xf9\x95\x98\x3b\x6c\xfd\xa8\x9d\xa7\xd1\x7c\xd4\x83\xcd\x8d\xf7\x89\x6a\x13\x93\x30\x90\xb9\x2a\x88\x2a\x4f\x08\xaa\xa9\x56\xfe\x4f\xf3\xd4\xf5\xd2\x76\x6f\xe2\xaf\xc1\xa3\xd5\xf3\x63\x03\x97\x17\x34\x10\x41\x9a\xa0\x8b\x38\xe9\xea\x8d\xff\xe2\x8e\xdb\x6d\x12\x68\xf0\x9d\x1e\x1b\xb0\x9a\xe6\xca\x58\xa5\xd1\x19\xe6\x1b\x87\xf5\x49\x65\x3a\x23\x85\x27\x77\x5b\xb4\x5b\xd4\x0d\x3a\x3d\x98\x4a\x13\x95\xf4\x49\x90\x51\xcc\x9f\xce\x44\xb0\x76\xd2\x1e\xf7\x19\x75\x55\x71\x61\x4f\xb8\x84\xd7\x17\x95\xdd\x7a\xae\xd7\xb5\xf9\xad\x85\x24\x2d\xcc\x30\x22\xd0\xf4\x73\x71\x47\xef\xe9\xa1\x81\xb8\x66\x05\x46\x95\x12\xc4\xd7\x26\xd5\xec\x98\x2f\xa3\x76\xe4\xcc\xe0\xdd\x69\x70\x64\x4e\x68\xe4\x27\x1e\x63\x73\xea\x42\x95\xd3\xaf\xdc\xff\x12\xf8\x00\xdc\xbc\xbe\x7a\x7d\x0e\x17\x79\x0e\xca\xcd\x42\x65\x70\x5d\x09\xef\x9d\x98\x45\xcb\xbf\x38\x76\xd6\xee\x18\x2a\x9e\xff\xbf\xc7\x09\x50\x49\x3d\xed\xc6\xec\xf8\x70\x42\xa9\x79\xd6\x75\x8a\xec\xea\x7a\xe9\xe8\x17\x3d\xd4\x11\x55\xd4\x17\x41\x6f\x71\x49\xa6\x48\x0d\x66\x4a\xae\xf9\xa6\xd2\x08\x45\x25\x2c\x2f\x05\xc2\x1a\x19\x19\x20\xe3\x14\xc4\x1f\xe0\xc7\x20\x4e\xaf\x14\xcb\x7f\x60\x82\xc9\x0c\xf5\xd2\xf7\xdb\x03\x5e\x5b\x55\xe7\xc7\x9a\x2d\x29\x1d\x63\x89\xdd\x36\xfb\x63\x68\x86\x00\x89\xfe\x69\x50\xe4\xc9\xe8\xdc\x2c\x7a\x80\x9d\x6f\x18\x80\xbf\xa9\x61\x2f\x03\xe8\x85\xc7\xd4\x29\xdd\x8a\x02\x42\x60\x2d\xd1\x0d\xaa\x74\x4c\xc1\x1d\x7b\x37\xa0\x25\x73\x51\x7a\xbc\x4a\xf1\xce\x79\xc0\xdf\x51\xd0\x9a\x96\x02\x49\xe3\xdb\x57\xe1\x01\x4f\x12\x73\xef\xe8\x70\x13\x29\xe5\xa9\xc1\x65\xce\x77\x3c\xaf\x98\xe8\x41\xf4\x41\x86\x0f\x01\xd1\x80\x51\x2e\x2a\x21\xa2\x90\xbe\xd0\x44\x53\x0a\x6b\xe1\x6e\x8b\xda\x19\x38\xcb\xf4\x06\x6d\x13\xe2\x5c\x5d\x2f\x7b\x40\x23\xbd\x09\xaf\x30\x3a\x67\x3e\xc8\xc3\x91\xfc\xb7\x0a\x81\x15\x8a\xc8\x29\x44\xdf\xa2\x1b\xe7\x8a\xf6\xc9\xda\x77\x92\xbc\x4d\xc0\xa2\xb4\xfb\xe3\x26\x14\x70\xe3\x75\x30\x17\x9e\x0b\x3a\x49\x84\xd3\xa0\x26\x7b\xf0\x7d\x30\xed\xb1\x1d\x50\x46\x09\x11\x1b\x66\x9e\x71\xb1\x1b\xfe\xae\x2d\x45\x61\x12\xdb\x32\xd8\xa7\x4b\x63\x86\x22\x50\x47\x03\xaf\x54\x42\x98\x65\x8e\x01\x25\x05\xfe\x20\x14\xcb\x61\x15\xe4\xad\x56\xdb\xe4\x09\xf6\xcd\x2a\xda\x6c\xd1\x31\xbc\x1d\xcf\x85\x1b\x58\x31\x42\x54\x49\x52\x9a\x9a\x19\xab\x2b\xe7\x63\xde\x93\xee\x3e\x37\x11\x23\xb7\xe0\x3f\x5c\xfc\x6d\x79\xee\x1b\x24\x14\x04\x3c\x71\x46\xe6\x45\xe0\xc1\x1e\x4c\x97\x9e\x79\x4a\x50\x7e\xaf\x34\x9e\xcf\x83\xd2\x7c\xf5\xd3\xe5\x9b\xbe\x09\x79\x37\x13\x99\x06\xcc\xcb\x1f\x7e\xb9\x14\xaa\xca\xcf\x67\xe9\xb8\x21\x28\xaf\xf8\x6a\xc7\xb5\x3d\x07\xf8\x59\x19\x7b\x1d\x42\xf7\x77\x12\x2e\xe4\x3e\x4c\x72\x24\x5d\xdf\xd1\x24\xc7\x1e\x9e\x70\x99\x89\x2a\x27\xfd\x75\xad\x24\x3e\xad\x67\xd0\xaa\x36\x4c\x37\xd5\xc3\x7c\x39\x43\x20\xef\x61\xc2\x29\xfe\x21\x07\xff\x90\xce\x27\xee\xa3\x7b\xd8\xfb\x6d\x33\x80\x49\xb3\xdf\x6a\x0b\x5b\x25\x72\x03\x25\xd3\xac\x40\x4b\x7a\x2e\xba\x77\x6d\x2a\x47\x6a\x24\xed\x77\xc2\x16\x2d\xe0\x8d\x8f\x14\x41\x49\x72\x8a\xd6\x6e\x34\x24\x29\x6d\x3a\x0f\x9a\xf0\x24\xa5\xc0\x89\x6c\xe4\x9e\xc9\x31\xb6\x1b\x0f\x0f\xb2\xa3\x05\x52\x08\xc1\xe0\x48\x12\xbc\x7c\xef\x11\x0d\xcf\x3f\x38\x1e\x70\xcc\x9f\x78\x33\xc6\x08\x10\xe5\x3e\xfd\xea\x30\x00\xa5\x96\xce\x2e\x92\x01\x0d\x81\xa8\x7b\xc6\x2c\xdc\x6d\x79\x48\xd5\x75\xe8\x34\x00\xd7\x85\x08\x3e\x7b\x97\x2f\xe0\x4d\x48\x52\x85\x94\x89\xcb\x43\x1d\x45\xa9\x3e\x72\x46\xfe\xe8\x65\xc8\xbc\x1c\xa5\x29\x3f\x62\x6e\x9a\x1f\xca\xaa\x18\x1a\xe9\x09\xc4\x1e\x06\x1b\x0c\xaa\x4e\xa9\x72\x7c\xa3\x52\x81\xdb\x01\x05\x63\xc3\x61\x26\xbb\x0e\x2d\xa2\x9e\xfc\x7c\xd2\x74\x00\xf9\xde\xfc\x57\x6a\xbe\x4b\x84\xfb\xbd\x31\x86\x76\xc3\x43\x7c\x13\x1a\x24\x1c\xd4\x34\x83\x4e\x0e\x2d\x40\xbc\xf7\x90\xdc\xcb\xa9\xf1\x1c\xc5\x5e\x5c\xaa\xb4\x4f\x71\xb2\x08\x95\xc1\x05\xfc\xea\xdc\x53\xcf\xc2\xc9\x81\x30\x32\xab\xce\xeb\x4c\x59\xc4\x77\x12\x82\x01\x09\xa2\x35\x23\x80\x00\xe7\xbd\x7b\x27\xbb\x95\xce\x6f\x83\x87\x38\xdf\xce\x29\x91\x3e\xf5\x16\x3d\x7d\xe7\xc4\xf4\x7d\x18\x08\xf9\x96\x54\xd4\xde\x24\xf1\x9d\xef\x1b\x92\x1b\x8d\xd7\xc4\xe5\x66\x01\x17\x49\x90\x29\xb4\x0e\x96\x02\xda\xce\x5b\xd3\x55\x32\xcd\x02\xde\xb5\x9f\x17\x76\xa6\x52\xe8\xe1\xd9\xe9\x57\xa4\xb0\x46\xf5\x95\x77\xe7\x9a\x90\xc9\xb9\x75\xad\xfc\x49\x13\x2e\xd5\xb1\x4a\x5c\xbf\xb1\x2a\x2d\xb9\x8e\xf1\x99\xed\x45\x73\x91\x2e\x8f\x4d\x13\x2d\x50\x78\xb9\x68\xc7\x64\x43\xdc\x55\xf7\xea\x05\x44\xba\x6f\x7e\x57\x12\x4d\x48\xa5\xbb\xe0\x34\x97\xf7\x73\xf2\xa1\x76\xf4\xfd\x8a\xc8\x3f\x94\xf4\x0b\x48\xe1\xa1\x17\x3e\x7a\xea\x57\x8b\xda\x54\xf1\x08\x15\x87\x19\xdd\xf8\xa3\xc9\xaf\xb4\x46\x69\xc5\x1e\x4c\x55\x96\x4a\xdb\x88\xbe\xf2\x19\xb3\x8b\xbf\x2d\x8f\xbd\x4b\xea\xb3\xed\x3f\x5d\xbe\xa9\x7d\xb7\x44\xb0\x17\xa6\xeb\x0f\x87\x8e\xdf\x94\x68\x51\x77\xa4\x9d\x81\x50\x48\x13\x38\x44\x73\xe9\xcf\xb9\x09\xfc\x1a\x63\xac\xcf\x2e\x69\xe4\x88\xb5\x84\xec\x18\x56\xaa\x4a\x84\x7c\x0e\xa2\x6a\x8d\x05\xbe\xff\xda\x11\xee\x9b\x6f\x9e\xfb\xc4\x1d\x85\xa8\xe0\xd7\xc2\x4a\x15\xd6\x84\x48\x37\x47\x54\x87\xf4\x30\x93\x0d\x4b\x76\x23\xa2\x74\xd4\xd5\x1e\xcc\x8e\xb3\xc1\xb1\x37\xa8\x86\x98\x3c\x1a\x88\x77\x12\xae\x14\x1a\x20\x8f\x79\x1c\xfe\x20\x1f\xa4\xa7\x61\x26\xc9\x93\x40\x53\x0a\xef\x38\x66\x72\x08\x53\xfc\x50\x0a\x9e\x71\xe2\xe8\x3a\x9f\xd0\x10\x3e\x09\xd3\xc5\xf9\x05\x93\x95\x4b\x0b\x4e\x0c\xd5\xd3\xe8\xc0\x9a\x0f\x8d\x7f\x92\xed\x13\xd6\x23\x82\x1e\xd0\xb8\x53\xd6\x64\x9a\xb8\x03\x66\x6c\xd8\x9a\xd4\x28\x8d\x5b\x8d\x41\x0e\x6b\x5b\x92\x9b\xd6\xea\x49\x5b\x4a\x48\x7d\xe6\x7b\xc9\x8a\x90\x9c\x65\x42\xa8\x2c\x99\xdf\xa5\xdf\x6a\xdf\x64\x6b\xff\x08\x5b\x75\x87\x3b\xd4\xc7\x84\x4b\xd0\x62\x2e\x3b\xc4\x33\x07\x3c\xc2\x72\x09\x83\x61\x2e\xc8\xb6\x4c\x6e\xb0\x5e\x7d\xac\x71\x0b\x6b\xaf\x21\xf3\x1a\x55\xfc\x21\x49\xd2\x2a\x8b\xac\x51\xac\xb5\xe8\xc7\x9a\x30\xed\x36\x0f\xb9\xcc\x27\xb3\xe2\x73\x6a\xd7\x52\xc4\xc9\xf7\x41\xda\x93\xef\xc6\xb8\xdc\x25\x89\x4b\x96\x61\x2c\x04\x19\x4f\x1e\xf5\x9a\xb7\x73\x46\x6b\x2e\x2c\xea\x50\x68\x60\x89\xd4\x75\xf3\xbe\x16\x98\x4e\xf4\x12\x97\x71\x13\x3a\x70\xf9\x69\xea\xae\x28\x85\xb3\x84\x29\x42\x9b\x2d\x8b\xb9\xbf\xc1\xc4\x91\x8c\x78\x92\x50\x7c\xa6\xcc\x7f\xc1\x6c\xb6\x7d\xf1\x81\x58\xc4\x95\x35\x4d\x7a\xc3\x87\x1f\xf8\x24\xb8\xe0\xc6\x51\xcd\x15\xe6\x40\xac\xc1\x89\x01\x6b\xe1\x96\x81\xd3\xf9\x7c\xb7\x96\xd0\xb4\x72\x62\x78\x71\x7d\x85\xf9\xb0\x33\xcf\xb4\x66\xfd\xcc\x0a\x00\xb7\x58\x0c\xc4\xb8\x9d\x21\x5c\x8c\xa0\x19\x16\xc0\xe3\x1b\x97\xd6\x0d\x4a\x29\x6d\x0e\x20\x38\xfc\xe4\x0f\xde\xe2\xde\x5b\x02\x26\xeb\x62\x2c\x0f\x42\xa3\xa8\x23\xe6\x5b\xdc\xbb\x46\xa1\x3c\x20\xad\xb4\xc6\x13\x01\xe3\xa9\x00\x12\x9c\x5b\x4c\x51\x88\xde\x44\xc4\xd2\x6e\xe9\x44\xae\x00\x08\xf0\xd0\xab\x03\x32\xd3\x38\x43\xd4\xe4\xe9\x4d\x0f\x1c\x35\xbc\x98\x05\x12\xb3\xb2\x14\x7c\xc0\xd6\xfa\x9f\x55\x43\x21\xff\xac\xa0\x3f\x0e\x78\x26\xda\xf5\xc4\x35\x15\x0c\x7e\x6a\x1f\x1b\x3f\x8d\xc4\xf5\x5b\x5e\xba\x75\xeb\x11\xac\x83\x1e\x89\x45\x20\x3e\x38\x8c\xc0\x3d\x9f\xbf\x94\xc7\x70\xad\x2c\xfd\xef\xc5\x07\x6e\xac\x49\xe6\xf0\x9b\x1f\x39\x43\xd7\xca\xba\xb6\x9f\x44\x12\x8f\xd4\x4c\x82\x84\x9c\x0c\x09\x86\xf4\xb2\x47\xe3\x6a\xd7\x88\x98\x05\x29\x2d\x9a\xd5\x51\xe6\xf2\x3f\x6e\xc8\x6f\x50\x3a\x8e\xdc\x6e\x5b\x69\x1f\x02\x1e\x17\x3d\xa4\x92\x27\x6e\x99\x22\x42\x1f\x01\x5a\x4f\x1a\x37\x91\x94\x4a\x77\xe8\x35\xd0\xd1\x08\xcc\x15\x42\xe8\xde\x29\x73\xff\x8d\xaf\x37\x12\x8c\xd4\x7f\xee\x5c\x65\x5f\x2f\xc3\x2c\x6e\x78\x06\x05\xea\xcd\x18\x9e\x25\x69\xcf\xa9\xa9\x1b\xd2\x6f\x81\x7e\xc3\x5a\xae\x0d\x64\x60\xfe\x9d\xfa\x7e\x45\xe2\x38\x53\xd5\xfb\xb6\x5e\x2d\x16\xac\xa4\xa9\xff\x17\xe9\x39\x47\xc9\x7f\x43\xc9\xb8\x36\xe4\xa1\x91\x1b\x29\xd2\x43\x6f\xb7\x0f\x65\x10\x6d\xd0\x04\x95\x1b\x20\x85\xb6\x63\x82\x74\x30\x49\x96\x04\x14\xc3\x71\xa3\x5a\xf7\x0c\xd1\x31\xdc\x6d\x95\xc1\x50\x05\x41\x0e\x13\x37\x70\x74\x8b\xfb\xa3\xe3\x0e\x6b\x02\x4f\xeb\x9a\xa3\x97\xf2\xe8\x38\x16\x1f\x74\x19\x25\x1a\x00\x1f\x97\x1e\xb9\x77\x47\x8b\x9e\xed\x1a\x8c\xca\x27\xec\xd9\xa0\x9a\x67\x79\xee\xaa\x87\x99\x78\x33\xa1\x97\x07\xe7\xdc\x25\x1c\x89\x5d\x09\xc3\x09\x07\xa9\xdd\x34\xac\x7c\x99\x3a\x9a\x89\xde\x0d\xa8\x5d\x74\x94\xb2\x2d\xe6\x95\x48\x71\x59\x70\x55\x07\x82\x97\xc6\xc1\xa9\x97\x1f\xbb\x85\x87\xd7\x6d\x4c\x7a\xc0\x07\x6b\x10\x67\x50\x75\xb4\x08\x42\xe5\x83\xae\x64\x9a\x5a\x6d\x4f\xb2\xf6\xd8\x0f\x0c\x5b\xde\x5a\x5a\x1d\x8c\x27\x7b\x11\xd2\xb8\x27\x18\x56\xfb\x56\x68\xd9\xa2\x9b\xf4\x52\x03\xfc\x21\xb8\xac\x3e\x84\x31\x9e\x68\x25\xf0\xe0\x3b\x72\xce\x51\x9f\xc3\xe3\xc7\xa1\xdf\xba\xd7\xba\x88\x25\x9d\x9a\x3d\xf4\xa5\x49\x7e\x82\x82\x34\x6d\xac\x47\x42\x8f\x41\xf6\x9f\x72\x46\xe6\xf8\xae\xbd\x89\xfb\xcc\xfe\x2b\xdc\xdb\x87\x85\x59\x7a\x7e\x42\xcb\x7f\x8a\x3f\x3b\x62\x3a\x6a\x45\x77\x4f\x9f\x76\x04\xe4\x1c\x6f\x17\xe6\x78\xbc\x30\xe9\xf5\xc2\xa8\xe7\x0b\xd3\xde\x2f\xcc\xf2\x80\x61\xca\x0b\x86\x2f\xe6\x09\xc3\x84\x37\x0c\xf3\xdc\x3f\x98\xe5\x15\xf7\x86\x31\xd7\x33\x9e\x1c\x80\xe3\xc8\xfb\x7b\xc7\x13\x70\x89\xcb\xe6\x79\xc8\xf7\x20\xd3\x94\xa7\xdc\x23\xd2\x3d\xbc\xe5\x89\xf1\xb4\x7d\xda\xfb\x7a\xcc\x13\xa0\x0f\xbc\xf5\x79\x5e\xf3\x14\xf9\x3b\xa8\xcc\xf3\x9c\x27\x40\x1e\xf8\xd5\x53\xde\x33\xcc\xf4\xa0\x61\x8e\x17\x0d\x73\x78\x64\xc2\x9b\x86\x2f\xe5\x51\xc3\x97\xf1\xaa\xe1\xd3\x3c\xeb\xe1\x90\xc5\x7c\x29\xef\x1a\xa6\x3c\x6c\x98\x67\x5a\xe6\x7b\xda\x30\xc5\x17\x56\x09\x0c\xc5\x61\x33\x96\x96\x9b\xc6\x5d\x47\xa4\xfd\xe2\xd3\x1d\xc9\x9b\x6e\x22\x91\xd8\x80\xe4\xd3\xf5\xe6\x1a\x2c\x31\xcd\x68\x73\x96\x56\x3b\xd9\xff\x53\x9a\x4a\x7b\xc2\x64\x7e\xd2\x0c\xe1\x74\xd8\xf9\xfb\xd4\x5c\x1e\x8d\xac\x54\xb9\x5f\x87\xb8\xa9\x7b\x74\xa3\xb4\x96\x65\xa1\x96\x33\xe0\x32\xa8\xc4\x98\xdc\x83\xc3\xdc\x9b\x65\x27\x01\xc1\x81\xb5\xda\x15\xe2\xfe\xa9\x16\xb7\x63\x5c\xaf\x31\xb3\x7f\x0e\x4b\x27\xc3\x8a\xdc\x41\xa1\x26\xb5\x9e\xfd\x53\xfc\xd7\x9f\x3f\x32\xed\x37\xed\x9d\x78\xe4\x66\x7a\x8e\x2f\x5c\xe3\x83\x8a\x1e\x4f\x07\x0f\x87\x68\xe7\x86\xb1\x80\x17\xc4\x31\x23\x0a\xb3\x40\x26\x8d\x6f\xec\x4a\x54\xdb\x60\x4c\xd8\x84\x51\x07\x13\xc7\x7e\xcf\x1f\x8e\x96\x4b\xf8\x1f\x89\xf7\xb5\x5a\xfa\x60\x13\x8f\xe1\x8d\x2b\x3d\x6f\x9e\x38\xa5\x72\xad\x5e\x7c\xc0\xac\x4a\x97\x80\xb4\x69\x3b\x6a\xf0\xe7\xe7\x36\xff\xd2\x78\x74\x7e\x9c\x1d\x8f\xae\xe1\xfc\x79\xd9\x4d\x4f\xdb\x01\x0a\xde\xe2\xbe\xc9\xaf\x05\x4f\xd2\x57\xef\xce\xc9\x87\x45\x7b\xec\xcd\xfb\x1f\xe3\x7a\x5d\xb1\xe2\xd2\x23\xe8\x3b\x8d\xd3\x3c\x36\x0f\x42\xd4\x7a\x9b\xc2\x01\x21\x3c\x6a\xff\x8b\xa9\xd9\xd7\xf7\x48\xcd\x8e\xfb\x57\x6e\x20\x69\xb7\xb3\xc9\xc4\xc2\x8b\xdf\x2a\x26\x16\x70\xd5\x14\x49\x8f\x80\x0c\x8d\xc3\xe7\x3d\xd3\x5b\xd7\x8a\xac\x95\x8e\x9b\x07\x43\xdd\xf8\x18\xd1\x9d\x72\xcb\x98\xac\x35\x58\xc3\x19\xc6\x6d\x6f\x84\x92\x69\xcb\xb3\x4a\x30\x0d\x24\xc3\x1b\xa5\x47\xdc\xbf\x19\x73\xd2\x30\xef\x12\x33\x25\xf3\xb9\x51\xe8\xcd\xe1\x77\xed\x59\x72\xa5\x53\xa8\xb9\xf2\xcb\x98\xbc\x18\x9b\x9c\x03\x11\x7a\xe2\x2b\x0b\x23\x27\xab\x75\xd4\x4d\xb5\xd0\x1f\xfb\x92\xde\x3b\x6e\xc6\xc1\x72\xd3\xf8\x2f\x7c\x23\x95\xc6\xfc\x69\x63\x1a\x1a\x69\x5e\xc0\x0f\xfb\x68\x2f\xc7\xa4\x8c\xdb\xb8\xe6\xef\xd2\x25\x01\xcf\x20\x50\x61\xba\x1a\x15\xb1\x56\xda\xed\xc8\x7d\x92\x8f\xb1\x91\xab\x20\xd8\xf1\xcc\x3e\x5d\xc0\x3f\x50\x2b\xc7\x88\x12\x37\xcc\xf2\x5d\xed\x38\xc5\x22\x23\x1b\x96\xc0\xd9\x98\x82\xf9\x1a\x9e\x38\x80\xc0\x8b\x02\x73\xce\x2c\x8a\xfd\xd3\xb8\x76\x69\xf6\xc6\x62\x31\xc5\x30\xae\xe2\x7d\xa4\x96\x73\xad\x74\xc1\xac\x6b\xf7\xdd\x37\x63\x6b\x0e\x33\x79\xe9\xd7\xb8\x21\xa3\xa1\x9e\xdf\xa3\x71\xc0\x1a\xc1\x4e\x4f\x68\xd7\xc1\x68\xa7\x15\xdd\xc4\x4d\xc1\x31\x74\x19\x55\xae\x91\xd9\xe0\x9f\xc4\x93\x0c\x34\xba\x53\x0f\x82\x5c\x7d\x84\xf4\xc5\xd3\x08\x46\x13\xb4\xb1\x51\xa4\x4b\xdc\xed\x29\xab\x62\x85\x6e\xaf\x67\x72\x17\xba\xff\xa8\x8f\x54\x22\x0b\x6b\x15\x3c\x3b\x6c\x38\xc6\x00\xad\x69\x7f\xfe\xac\x3b\x20\x55\x59\xbc\xc8\x0b\x6e\x0e\xf7\x7a\xf7\x86\x75\xd4\x6d\x5b\xef\xf9\x26\xd5\x27\x78\xb6\x77\x0a\x73\xcb\x64\x2e\xfc\x2e\xfc\x3b\x0f\xbc\x37\x9e\x4c\x30\x5e\x18\x78\x42\xcd\xf1\x03\x2b\x4a\x72\x16\xea\xc3\x05\x14\x39\xc5\x72\x1f\x5b\xb1\x4c\x2b\x63\x5a\x8b\xfc\x4f\x93\x25\x86\x89\x8d\x32\xf5\x4e\x3e\xef\x94\xfb\x84\x75\x5d\x4f\x72\x30\x16\xbf\x2d\x2d\x99\xc1\x0e\xc9\x6b\x60\x2b\x55\xd9\xb0\xf1\x34\x76\xf2\x39\xb7\xf5\xb9\xe1\xbd\xbe\x93\xa8\xc9\x32\xce\xc8\x6b\xf7\xbe\x69\x1d\x4b\xb1\x55\x77\xa1\x0c\x8d\x15\x18\x68\x99\x5e\xf5\x38\xa4\x6f\x4b\xbe\xdc\x5c\x86\x2a\x39\x2f\xe8\xb5\x6a\x97\xa4\xde\xd3\x3a\xe2\x9d\x84\x13\x58\x5a\xcd\x33\x7b\x0e\x57\xca\xe9\x49\x3f\xb5\x8e\xe6\x86\x62\xe0\x9c\xaf\xfd\xae\xc4\x76\xc7\x56\x79\x44\xd3\x0e\x37\xa9\x40\x1a\x0b\x8d\x6a\xe1\x3b\x71\x65\xe0\xd7\x11\xc0\x85\xf7\x53\xcf\xe1\xa2\xdd\xd9\x28\xd0\x06\x8d\x92\xd9\xad\x89\xab\x21\xae\x1f\x68\xd1\xaf\x47\xa4\xc1\x32\xd7\x86\x0f\x0f\x4a\x42\x3c\x41\x3e\x6f\x5d\x4f\x72\xfc\xc9\x96\xbe\xf7\xbe\xe0\xcf\x2b\xc8\xe9\x34\x1d\x2f\xc6\xf1\x9b\xb7\xeb\xc2\x9b\x1e\x32\x1f\x5f\x88\x13\x0b\x6f\x7a\x20\x1f\x0a\x71\x1e\x0a\x71\x1e\x0a\x71\xba\xbf\x87\x42\x9c\xf0\x7b\x28\xc4\x19\xfa\x3d\x14\xe2\x1c\x02\x79\x28\xc4\x79\x28\xc4\xf1\xa7\xb4\x2c\x31\xab\x34\xb7\xfb\x37\x5a\xad\xb9\x98\x38\x37\xa7\xdf\xbe\xce\x9e\xba\xfd\x47\xe4\xbc\xf8\x2d\x75\x37\xaf\x96\xed\x43\xc9\x92\xd1\x46\xe2\x48\xc1\x79\x7b\xd4\xe9\x39\x2b\xb9\x3f\x6e\xe4\x7e\xdb\x86\xe2\x11\x51\xae\xa7\x6b\xe5\x72\x21\x6e\x9f\x68\x7d\x30\x04\x01\x7f\x2d\xf2\x63\xef\x72\x86\xe4\x84\x9f\xfa\x5f\x54\x8e\xba\xef\x0c\x97\x81\x14\x6e\x8f\xb6\xc7\xda\x27\x83\xf8\x0e\xeb\x97\x9d\x05\x09\xb7\x5d\xab\xf2\x67\x52\x91\xd7\xee\x6a\xec\xfb\x0e\x24\xda\x3b\x44\x49\x76\x05\x99\x21\x3d\xfa\x63\x3b\x8c\xdc\xf0\x1d\x4a\xd2\x2f\x9d\x53\x97\xfc\xbe\xbf\x70\xc2\x52\x33\x80\x41\xa4\xe3\xfe\x20\xa2\x6b\xe8\x08\xfe\xff\xe2\xef\x8b\x7f\xd0\x90\xa1\x2a\x37\x9a\xe5\xe8\x4f\xbd\x6b\xbd\xfc\x3f\x67\x50\x24\xb4\x50\xc6\xa8\x6f\x7f\xfa\x5c\x7a\xe0\x56\xb5\xe2\xd4\xb8\xa9\xa0\xef\x22\xf7\x33\x1d\x1a\x4d\x25\x9c\x73\xcc\x69\xd0\xd4\x2c\x9e\x56\xd7\x4c\xa3\x53\x1e\x5c\xf2\xa2\x2a\x1c\x07\x86\xe3\xd9\xda\xdc\xd6\xc7\xb9\x61\x3f\x9a\x96\xb3\xc5\x59\x23\xe7\x05\xfb\xd0\x83\xe5\xda\x3c\x5b\x00\x5c\x48\xe7\xb4\x07\xc2\xf7\xe0\x36\x27\xc1\x19\x17\x91\x84\x6f\x6b\x3c\x3d\x33\x39\xd0\x6d\x06\x6a\x36\xe3\xf7\x20\xba\x50\x64\x85\x9e\xc8\xdc\x46\xed\x62\x1c\x8c\xb3\xc5\xf3\xcf\xe5\xf5\x67\xee\xbc\xd0\xe9\xa8\xdc\xb7\xf3\xca\xdf\x9d\x2d\x14\xb7\xf3\x11\x3e\x26\xe8\x89\x38\xb8\x05\xfc\x90\xd6\xff\xf8\xc1\x92\x86\x14\x7b\xc8\x98\x76\xe1\x50\xdc\xfd\x13\xe0\x47\xea\x30\x0a\xa7\xfd\x69\x2b\x1d\x9e\x1a\x58\x78\x64\x92\x38\x2d\x63\x96\x19\xab\x55\xb9\xe5\xd9\x82\xa6\x2c\x88\xcf\x21\x70\xa1\xd4\xad\x01\xc1\x6f\xfd\xe1\x71\x83\xe1\x3e\x40\xc6\xcb\x2d\x6a\xe3\x8f\xb4\x38\x81\x17\x97\x57\x3f\xbf\x38\x79\x71\x79\xb5\xbc\x38\xb9\xfc\xf9\xe2\xf2\xe7\x8b\x67\x5f\x9f\xbc\x79\xfd\xea\xef\x67\xcf\xbf\xfe\xb6\xd3\xe6\x6d\xaa\x45\xba\x9f\xc3\xcf\x2e\x5e\x2c\xcf\x9e\x7d\x7f\xf2\xd3\xe5\x2f\x27\xcb\x9f\x2f\x9e\x7d\xfb\x5d\xa2\xf3\x5e\x9b\x21\xd0\x05\x97\x37\xaf\x96\xf5\x01\xb2\x37\xaf\x96\xbb\xb3\xc5\xd9\x17\x28\x85\x8b\x94\x1a\xf0\x46\x0e\x98\xc9\x37\x6e\x87\xdc\xad\x03\xd0\x02\x2c\x60\x62\xa3\x34\xb7\xdb\x81\x0c\x8f\x43\x9a\x04\x8c\xec\xaa\xc4\x8d\xb2\xdc\x1f\xf0\xe3\x7d\x31\x02\x44\xbc\xb9\x65\x32\x37\x5b\x76\x8b\x0b\xa8\x97\x6f\x4c\x52\xa1\xc5\x9f\xc6\x42\xed\x10\x50\x5a\xcd\x7d\xa0\xc6\xb5\xf7\x19\x64\x6e\x20\xf7\x99\x9f\xb0\xc9\x6a\x01\x1d\x3d\x3d\x8c\xa8\xd7\xd4\x57\x2f\x96\x27\x97\x3f\x5c\x3e\xa7\x59\x03\x78\xb2\x67\x85\x78\x7a\x9e\x64\xb5\x76\xcb\xd4\x74\xc1\xe7\x28\xe2\x9b\x2e\x2f\xe9\xb0\xcf\xac\xb9\xed\x7c\x32\x34\xc3\x4e\x6f\x33\x11\xf5\xec\x20\x82\x21\x71\x15\xf4\xa6\x55\x99\x12\x7e\xce\xb9\x99\x35\xe5\x83\x80\x7f\x3c\xc8\xd1\xd2\xe4\xb4\x14\x7f\x30\x0d\x67\x8b\x67\xce\x3c\x9c\x2d\x9e\xc7\xc9\x1a\x84\xe8\x26\x31\x2d\x6e\xce\x6e\xbd\xbe\x79\x71\xde\xda\x6a\x4c\xb8\x6e\xf9\x66\x7b\x78\xbc\xe7\x20\xf5\xeb\xf5\x6a\x6e\x20\x3c\xba\x79\xb5\x3c\x7b\x36\xce\x1c\x9f\x70\x18\x45\xab\x93\xaf\xe7\x34\x3a\x9b\xd3\xe8\xd9\x9c\x46\xcf\x13\x8d\x64\x25\xdc\x11\xc8\xe7\x60\x75\x95\x38\xee\xaf\xe5\xfe\x4c\x1b\xb3\x76\x6b\x6f\xd2\x52\x56\xac\xf6\x41\xcf\x87\xb2\xa2\xb1\x38\xe5\x8e\xdf\xf2\x45\xa1\x7e\xe7\x42\xb0\x85\xd2\x9b\xd3\xe8\x38\x9f\xfa\x83\x47\xdf\x2f\x79\x8e\xef\x6f\x5e\x2d\xbf\x6a\xbb\x69\xef\x33\x55\x94\xcc\xf2\x15\x17\xdc\xee\xdf\x2f\x9e\x7d\xaf\x31\x53\x45\x81\x32\xc7\x7c\xf1\xec\xff\x0e\x99\x25\xe2\xc8\x03\x13\x36\xaa\x4a\x6e\x5e\x2d\xdf\x5f\xbc\x58\xbe\x3f\x7b\xf6\xfd\xfb\x9f\x2e\x7f\x79\x3f\x6e\x31\xda\x5f\x3c\xfb\xf6\xbb\xf8\xc5\xf3\xef\xbf\x69\x81\x8b\xa6\xed\x7d\x34\x6d\x33\x80\x8e\xda\x2f\x80\x29\x2b\x78\x0f\xd0\xcf\xbe\xfd\x2e\x7e\xd8\xa0\xdd\x01\xdd\x6d\x31\x17\xf4\x67\x36\xf9\x53\x06\xff\xde\xf8\x26\xb5\x4f\x52\x41\x4c\x18\xfb\x09\x61\x2b\x9c\x37\x3b\x2d\x66\xbe\xdd\x4c\x01\xfb\x08\x61\xf2\x5e\x75\x57\x8c\xfe\x83\x84\x26\x39\x9d\xcf\x1b\x63\x72\x59\x1b\x93\x4a\xd6\x27\x57\x7c\xcc\x36\x87\x89\xe9\x56\x22\x99\x5b\xee\xce\xb5\x12\xf9\x97\x9b\xe8\xd7\x22\x7f\xbf\x62\xd9\xed\x1d\xd3\xf9\x7f\xec\x74\x3f\xe8\xc8\x04\xe8\xcf\xae\x23\xdb\x1f\x8d\xe3\xda\x99\x85\xb9\xf4\x7d\x7b\xf8\xc9\x28\x48\xff\x32\x09\x35\x05\x2e\x0d\x8b\xc6\x3d\x3e\x8b\xf7\x9b\xc1\xe6\xa3\x11\x78\x23\x98\x8f\x91\xa1\x0f\xa8\x79\x77\x2f\x6e\x1e\xe2\xe0\x54\xa7\x9d\xce\x26\x80\x76\x29\xdd\x23\x45\x37\x7e\x9b\x13\x1e\x79\xad\xfd\xf5\xe7\xd7\xca\xf7\x3b\x39\xcc\x17\x36\xa4\x72\x9d\x21\x35\xa5\x74\xb8\x3a\x26\x1d\x33\x5d\xd6\x19\x94\x1d\xcf\xc3\xea\x25\xf3\x2a\xb8\x1d\xdb\x35\x27\xd6\x76\xec\xc0\xd0\x02\xa3\xb3\x0d\xcd\xf9\x6c\x8b\x3e\x7e\xad\x54\xac\x8b\xf3\xe7\x42\x35\x9f\x6a\x72\xde\x36\xae\xf8\xfb\x19\x19\xa8\x50\xe2\x5e\xf7\xce\xdc\x91\xd4\x16\xa5\xf5\x88\x84\x52\x4b\xdc\xbb\x2b\x08\x7c\x0e\x38\x6c\x64\x1d\x2a\x45\x64\xc6\xa5\x56\x63\xae\xc4\x9d\x0e\x83\x3b\x14\xaa\x0c\xbb\x1c\xf1\x03\x37\x2e\x49\xda\x6e\xb2\x56\x95\x1c\x3c\xf3\x6b\x45\x48\x39\xf2\xe1\x02\xe0\x0a\x4b\x94\xee\x7c\x51\x25\xa1\xd4\x98\x71\x83\x62\x1f\x8a\x08\xdb\x30\xeb\xfb\x67\xd2\x0b\x0e\x0a\x18\x0d\x3c\x43\x13\x12\xe2\xae\x04\x20\x5e\x36\x82\x79\x95\x85\x5a\x9b\x6e\xee\x76\x20\xc1\xde\x66\x8d\xce\xe1\x5c\xad\xac\x4b\x37\x35\x1a\x2a\x20\xf7\x68\xe1\x0e\x45\xfa\xf0\x44\x96\xab\xd2\xfa\x03\x53\x68\x5e\x95\x04\xa3\xd6\xf6\x8e\x46\x27\xf8\x4a\x33\xcd\xb1\x5f\xf4\x04\x9f\x52\xc4\xf2\x5a\xa4\x4b\x56\x46\x13\xf5\xd4\x60\x90\x2e\x27\x41\x0a\xeb\x57\xe1\x06\xa0\x56\xd3\xee\x61\x99\xee\x75\x5c\x78\x2f\x94\x71\x37\x8d\x78\x62\xaa\x55\xb8\xb5\x20\x34\xfa\x02\xf7\x34\xf4\x6e\x2d\x1a\x5d\x6e\xea\xb5\x76\xd3\x5a\x17\x16\xd6\xf8\xd6\xed\xe0\xe0\x02\xa5\x56\xc7\x59\xa6\xb4\xe3\xeb\xc1\x25\x87\xf6\x79\x4c\xc9\x3c\xfa\x7d\xcb\x0d\x33\x25\xfd\x02\xdd\xf8\x28\x8f\x9a\x76\xdd\x6a\x99\xd6\xf3\xb0\x1e\xc1\x75\x98\x9b\x64\x4d\xd6\x45\x4d\x86\x50\xed\x3b\x79\x9c\x18\x75\x57\x7f\x94\x2a\x2e\xf0\xb5\x4d\x44\x36\x5d\x5f\xd0\x14\x41\xd6\x37\xbc\xc0\x13\xbe\xc0\xe3\x89\x9b\xa9\xda\x3f\xfc\xad\x62\xc2\x1c\xdc\x79\xf5\x34\xe8\x4b\xd2\x2d\xf4\x5f\xbd\xb8\xd9\xa6\x83\xd7\x43\x71\x67\x48\xdf\xfe\x6d\xb1\xc5\xbc\xfe\x44\xe5\xd4\x55\x55\xe1\xf8\x7a\x37\x9c\x8c\x95\xde\x68\xf1\x54\xb5\x8d\x8b\x0b\xba\x27\x63\xfe\x12\x8e\xba\x72\x3e\xbd\xae\xd0\x1d\xf9\xd9\xb9\x44\xa3\x3d\x71\x3a\x11\x2a\xa3\xf5\x21\x86\x3f\xe7\x7d\xec\x44\xfc\x66\x89\x87\xd5\x97\x66\x09\xc5\x12\xb5\x66\xf1\x00\x60\x87\xd6\x8f\x4c\x18\x87\x17\x93\x7b\x2f\xc6\xca\xe0\x01\x5a\x14\x20\x32\xcb\xcd\x9a\x0f\x5c\x18\xf2\xee\x70\xe0\x6f\x91\xe5\xfb\xd9\xc3\x76\xc3\x4c\x01\x25\xb0\x17\x87\x87\x97\x9b\x78\x82\xd8\xa2\x45\x99\x5e\x1b\x4d\x18\x24\x26\xe9\x63\xc7\xec\x7a\xba\xba\x5e\x86\x29\x4d\x03\x9e\x3d\xd8\xc4\x9c\xf6\x57\x5d\x13\x73\x4c\x5c\x58\x5f\x76\x15\x0f\x6a\xbb\xba\x5e\xb6\x49\x31\xe3\xd4\xd5\xce\x41\xa0\xf1\xdb\x89\x53\x35\x9b\xcb\x15\x4c\xf2\xf4\x7f\x77\x4a\xe7\xc7\xf3\x14\xa1\xd0\x83\x79\x75\xbd\xfc\x08\x4e\x0a\xe3\xb9\xba\x5e\xa6\x2a\x34\x0e\x98\xa7\x75\x28\x29\x6c\xd9\x0e\x61\x85\x28\xc1\x54\x19\xf9\x23\xeb\x4a\x88\x7d\x3c\xa7\xaf\x35\xb6\x7e\xfe\x78\xfe\x58\xd3\x0b\xaf\xa9\x55\x98\x81\xd5\x97\xe4\x8e\xa2\xcb\xd8\x21\x4d\xaa\xab\xea\x0f\x0a\x4e\xe6\xee\x7e\x9c\xfa\x75\xb8\x68\x24\x1d\x0f\x0c\x9f\x9c\x3c\xb6\x7a\x27\x98\xb1\x37\x9a\x49\xc3\xe3\xa5\x90\xf7\x2c\x2d\x89\xbf\x68\x1f\x73\x66\xf1\x64\xc0\xb1\x2d\xd0\x18\xb6\xf9\xb8\x1e\x34\x32\x33\x14\x68\x4d\x7c\xda\xf7\x95\x66\x7f\x3a\x14\x69\x7d\xda\x15\x2e\x8d\x08\xbb\x58\x2a\xb3\x14\x34\xc5\x87\xd2\x9d\xe7\x9c\x64\xb4\xcf\x77\x9b\xc5\xf8\x65\x16\x2d\xac\x6a\xed\x35\x86\xd7\xc3\x7d\x01\x0f\xf7\x05\xf4\x7e\x0f\xf7\x05\x3c\xdc\x17\xd0\xf9\x3d\xdc\x17\xf0\x70\x5f\xc0\xc3\x7d\x01\x0f\xf7\x05\x44\xee\x7a\xb8\x2f\x20\x4e\xd7\xc3\x7d\x01\x0f\xf7\x05\x3c\xdc\x17\xf0\x70\x5f\xc0\xc3\x7d\x01\xff\xb1\xf7\x05\xc4\x45\x8c\x9f\xfc\x65\xa4\x53\xe7\x12\xf4\x9b\x27\xd6\x72\xe2\xcd\xa6\xee\x12\xee\xf0\xc1\x47\x2e\x69\x1c\x1c\x9c\x61\xe6\xec\xa1\x6e\x1f\xbf\xca\x0e\x36\xd3\x1e\x93\x3d\x0f\x9b\x03\x7d\x37\xc7\x33\x37\x67\x40\xa9\x72\x12\x2d\xed\x15\x7e\x7b\x2d\xa7\xbf\x42\xe5\xe4\xc3\xaf\x14\xf5\x40\xc6\xcd\x61\x04\xc0\xc1\x0c\x87\x00\xb8\x55\x89\xd6\xd9\x1b\x6a\xdd\x5f\x80\x9a\x9d\x7e\xb1\xc2\xcc\xd9\x50\xd5\x34\x8b\xd3\xd8\xdd\x37\x75\xb8\x79\xc6\x97\x39\xf7\x33\x95\x32\x6c\x38\xba\x47\x1a\x66\x74\x03\xc8\x70\xe1\xfe\xa7\x15\xed\x0f\x9f\x2c\xf4\x91\x05\xfb\xa1\x30\x3f\x09\xf2\x63\x8a\xf5\x53\x45\xf9\x69\xab\xf4\x49\x95\xfa\x1f\xbd\x53\x7d\x7c\xf7\xe6\x54\xe9\xc9\x17\xaa\xca\xff\x22\x15\xf9\x1f\x5d\x8d\x9f\xaa\xba\x4f\xf6\x30\xaf\x12\x7f\xb0\xe2\x3e\x09\x73\xaa\x0a\xff\xa3\xed\xd4\x44\xe5\xfd\x64\xd5\xfd\x64\xc5\x7d\xaf\xda\x7e\x17\x8b\x4c\x77\x67\xcd\x5f\x8e\x2d\x4f\xfc\xd5\xec\xfe\x85\x5f\x24\xc6\xbc\x55\x92\x64\xac\xd2\x6c\x13\x8b\x94\x9a\x2c\x3b\xcb\x28\x8c\xc5\xdc\x1d\xe3\xe1\x87\x79\xcb\x65\x7e\x0e\x47\x9e\x54\xa5\xa8\x34\x13\xe1\xcf\xd6\xea\x39\xfc\xd7\x7f\x3f\xf2\x50\x31\xff\x35\xe2\x41\x0f\xff\x27\x00\x00\xff\xff\x6f\x26\x1f\x9f\x08\x8b\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 35592, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0xb, 0x58, 0x57, 0xba, 0x1b, 0x7a, 0x26, 0x23, 0x45, 0x14, 0xa3, 0xd, 0xcb, 0xcc, 0xa9, 0x67, 0x19, 0x45, 0xcd, 0x1b, 0x22, 0xcf, 0x4f, 0x9a, 0xb1, 0xd4, 0x64, 0x6f, 0x31, 0x4b, 0x9b}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x52\xc1\x6e\x1b\x3b\x0c\xbc\xef\x57\x10\x3e\x3e\x40\x9b\x17\x14\x05\x0a\xdd\x12\xb7\x48\x0f\x39\x04\x36\xd0\x02\xbd\xd1\xd2\x78\x23\x44\x16\xb7\x22\x37\x05\xfa\xf5\x85\xec\xed\xba\xa9\x4f\xbd\x05\xb9\xad\x38\x24\x67\x76\x38\x3c\xa6\x2f\xa8\x9a\xa4\x78\x0a\x59\xa6\x18\x2a\x22\x8a\x25\xce\xbd\x8c\x28\xfa\x98\xf6\xd6\x27\xb9\x7a\xbe\xee\x9e\x52\x89\x9e\xd6\x4b\x83\x6e\xf0\x7d\x82\x5a\x77\x80\x71\x64\x63\xdf\x11\x65\xde\x21\x6b\xfb\x22\x0a\x52\xac\x4a\xce\xa8\xce\x44\xb2\xf6\x4f\x1f\xb4\x4f\xe2\x69\x75\xdd\xff\xbf\xea\x88\x0a\x1f\xe0\x69\xe1\x71\xa9\x0c\x15\xaa\x33\xa2\x23\x87\x17\xf0\x51\xa0\x3b\x2b\x74\x32\xa2\xb2\x49\xed\x74\x44\x68\x9c\x8a\x50\x61\x1b\xec\x4f\x02\x4e\xfb\xff\x1e\xd3\x05\xbb\x60\x98\x05\x9c\x17\x13\x8d\x55\x9e\x53\x44\xdd\xce\x14\x44\xff\xe2\x59\xeb\x3f\xf9\x76\xf3\x75\xfb\xf0\xc7\xaa\x23\xa2\xc6\x86\x03\x8a\x7d\x2a\x56\x13\x66\xdb\x1c\x61\xbf\x47\x30\x4f\x37\x39\xcb\x8f\x63\x8d\x88\x83\x35\xc6\xf9\xe5\x08\x99\xd5\x52\xc8\xc2\x71\xc7\x99\x4b\x48\x65\xf0\x1f\xa1\xa1\xa6\x1d\xee\x85\xe3\xed\xb1\x8a\xaa\xcb\x48\x95\xc9\xf0\xfe\x9d\xbf\x4f\x6a\x9f\x45\x0d\xf1\x9b\x14\x5c\xe2\xeb\x47\x2e\x03\x36\x50\x99\x6a\xc0\x06\x41\x6a\xdc\xc2\xce\x8d\xc6\x83\xbf\x6b\x3e\x9f\x3a\x7e\x03\x75\x7e\x7b\x5a\xfd\xb7\xea\x9c\x73\xdd\xab\x8c\x97\xe3\x9f\x53\xc5\xdb\x0c\x59\xfb\xb3\x8b\x98\x55\xc9\xb8\x4d\x25\xa6\x32\x2c\x11\x6b\x35\x4f\xeb\x66\x61\xda\x4d\x4d\xc5\xeb\xbd\xd7\x10\xc6\x37\x79\xad\xbb\xf5\xc3\xc5\xad\xc6\x36\xb8\x4f\x05\x71\x23\x19\x2f\xce\xa5\x57\xb1\x68\xcf\xf1\x90\x4a\xf7\x2b\x00\x00\xff\xff\x8f\x64\x7a\x7c\xb8\x05\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1464, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x2c, 0xb5, 0xfb, 0x97, 0x77, 0x7d, 0xd7, 0x6d, 0x81, 0x2f, 0x39, 0x37, 0xcd, 0x2b, 0x82, 0x89, 0xac, 0x43, 0x14, 0x12, 0x84, 0x8, 0xf9, 0x32, 0x7f, 0xa9, 0x86, 0xe7, 0x98, 0x8d, 0x15}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\x51\xa8\x03\xa2\xdd\x7f\x80\x06\x89\xde\xb7\xf1\xdd\x99\xdb\xd8\x2b\xdb\x17\x7e\x1f\x45\x20\x88\x44\x69\x79\xde\xcc\xbb\x89\x2e\x15\xaf\xb4\x72\x0c\x6a\x5c\x68\xc8\x3b\x7b\x88\x69\xc5\xf6\x5c\x56\x4e\x5a\x28\xa9\x16\x80\x54\x2d\x29\xc5\x34\xf6\x13\xb0\xc1\x1a\x57\x39\xe7\xa3\xd8\x93\xda\xc2\x73\x70\xe7\x96\xe6\x15\xd3\x54\x80\x4e\x27\xee\x3f\xe1\x07\x50\xef\xf6\xf9\x07\xcd\xab\xa9\xa4\xb9\xe8\x05\x69\xe8\x66\x37\x9c\xcd\xf1\xc6\xbe\x49\xe3\x97\xef\x2f\xec\xf4\xc1\x2d\x03\xa2\xc8\xab\x04\xf4\x57\xf5\x9f\x42\xeb\xf7\x48\xf6\x43\x71\xc5\x94\x7e\xe7\xdd\x65\xe7\xea\x61\x5d\xf4\xe2\x1c\x31\xdb\x60\xa7\x34\x2f\x5f\x01\x00\x00\xff\xff\xf3\x40\x5a\x74\x0a\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x8c, 0x18, 0x1c, 0xe2, 0xe5, 0x97, 0x66, 0x8, 0xfe, 0x5b, 0x6, 0x60, 0x9d, 0x8f, 0xac, 0x16, 0x66, 0x66, 0x65, 0x25, 0xb3, 0x8f, 0xef, 0x71, 0x1d, 0x82, 0x2c, 0x1f, 0xa4, 0xd, 0x83}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xc8\x2e\x17\xdd\x02\x5d\xa0\x7b\x87\xee\x8c\xfc\x1b\x13\xb6\x45\x81\xa4\x5c\xa0\xa7\x0f\x92\x78\xe2\x7b\x0f\xc4\xe7\x2e\x3f\x30\x17\x6d\x85\xec\xc6\x75\xe2\x11\x8b\x9a\xfc\x73\x88\xb6\x69\xbd\xfa\x24\xfa\x71\x7c\xa6\x55\xda\x5c\xe8\x5b\x37\xa4\x1d\xc1\x33\x07\x97\x44\xd4\x78\x47\xa1\x6e\xba\x23\x16\x0c\xcf\xeb\xd5\xcf\xec\x9d\x2b\x0a\x69\x47\xf3\x45\x7e\x23\x4b\xbb\x1b\xdc\xb3\x76\x18\x87\x5a\xb2\xb1\xc1\x4b\xca\xc4\x5d\xbe\x4c\x47\xf7\xe7\x64\xa6\xcb\x25\x11\x19\x5c\x87\x55\x9c\xcd\x61\x87\x54\xf8\x4b\xd0\xe6\xae\xd2\xe2\x6d\x5d\xe7\x27\x1c\xb0\xdb\xf9\x7c\x47\xbc\xee\x26\xfe\x86\x3f\x8e\xba\xa4\x47\x00\x00\x00\xff\xff\xca\x87\x68\x45\xed\x00\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 237, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xfa, 0xc5, 0xb2, 0xce, 0xdd, 0xc0, 0x21, 0x49, 0xc0, 0x28, 0xa6, 0x7d, 0x8c, 0x46, 0xd4, 0xf3, 0x9d, 0x8, 0xb3, 0x2c, 0x8c, 0xac, 0x17, 0x87, 0xc8, 0x6c, 0x6a, 0x69, 0x5d, 0xef, 0x90}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\x06\xe0\x3d\x4f\xe1\x17\x48\x11\xdb\x29\x1b\x2c\xec\x87\xc4\xee\x4b\x7d\x57\xd3\xc6\x8e\x6c\xa7\x03\x4f\x8f\x2a\x55\x62\x02\x89\xd5\xb2\xfe\xff\xfb\xb1\xf3\x07\x99\xb3\x4a\x01\xbb\x61\x9d\x70\xc4\xa2\xc6\x5f\x18\xac\x32\xad\x17\x9f\x58\x9f\xf6\xe7\xb4\xb2\xcc\x05\xae\xba\xd1\x2b\xcb\xcc\xf2\x48\x8d\x02\x67\x0c\x2c\x09\x40\xb0\x51\x81\x6e\xda\x28\x16\x1a\x9e\xd7\x8b\x9f\x67\xef\x58\xa9\x80\x76\x12\x5f\xf8\x1e\x99\xe5\x61\xe4\x9e\xb5\x93\x61\xa8\x25\xd3\x8d\xae\x74\x3f\x72\xb0\xf3\x9b\xe9\xe8\x7f\x60\x12\xc0\x8f\xe5\xb7\x6a\x1f\xb7\x4f\xaa\xe1\x25\xe5\xf3\xfb\x9d\x6c\xe7\x4a\x2f\xb5\xea\x90\xf8\x27\xb9\xa9\x70\xa8\x1d\xab\xbf\x03\x00\x00\xff\xff\x37\x75\xb6\xb0\x31\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xb9, 0xd5, 0x57, 0xe3, 0x88, 0x98, 0x3e, 0x29, 0xea, 0xbf, 0x8c, 0x99, 0x2e, 0x96, 0xf8, 0xdf, 0xc2, 0x96, 0xd, 0xc7, 0x9e, 0xa3, 0x8b, 0x90, 0x2b, 0x7a, 0xa1, 0x1f, 0xfc, 0x4f, 0x3f}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\xae\xd5\x30\x0c\x86\xf7\x3e\x85\x5f\xa0\x0d\x88\x2d\x2b\x12\x13\xb0\x80\xd8\x53\x9f\xff\xb6\xe1\x34\x76\x64\xbb\x7d\x7e\xd4\xf6\xdc\x09\xdd\xd1\x7f\xbe\xfc\xfa\xe2\x94\x5e\xff\xc0\xbc\xaa\x64\x6a\x2a\x35\xd4\xaa\x2c\x13\xab\x41\x7d\x62\x6d\xe9\xf8\x3c\x3c\xab\x3c\x32\xfd\x82\x1d\x95\xf1\xe3\xa6\x86\x86\x28\x8f\x12\x25\x0f\x44\x52\x1a\x32\x55\x59\x0c\xee\xa3\x76\x58\x39\x91\xfb\xc0\x7b\x61\x64\xd2\x0e\xf1\xb5\xbe\xc5\xf8\x1f\xe7\x1d\x7c\xd6\x40\x1e\x5d\xab\x84\x9f\xc3\x48\x33\x8a\xc1\x7e\xeb\x13\xf2\xad\x6e\xc8\x94\x8e\x62\xc9\x76\x49\x0e\x36\x84\xa7\xe7\x3e\xc3\x04\x01\x9f\xaa\x26\xbf\x05\x0b\xb3\xee\x12\x29\xce\x8b\x03\x11\x51\x95\x80\x1d\x65\xcb\xf4\xe5\x93\x5f\x49\x57\x8b\x4c\x0d\x61\x95\xef\xc4\x79\xc5\xf9\x88\x35\xa2\xdf\x49\x6c\xfe\x55\xe5\xad\x2e\xf9\x1a\x89\xb8\xbc\x34\x10\x9c\xba\x69\x43\xac\xd8\x3d\xf1\x45\xb5\xd2\xfd\x56\x90\x65\x64\x58\xf8\xc8\x65\x9c\x77\x79\x6c\x78\x57\x1b\xb9\x4c\x6c\xf1\xea\x3b\x43\xd8\xcf\x6b\x77\x2f\x95\xe9\xe3\x2d\x4d\x7e\xf0\x40\xf4\x57\xe7\xef\x65\xc6\x96\x89\xb5\x75\x15\xc8\x59\xe7\xd8\xc0\xa1\x76\xab\xb6\x12\xbc\x5e\x94\xbf\xbb\x7f\xf0\x43\xff\x02\x00\x00\xff\xff\xf3\xaa\xe4\xf4\xff\x01\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xe6, 0x77, 0x40, 0x4f, 0x55, 0xae, 0x76, 0xce, 0xd1, 0x27, 0xf5, 0x2e, 0xec, 0x50, 0xfd, 0xf9, 0xf5, 0x2, 0xcd, 0x27, 0xfc, 0x51, 0x80, 0xdf, 0x29, 0x71, 0xe1, 0xca, 0xa7, 0x73, 0x22}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\x4b\xcc\x17\xc4\x86\xb2\x01\x03\x7b\x91\xd8\xdd\x9c\xdb\x33\xbd\xda\x91\xed\x74\xe0\xd7\xa3\xe8\x0a\x4b\xa5\x8a\xd9\x7e\xef\x7d\xdf\x03\xbc\xb2\xcc\x0e\xb1\x10\x68\x23\xc3\x50\x83\xba\x76\x0f\x32\x30\x5d\x09\x42\x81\xc3\xe1\x83\xec\xc2\x95\xe0\xa5\x56\xed\x12\x39\x9d\x58\xe6\x02\x6f\xdb\xeb\x4e\x57\x1a\x45\x2c\xc7\x84\x8d\x3f\xc9\x9c\x55\x0a\xd8\x1e\x6b\xc6\x1e\x8b\x1a\x7f\x63\xb0\x4a\x3e\x3d\x7b\x66\x7d\xbc\x3c\xa5\x33\x05\xce\x18\x58\x12\x80\xe0\x99\xca\x20\x10\x5f\xf8\x10\x13\xcb\xd1\xc8\x7d\xfa\x65\x4a\xde\xf7\x5f\x54\xc3\x4b\x9a\x60\x9b\xbe\x12\x5d\x81\xfe\x3a\x6e\x92\xdb\xc1\x1b\xd6\xfb\x0b\xc3\x76\x47\x87\x41\x73\xe3\x96\x00\xb0\xf1\xbb\x69\x6f\x77\xa4\xfe\xe3\xf1\x13\x00\x00\xff\xff\x5e\x3a\x23\xb1\x71\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 369, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x8e, 0x10, 0x4b, 0xec, 0x40, 0x80, 0x5c, 0x10, 0x83, 0xa9, 0x57, 0x2, 0x49, 0x9d, 0x4e, 0x4d, 0x6a, 0xec, 0xaf, 0x5d, 0x81, 0xa3, 0x2f, 0x1e, 0xd3, 0x8b, 0x69, 0xa0, 0x39, 0x50, 0xdf}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\x93\x98\x13\xc4\x86\x6e\x83\x85\xbd\x48\xec\xee\xc5\x6d\x4c\x5b\xfb\x64\x3b\x1d\xf8\xf5\x28\x22\x88\x01\xc1\xd2\xd9\xb6\xde\xf7\x7c\x87\x67\xd1\x29\x90\x33\xc3\x3a\x3b\xa5\x39\xdc\xce\x8c\x34\x48\x06\x5e\xd9\xaf\xd2\x18\x4f\xad\xd9\xa2\x39\x96\x93\xe8\x54\xb1\xb3\x33\xaf\x97\xa2\xc7\x42\x5d\xde\xd8\x43\x4c\x2b\x7c\x4f\x6d\xa4\x25\x67\x73\xf9\xa0\x14\xd3\xf1\xf4\x18\xa3\xd8\xfd\xf5\xa1\x5c\x38\x69\xa2\xa4\x5a\x00\xa5\x0b\x57\x88\x1e\x9d\x23\x86\xef\xe8\x6d\x10\x9d\x1a\xd7\x15\xa4\x31\xcb\x21\x87\x5f\x7b\xb1\xec\xdf\xb9\x65\xd4\x32\xe0\x4b\xb4\x41\x37\xe7\xed\x09\xeb\x13\x76\x7c\x58\xad\x3f\x95\x0b\x40\x5d\x5e\xdc\x96\xfe\x4f\xd7\xbf\xc3\x3f\x03\x00\x00\xff\xff\x1f\x8f\x27\xc8\x6f\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 367, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x6b, 0xe2, 0x98, 0x77, 0x85, 0x4, 0x5f, 0x81, 0xee, 0xa8, 0x60, 0xbe, 0x8a, 0xf3, 0x3, 0xad, 0xd8, 0x7, 0x27, 0x33, 0x11, 0xe8, 0x28, 0x66, 0xe4, 0xd9, 0x9, 0x76, 0xee, 0x60, 0xb5}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x70\xb7\x02\x56\xd1\xad\xd0\x05\xba\x77\xe8\xce\xc8\x74\x42\x44\x12\x05\x52\x36\xd0\x9e\xbe\x88\x63\x1b\x41\x3c\x74\x13\xc5\xf7\x9f\x3e\xf4\x02\x5f\x92\x08\x46\x51\x68\x17\x02\xa9\xa4\xd8\x44\x81\x9b\x51\x1a\xbd\xbb\x72\x19\xc2\xc2\x38\xac\xfc\x4d\x6a\x2c\x25\x80\x9e\x30\x7a\x9c\xda\x45\x94\x7f\xb1\xb1\x14\x7f\xfd\x30\xcf\xf2\x36\xbf\xbb\x4c\x0d\x07\x6c\x18\x1c\x40\xc1\x4c\x01\xb8\x9c\x95\xcc\xfa\x4d\xbf\x2e\xac\x62\xa4\x70\x7b\xb4\xd8\x85\xc7\xd6\x1f\x38\x9d\x12\x59\x70\x3d\x60\xe5\x4f\x95\xa9\xda\x4d\xda\xef\x3d\xfd\x9e\xf5\x2c\x0e\x40\xc9\x64\xd2\x48\x2b\xd6\xbd\x76\x0e\x60\x26\x3d\x3d\x5c\x1c\x6d\x5d\x77\x8c\x56\x19\x6c\x39\x18\xe9\xcc\x91\xee\x03\x95\xa1\x0a\x97\x76\x9f\xea\xed\x3b\xac\x51\x69\xb3\xa4\x29\x53\x4c\xc8\x79\x05\x67\xda\xa8\x28\x65\xe4\x73\xc6\xba\xf9\xa2\xd2\xb2\xfa\xb7\x17\xd6\x25\xf3\xd4\x6c\xa0\x9a\xe4\x27\xef\xfe\x87\x82\x4f\xc6\xbf\x00\x00\x00\xff\xff\x4f\x96\x11\xa4\xdd\x01\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 477, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xf1, 0xe, 0xa2, 0x89, 0xa6, 0xa5, 0x86, 0x8d, 0x2d, 0x22, 0x6e, 0x62, 0x6c, 0x7c, 0x58, 0xca, 0x7b, 0x96, 0x5f, 0xa7, 0xbd, 0x5f, 0xcb, 0x2d, 0x53, 0xeb, 0x25, 0xd3, 0x62, 0x2c, 0xf8}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\x84\x30\x10\x44\x7b\x7f\xc5\x48\xd4\x20\xa5\x75\x97\x32\x75\xa4\xf4\x96\x3d\x84\xd5\x81\xed\xdb\x5d\xf8\xfe\x13\x88\xab\xae\x9e\xa7\x37\x6f\xc0\x77\xce\x6d\xaf\x8e\xb9\x29\x7c\x21\x5a\xa7\x26\x6f\x0a\x71\xe3\x3a\x4f\xf8\x71\xd8\xd2\xf6\xb5\x40\xf9\xdc\x45\x89\x9a\x36\x5a\x4f\x99\xb0\xdc\x3a\x4b\x18\xd0\xa9\x9b\x98\x49\xab\x36\x85\x87\xd4\x12\xf1\x4b\x3d\x24\xf3\xf6\x87\xd4\xe5\x8f\x7a\x12\x11\xc7\x57\xd8\xe8\xa9\x24\x4f\x31\xe0\xf2\x45\x48\xfd\x57\x9a\x8d\xef\x80\x7b\xb8\x8e\xe2\x99\x55\x6d\x91\xd9\xc7\x0f\xee\x15\x00\x00\xff\xff\xe5\x09\x18\x74\xc4\x00\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 196, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0x8d, 0xe1, 0x55, 0xc4, 0xdf, 0x60, 0x69, 0xa, 0xef, 0xf1, 0x8c, 0x61, 0xea, 0x45, 0xf4, 0xa, 0xcb, 0x9d, 0xc7, 0xc3, 0xb4, 0x10, 0x8a, 0xb6, 0xf3, 0x21, 0xe6, 0x97, 0xc0, 0x28}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\x03\x41\x0c\x85\xfb\x39\x85\x2f\x30\x8b\x50\xaa\x4c\x4b\x45\x17\x09\x89\xde\x99\x3c\x96\x11\xb3\xf6\xc8\x36\x91\xb8\x3d\xca\xee\x02\x45\x0a\xca\xe7\xef\xfd\x98\x47\x7b\x85\x79\x53\x29\x74\x7d\x4c\x1f\x4d\x2e\x85\x5e\x60\xd7\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\x16\xd1\xe0\x68\x2a\x7e\x93\x44\xbe\x99\xa6\x33\x82\x27\x1d\x10\x7f\x6f\x6f\x31\x35\x7d\x58\x89\xcc\xb9\xc2\x22\x3b\xaa\x21\xb2\xf0\x82\x42\x0b\xc2\x5a\xf5\x1c\xdd\x13\x51\xe7\x33\xfa\xde\xb6\xf1\x26\xb3\xc1\x3d\xeb\x80\x71\xa8\xa5\x1f\xb0\x07\x77\xed\x83\x2b\x0a\xfd\x8e\xe6\xbb\x9c\x0f\xd4\x5b\xf1\x50\x8b\x75\x21\xdf\x15\x6d\xb0\xd0\xf1\x70\x3c\xac\x32\xd8\x66\xc4\x69\x3d\xfe\xd9\x1c\x1d\x35\xd4\xfe\x79\x33\xbe\x06\x0a\x3d\xf5\x4f\x0f\xd8\xf3\x29\x7d\x07\x00\x00\xff\xff\x31\x2a\x66\x9a\x58\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 344, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x93, 0xf5, 0x35, 0x51, 0xf2, 0xbd, 0xe6, 0x30, 0xc3, 0xd3, 0x25, 0x22, 0x49, 0x95, 0x6a, 0x8f, 0xa2, 0x8a, 0x9c, 0x67, 0xa6, 0xe4, 0xd, 0xee, 0x77, 0x40, 0x1c, 0x28, 0xe7, 0x40, 0xa3}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x21\x99\x9d\x0f\xdf\xaa\xb5\x73\xb7\xa2\x3b\x23\xd3\x36\x1b\x99\x14\x44\xba\x45\xdf\xbe\x48\xed\xfe\x1b\x79\xe4\x1d\x7f\xb8\x33\x9e\x16\x86\x72\xbc\x59\xbf\xc1\x1a\x77\x0a\xeb\x10\x47\x67\x6f\xa6\x2e\xd7\xca\x98\xee\x92\xbe\x70\x09\xd1\x39\x9d\x11\x0b\x23\xfa\xe6\xc1\x23\x0a\xe1\xba\xe9\x58\x19\xa2\x61\x88\x45\x1c\xc5\x74\x92\x79\xa5\x76\x49\xd4\xe4\x99\xbb\x8b\x69\xc6\xeb\xff\x74\x13\x1d\x33\x1e\x3e\xf7\x8f\xd4\xd2\xca\x41\x23\x05\xe5\x04\x90\xaa\x05\x85\x98\xfa\x7d\x04\x3a\x57\x26\xe7\x8b\x35\x56\x5f\x64\x8a\x8b\xd8\xbf\xd2\x99\x82\x07\xd3\xfa\x9e\x71\x8a\xbe\xf1\x29\x01\x95\xae\x5c\x0f\xdb\xfe\xfd\xaf\x6b\xa7\x1f\x0e\xe8\xa1\xd0\xce\xfc\x2b\x41\x69\xe5\x8c\x9f\x83\x43\xf2\x46\x85\x33\xbe\xc3\x06\xd1\xb9\xb3\xfb\xf0\xd5\x55\xfa\x08\x00\x00\xff\xff\x4c\x3f\xbd\xa8\x43\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x99, 0xa0, 0xf5, 0x24, 0x3, 0x8, 0xa4, 0xc3, 0xec, 0x80, 0xc0, 0x88, 0xbd, 0x8, 0xb0, 0xfc, 0xf0, 0x3, 0x42, 0x53, 0x21, 0xf3, 0xbb, 0x4a, 0x33, 0xfd, 0x7, 0xa3, 0x23, 0x4, 0xfa}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x41\x73\xdb\x38\x0f\xbd\xe7\x57\x70\x7c\xfe\x68\xd9\x69\xbf\xee\x96\x33\x39\x78\x5d\xb5\xc9\x4c\xec\x66\xe2\x4c\x7b\xf4\xd0\x14\x6c\x73\x4d\x91\x2c\x00\x79\xa2\x7f\xbf\x43\xd9\xb1\x65\xc5\x71\x73\xd8\xd5\x49\x23\x3c\x3c\x3c\x80\x00\x44\x1d\xed\x0f\x40\xb2\xc1\x2b\xa1\x63\xa4\x6c\x3b\xbc\xda\x58\x5f\x28\xf1\x05\xa2\x0b\x75\x09\x9e\xaf\x4a\x60\x5d\x68\xd6\xea\x4a\x08\xaf\x4b\x50\xc2\xfa\x15\x02\x91\x0c\x11\x50\x73\xc0\xbd\x81\xa2\x36\xa0\x44\x88\xe0\x69\x6d\x97\x2c\xcf\xe0\xb4\xf7\x81\x35\xdb\xe0\x29\xf1\x09\x61\x82\x5f\xda\x55\xff\xe0\xd4\xb7\x21\xb3\xfe\x6f\x30\x2c\x23\x86\xe7\xfa\x4c\x34\x8a\x60\x92\x33\x42\x74\xd6\x68\x52\x62\x78\x25\x04\x31\x6a\x86\x55\xbd\xa3\xe5\x3a\x82\x12\x8f\x60\x10\x34\x43\x32\x83\x03\xc3\x01\x77\xe6\x52\xb3\x59\xdf\xeb\x05\xb8\xbd\x8c\x0b\xa9\x31\x94\xd1\x69\x86\xbd\x67\xab\x1a\xe9\x71\x27\x24\x17\x68\x84\x78\xd1\xdd\xc0\x42\x01\xb3\x13\x49\xe9\xd9\x54\x0b\x40\x0f\x0c\x94\xca\x10\x48\x09\x67\x7d\xf5\x7c\x24\x0f\x05\x48\x0c\x0e\xfa\xa7\xc8\x52\x13\x03\x2a\xd1\xeb\xed\xa1\x1c\x5c\x0a\x7c\x2c\xb3\x10\x52\x6c\xa0\x56\xa2\x77\x99\xa3\x77\x88\xf5\x22\x5d\x89\x5e\xfe\x6c\x89\xe9\x68\x82\xe5\x12\x0c\x2b\xd1\x9b\x86\x99\x59\x43\x51\x39\xe8\x9d\x89\xd2\x09\x50\x79\x04\x6d\xd6\x7a\x71\x44\xbf\x37\x4a\xfe\x0c\xa6\xe2\x96\xdb\x31\xbf\x19\x98\xe0\x8b\xd4\x03\xd7\x83\xdf\x6b\xf0\x81\x25\x82\x2e\xea\xff\x56\x01\x01\x6e\xad\x81\x91\x31\xa1\xf2\x3c\x7d\xbb\x25\x84\x88\x68\x03\x5a\xae\xc7\x4e\x13\xed\x90\x54\x13\x43\x29\x8d\xab\xd2\x89\x48\x83\x96\xad\xd1\x6e\xef\x60\x82\x67\x6d\x3d\x60\xab\xe9\xe4\xa5\xb6\xdb\xeb\x05\x2c\xad\x6f\x04\x4f\x80\x48\xaf\xe0\x21\x38\x6b\x6a\x25\xbe\x6a\xe7\x16\xda\x6c\x9e\xc2\x7d\x58\xd1\x77\x9f\x23\x9e\x78\xda\x32\x81\x2b\xe7\x5e\x1c\xee\x96\xd3\xc0\x0f\x08\x94\xb6\x43\x07\xd7\x1a\xff\x2c\xa0\x5d\x59\x7f\xc8\xa3\x2b\x4e\xa5\xa1\xa2\x36\x83\x09\x65\xa9\x7d\xa1\x5a\x9f\xe4\xa5\x9c\xa4\x20\xd6\xd8\x66\x00\xbf\x6d\x7b\x1f\x2b\xf3\x98\xdf\xe7\xa3\x59\x3e\xff\x91\x3f\xce\xee\xbe\x4f\x4f\x30\x42\x6c\xb5\xab\x40\x89\xde\xa0\x3f\xe8\x0f\x25\x79\x1d\x69\x1d\xb8\x77\x96\xe9\xe7\xe8\x69\x7c\x3b\x9f\x8e\x26\xf9\xec\x61\x34\xce\xcf\x31\x7d\xc5\x50\xaa\x8e\x41\x88\xa5\x05\x57\x3c\xc2\xf2\xb5\x65\x6f\x7b\xd0\xbc\x56\x87\x05\xd3\x3f\xac\xd4\xb3\x32\xee\x26\xa3\x6f\x67\x83\x9f\x39\x81\xb5\x6e\x56\xa9\xc4\x50\xa5\x35\xb1\xfd\xd8\x1f\xb4\x3c\x11\x28\x54\x68\x80\x4e\x85\x21\xfc\xaa\x80\x98\xba\x72\x4d\xac\x94\x18\x0e\xca\xd6\xe7\x6d\x70\x55\x09\x93\xd4\xeb\x74\x7a\x78\x3b\xad\x8c\xa9\x03\x0a\x69\xf4\x09\x57\x99\x1c\x76\x49\x67\xc0\x26\x8b\x1b\x9b\x19\x2d\x1b\x74\x06\xcf\x8c\xda\x30\x14\x59\x84\xb2\x23\x4c\x17\xdf\xbd\xab\x1b\x5e\x78\x35\x03\x69\xe0\x25\x2e\xb4\xd9\xfd\x3f\x5e\x37\xe8\xaf\x4a\xd7\xcd\x7a\xed\x96\xa9\xe3\xf9\xba\x3f\x35\xae\x3a\xf9\x49\xe9\xc2\x8a\x03\x71\x01\x88\x1d\x0b\x81\xa9\x10\xa4\xb3\xc4\xe0\xa5\x2e\x8a\xd4\xc6\x37\xea\xf3\x87\xcf\x1f\x3a\x48\x76\x24\x8d\x8d\x6b\x40\x49\x95\x65\xa0\x9b\xa7\xfb\xd9\x3c\x1f\x7f\xb9\xcd\xe7\x8f\xb3\xd1\xfc\xe7\xdd\xd3\xed\x7c\x94\xcf\xe6\xc3\xeb\x3f\xe7\xdf\xc6\x93\xf9\xec\x76\x74\xfd\xff\x4f\xff\x3b\xa2\xf2\xf1\x97\xdf\xe0\x5e\xf1\x8c\xff\x1a\xbf\x8b\xe7\x2c\xee\x02\x5b\x27\xb7\x2a\x12\x23\xe8\xf2\x66\xcd\x1c\x55\x96\x0d\xaf\xff\xe8\x37\x63\xa6\x3e\x0d\x06\x83\x41\x76\xae\x14\x80\x2c\x97\xd6\xc1\x4d\xd3\x16\xec\x28\x8b\x68\xb7\x9a\x21\xbd\xf7\xcd\xc9\xc4\xbf\x38\xed\x11\x72\x03\xf5\x05\xdf\x0d\xb4\x1b\x22\x06\xec\x36\xec\x61\xbb\x3e\x04\x64\x25\x3a\x87\xf5\xf2\x7b\x2f\x81\xd1\x1a\xfa\x57\x87\x48\x34\x97\x8b\x32\x60\xad\xc4\xc7\xc1\xc4\xbe\x6b\xbe\xba\x23\xd4\xca\xf7\x6d\xd9\xa9\x5e\xbf\x9f\xa8\x5d\xd0\xd6\xf5\xe1\x6d\x0e\x4a\xd7\x2c\x6e\x2b\xdb\x7d\x99\xbe\xe1\x71\x61\x2f\xec\xae\x83\x13\x1d\xdb\x6c\x17\xb6\x88\x65\x28\xa9\xbb\xf2\x9b\xdf\xbf\xd1\x72\x51\xf9\xc2\x41\xa7\x61\xd2\x13\x9b\x8a\x35\xbd\x76\x40\xa5\x35\xf3\x4f\x00\x00\x00\xff\xff\xb8\xac\xc5\x1e\x10\x0b\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 2832, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x2b, 0xf1, 0xb8, 0x2b, 0x55, 0xdf, 0xa3, 0x95, 0x9b, 0x31, 0x93, 0xb8, 0x75, 0xae, 0x9f, 0x4d, 0x96, 0xcd, 0x9c, 0x14, 0xa6, 0xdf, 0x43, 0x6, 0x94, 0xd0, 0xa6, 0xb8, 0xda, 0xb, 0x32}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x6f\xc2\x40\x0c\x85\xf7\xfb\x15\x4f\xb0\x96\x14\xd6\xac\x4c\x9d\x58\x2a\x76\xf7\x62\x38\xab\x89\x1d\x9d\x7d\x20\xfe\x7d\x45\x00\xb5\xea\x4d\x4f\x67\xfb\x7d\xdf\x1a\x9f\x45\x1c\x95\xdd\x5a\xcd\x0c\x71\xa8\x05\x72\x65\x0a\x1e\xf0\x75\xc3\xfe\x78\x78\x83\xc4\x7d\x62\x3a\xde\xd0\x9c\x07\x90\x83\x90\x6d\x9a\x9a\x4a\xa6\x10\xd3\xb4\xc6\xc4\xb9\x90\x8a\x4f\x08\x43\xf0\x38\x22\x0a\xdf\xef\x71\x2d\x92\x0b\xf6\x63\xf3\xe0\x7a\x98\xb9\x52\x58\xfd\x85\x86\xe1\x4a\x12\x38\x59\xed\xd2\x1a\x1f\x7a\xae\xec\xbe\x37\x8d\x6a\xe3\xc8\xf5\xa9\xe3\x20\x1d\xd0\xe6\x61\xc9\xf1\xd7\xbb\x4b\x34\xcb\x91\xab\x8b\x69\x8f\x6c\x7a\x92\x73\x67\x33\xab\x17\x39\x45\x27\xf6\x7e\xd9\xa5\x6f\xd1\xa1\xff\x6f\x91\x26\x0e\x1a\x28\xa8\x4f\x80\xd2\xc4\x3d\xe4\xc1\x4f\x1e\x14\xcd\xef\xff\x97\x47\xf3\x92\x81\xcd\x73\xcf\x5e\x15\x58\xde\xe5\x85\x5f\x6d\xbb\x6d\xb7\xdb\xb8\xd2\xec\xc5\x62\x95\x7e\x02\x00\x00\xff\xff\xb3\xe2\x1b\x07\x65\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 357, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x55, 0x62, 0x66, 0x26, 0xb0, 0xbd, 0x39, 0xb8, 0x3f, 0x33, 0x66, 0x5d, 0x9f, 0x49, 0x8a, 0xa2, 0xac, 0x2a, 0x5c, 0x3e, 0x18, 0x29, 0x74, 0xbc, 0x0, 0x97, 0xc9, 0xe2, 0x1b, 0x83, 0x26}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x6e\xc3\x20\x10\x80\xe1\x9d\xa7\x38\x79\xc7\x69\xa5\x4e\xcc\x5d\x3a\x57\xea\x7e\x71\x2f\xce\xc9\x31\x47\xef\x8e\xa8\x79\xfb\xca\x4e\x54\x91\x56\x5e\x32\x81\x00\xfd\x1f\x30\x71\xfe\x4c\xf0\x36\xe3\x48\xef\xae\x84\x73\xc0\xc2\x1f\xa4\xc6\x92\x13\xf0\xb2\xde\x4b\xa1\x6c\x47\x3e\x78\xcf\xb2\x3b\x3f\x07\x2b\x34\xa4\x00\xe0\x38\xda\x32\x46\xc8\x38\x53\x82\xe1\x54\xcd\x49\x23\xe7\x51\xc9\x2c\x4a\x21\x45\x17\x0d\x00\x00\x07\x95\x39\xc1\x3a\x05\xb8\xaa\xdd\xab\x0c\x13\xe9\x8a\x77\xb7\x9d\x6b\xa9\xfb\x25\x77\xa2\x3c\x72\x8e\x5b\xed\x74\x42\x27\xf3\xae\xb9\xc6\x11\x8b\xca\xf7\x25\xaa\x54\xa7\x06\x7f\xd8\xbe\x0f\xa6\xf3\x4b\xff\xd4\x7a\x53\xdd\x53\xd4\x3d\x0e\x71\x3d\xb6\x01\x36\xde\x1d\xf7\x55\xf1\xb2\xfc\xeb\x3f\xf5\x4f\xf6\xf6\xd0\xf0\x13\x00\x00\xff\xff\xac\x8b\xd7\x12\xb1\x01\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 433, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x14, 0x39, 0xff, 0xa2, 0xc1, 0xc5, 0xd4, 0x2e, 0xb7, 0xd, 0x93, 0xd5, 0x83, 0x85, 0x1f, 0x1d, 0xe7, 0x73, 0xd1, 0x42, 0x8, 0xfa, 0x7a, 0x25, 0x4a, 0xed, 0x37, 0x10, 0xb8, 0x13, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
