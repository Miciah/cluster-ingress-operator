// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (788B)
// assets/router/deployment.yaml (1.76kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (918B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.39kB)
// manifests/00-custom-resource-definition-internal.yaml (4.452kB)
// manifests/00-custom-resource-definition.yaml (33.53kB)
// manifests/00-ingress-credentials-request.yaml (2.59kB)
// manifests/00-namespace.yaml (266B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (237B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (305B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (511B)
// manifests/01-cluster-role-binding.yaml (369B)
// manifests/01-role-binding.yaml (367B)
// manifests/01-role.yaml (477B)
// manifests/01-service-account.yaml (196B)
// manifests/01-service.yaml (344B)
// manifests/01-trusted-ca-configmap.yaml (323B)
// manifests/02-deployment.yaml (2.832kB)
// manifests/03-cluster-operator.yaml (357B)
// manifests/image-references (433B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x22\x37\xdb\xc1\x6d\x07\xaf\x37\xdc\x76\x43\x51\x74\xa7\x65\xa6\x66\xed\x88\x02\x49\x39\x6d\x7f\x7d\x61\x3b\x29\x82\x24\x45\x9b\xcd\xcf\x22\xbf\x47\x3e\xe9\x17\xfc\x1d\x8b\x39\x29\x58\x94\x4c\x1d\xa8\x8c\x04\x3b\x51\x50\x29\x4e\x6a\x35\x3c\xf6\x6c\x60\xbd\x94\xb1\x83\x96\x00\x0d\x94\xcc\x95\xa3\xf3\xb4\xc8\x2c\x66\xdc\x8e\x54\x87\x81\x53\xd7\x9c\x88\x0f\x32\x52\xc0\xcc\x4f\xa4\xc6\x92\x1a\xd0\x16\x63\x8d\xc5\x7b\x51\x7e\x47\x67\x49\xf5\xf0\xc7\x6a\x96\xed\xf4\x3b\xec\xc9\xb1\x43\xc7\x26\x00\x24\xdc\x53\x03\x92\x29\x59\xcf\x3b\xaf\x38\x3d\x2b\x99\x55\xeb\x48\x41\xcb\x48\xd6\x84\x0a\x30\xf3\x3f\x95\x92\x6d\x6e\xaa\x60\xb3\x09\x30\xcf\x26\x45\x23\x1d\xff\x51\xea\xb2\x70\x72\x5b\xd4\x0c\xb6\x8c\x91\x56\x69\xa4\x13\xaf\x62\x22\x6d\x8f\x2d\x23\x9b\x2f\x1f\x07\xf4\xd8\x87\x6b\x9f\x79\x05\x4a\xce\xf1\x7c\x87\x6b\x6b\x97\x81\x92\xd2\xc4\x74\xb8\x70\x88\x4a\xe8\xf4\x05\xf9\x32\x9c\x6b\xb0\x95\xf6\x85\xa2\x63\x8c\x64\x76\x9f\xc1\x92\x60\xfd\x99\xec\x4d\xfc\x52\x73\x6f\x26\x3f\x07\x6f\xcd\xd1\xcb\x05\xbf\xe4\xee\xf6\xc0\x46\xb1\x28\xfb\xdb\x37\xe8\x53\x59\x94\xe4\xf4\xea\x51\x92\xb9\xe2\xf1\xde\xcf\x7d\x8c\xce\x9a\xff\xcf\xcf\x61\x3d\xe8\xc5\x3c\x91\x1f\x44\x87\xf0\x11\x00\x00\xff\xff\xad\x45\xb2\xc3\x14\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 788, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xc4, 0x4e, 0xa2, 0x9d, 0x1b, 0xd7, 0x35, 0xbf, 0x95, 0x95, 0xb4, 0x17, 0x87, 0x56, 0xb, 0x12, 0xf, 0xb6, 0x3e, 0x51, 0xe5, 0x5a, 0xd0, 0x66, 0x3a, 0x4d, 0x36, 0xc9, 0x93, 0x90, 0xb2}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x41\x6f\xea\x48\x0c\xc7\xef\x7c\x0a\xeb\x71\x66\xa1\xaf\xdd\x6a\x37\x37\x04\xe9\x0a\xa9\x94\x08\xd2\x5e\xd1\x74\x62\xc0\xea\x64\x66\xd6\x76\xa8\xb2\x9f\x7e\x95\x40\x5b\xc2\xd2\xaa\x7b\x78\x9c\xa2\xf1\xdf\x7f\xff\x9c\xd8\x43\x1f\xa6\x18\x5d\xa8\x4b\xf4\x0a\xaf\xa4\x3b\x28\x70\x63\x2a\xa7\xb0\x37\xae\x42\xe9\xf5\x61\xe6\xb7\x8c\x22\x30\x09\x5e\x39\x38\x87\x0c\x12\xd1\xd2\x86\xec\x51\x04\x86\x11\x4c\x8c\x8e\xb0\x00\xa3\xc0\x95\x57\x2a\xf1\xb7\xde\x0b\xf9\x22\x39\xa9\xd0\x33\x91\x9e\x90\x85\x82\x4f\x9a\x04\x19\xee\xaf\x7a\x7d\xf0\xa6\x44\x30\xbe\x68\x1f\x24\x1a\x8b\xad\xa3\xa0\x76\xdc\x9a\xaa\x49\x0f\x20\x72\x68\x89\xa6\x68\x0a\x47\x1e\x57\x68\x83\x2f\x24\x81\xdb\xd1\xa8\x07\xa0\x58\x46\x67\x14\x1b\x29\xc0\x5b\x52\xfb\x8c\xbc\x27\x8b\x63\x6b\x43\xe5\xf5\xc1\x94\x98\x00\x87\x4a\x91\x8f\x82\x3e\xf8\x50\xe0\x0a\x1d\x5a\x0d\x0c\x24\xff\x61\x38\xe8\x22\x53\x60\xd2\x7a\xe2\x8c\xc8\xc1\x47\x6a\x51\x2c\x07\xd6\x55\xa2\xc8\x03\xcb\xa4\x64\x8d\x3b\x26\xd8\xe0\xd5\x90\x47\x96\x37\x16\x80\x41\xdb\xee\x19\xc1\x81\x82\x4a\xb3\xc5\xcf\xcb\x37\xbf\x56\x92\x55\xce\x65\xc1\x91\xad\x13\x98\x6d\x1e\x82\x66\x8c\xd2\xbc\xe7\x0f\x9d\x22\x97\xe4\x8d\x52\xf0\x73\x14\x69\x92\x8e\x09\x77\xc6\xb9\x67\x63\x5f\xf2\x70\x1f\xb6\xb2\xf0\x29\x73\x38\xc5\x88\x81\xf5\x04\xf7\x03\x78\xa7\x1a\x4f\x8e\x4f\xba\xcb\x02\x6b\x02\x7f\x8c\x3a\xd1\xc8\x41\x83\x0d\x2e\x81\x7c\x92\x7d\x62\x27\x5f\xf9\xdd\xdc\x5c\xff\x2f\xc3\x12\x95\xc9\x7e\x69\x79\xf5\xe7\xf5\xed\xb7\x3c\xfb\x30\x47\xde\x9e\x8d\xf5\x47\x18\xfd\x3e\xe9\xa8\x45\x8d\x0a\x54\x82\xfc\x3e\xd4\xd1\x88\xbc\x06\x2e\xda\x99\xde\xa2\x47\x36\xda\x31\xbc\xd0\xc2\x2a\x1f\xe7\xab\x75\xb6\x58\xe6\x1d\xca\x76\xdd\x12\xf8\xd1\xe0\xff\xb8\x90\xb6\x5c\x3c\xe6\xe9\x72\xbd\x4a\x97\x4f\xb3\x49\xba\x7e\x18\xcf\xd3\x55\x36\x9e\xa4\x97\x4c\x42\x44\x2f\x3b\xda\xe8\x80\x0e\x0b\x7e\xc1\x6f\x9a\xde\x8d\x1f\xef\xf3\xf5\x24\x5d\xe6\xb3\xbb\xd9\x64\x9c\xa7\xeb\xe9\x6c\x79\xc9\x6e\x88\x6a\x87\xf1\x85\x86\xea\x64\x18\x99\xf6\x46\x4f\x1b\x73\xb4\x47\x8f\x22\x19\x87\x67\x4c\x3a\x06\xe4\x49\xc9\xb8\x29\x3a\x53\xbf\xaf\xf2\x55\x77\x86\x9a\x19\xf9\x0b\xb5\x9b\x08\x10\x8d\xee\x12\x18\xee\xd0\x38\xdd\xfd\x73\x1e\xbc\xf4\xa5\x19\x4d\x41\xbf\x1a\x64\xd8\x54\xa9\xbf\x87\x23\xa1\x62\x8b\xd2\x35\x64\xfc\xbb\x42\x51\x39\x2f\x63\x63\xd5\x10\x8d\xca\xb3\xf3\x12\xcb\xc0\x75\x02\x3f\x7f\xbf\x9d\xd3\x49\x6c\x1f\x5c\x55\xe2\xbc\xb9\xed\xce\x36\xb9\x6c\xce\xb2\x03\xf5\xd7\x5f\x0e\x8e\xb3\x70\xfc\x5f\x18\x58\x64\x6d\xee\xfe\x73\x55\xd3\xf3\xc2\xbb\x3a\x01\xe5\xea\x2d\x74\x00\x78\xaf\x3d\xf8\x86\x97\xa0\xe5\xee\x0b\x3e\xaa\xe7\xa1\xc0\x04\x6e\x7e\x8e\x3a\x0b\xb7\x6a\xe5\xcd\x1d\xdc\xbd\x2f\x07\x87\x55\xfd\x37\x00\x00\xff\xff\xc6\x3b\xf5\x23\xe0\x06\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 1760, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xae, 0xdd, 0xfc, 0xcf, 0xfb, 0x9e, 0x6a, 0x40, 0x54, 0xc3, 0x32, 0x6a, 0x41, 0xf4, 0xdf, 0xec, 0xfc, 0x28, 0xfd, 0x94, 0xab, 0xf5, 0x8c, 0xb4, 0x26, 0xb, 0x57, 0x70, 0x30, 0xba, 0x1c}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\x6f\xdb\x30\x0c\x86\xef\xfe\x15\x2f\x92\x73\xb2\x15\x2d\x86\xcd\xc7\xf6\x34\xa0\x28\x02\xac\xd8\x9d\x91\xe9\x58\xa8\x2c\x0a\x24\x9d\xad\xff\x7e\x90\x9c\xec\x03\x2b\x7a\xb3\x09\xe9\xd1\xcb\x87\xdc\xe2\x51\x68\xc0\x3d\x25\xca\x81\x15\xdf\x58\xcf\x31\x30\x5c\x50\x12\x05\x46\xcc\x18\x55\xb2\x43\x46\xf8\xc4\x50\x59\x9c\xb5\x96\x43\x92\x65\x00\xe7\x73\x54\xc9\x33\x67\xb7\x7d\xb7\xc5\xd7\x7c\x52\x36\xc3\x83\x64\x57\x49\x89\x15\x56\x38\xc4\x31\x06\x9c\x29\x2d\x6c\x20\x65\x50\x29\x29\xf2\x00\x72\xe8\x92\x3d\xce\xbc\xef\x5e\x62\x1e\xfa\x6b\x82\x8e\x4a\xfc\xce\x6a\x51\x72\x8f\xf3\x4d\x37\xb3\xd3\x40\x4e\x7d\x07\x6c\xf1\x44\x33\x23\x1a\x8c\xfd\x1f\x04\x90\x69\x66\x2b\x14\xb8\x87\x14\xce\x36\xc5\xd1\x77\x71\x0d\xd5\x01\x89\x8e\x9c\xac\x42\x50\x33\xf4\x97\x7e\xda\xff\xe5\x54\xf8\x9d\x7c\x2f\x85\x95\x5c\xda\xc7\x8a\xda\x47\xf9\x90\x99\x87\x5d\x12\x1a\x76\xc7\x8b\xb6\x1e\x1b\xd7\x85\x37\x5d\x6d\xb5\xc2\xfd\xb5\x70\x8f\x27\x19\xf8\x20\xea\x1d\x60\x9c\x38\xb8\xe8\x5b\x2f\x6f\xf1\x3c\x45\x03\x25\x13\x4c\x64\x4d\x33\x8f\x23\x87\x26\x7d\x26\x7d\x89\xf9\x84\xc7\x7b\x14\x91\x04\x27\x3d\xb1\x1b\xc8\xb0\xe4\x89\x29\xf9\xf4\x8a\x1f\x13\x67\x64\x69\xb0\xcb\x84\x8a\x0c\xab\xea\xa2\x6c\x5c\x07\x98\x41\xc8\x32\x30\x8e\x3c\xc5\x3c\xb4\x77\x6c\xb5\x5d\xcd\xf1\x4f\x67\xcd\x94\x9e\x95\xc6\x31\x86\x83\xa4\x18\x5e\x7b\x3c\x4a\xa0\xd4\x01\x45\xd4\x6d\xb5\xbf\x99\xd9\x35\x06\xdb\x60\x5e\xcc\x71\xe4\x86\x1a\xa3\x9a\xb7\x63\x75\x3b\x6a\x25\x45\x73\x98\xc0\x27\xf2\x56\x68\x2b\xd3\x10\x45\xe5\x1c\x07\x56\x04\xc9\x63\x3c\x2d\xca\x6b\xdf\x55\x2b\xae\x5a\xeb\x16\x2e\xc6\x88\x8e\x51\x14\xd1\x0d\x6b\xc3\x0d\x11\x26\x0e\x2f\x35\xf8\xae\x0d\xbd\xc7\x25\x55\x33\x5c\x54\x5c\x82\xa4\x1e\xcf\x0f\x87\xb5\x22\xea\x3d\x6e\xbe\xdc\x7e\x6a\xbf\xab\xc6\x43\x2b\xfe\xb9\x78\x45\x4d\xee\xe5\x5d\xce\xe7\x8f\xff\x51\x2e\x77\xfe\x46\xbc\x9f\xe5\xee\xee\xf6\x4d\x88\x75\xbf\x02\x00\x00\xff\xff\x44\xb9\xd9\xc8\x96\x03\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 918, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xaa, 0x26, 0xea, 0x33, 0xe3, 0x14, 0x20, 0xa1, 0x6f, 0x2, 0x8c, 0x12, 0xc2, 0xd6, 0x5d, 0xf2, 0x56, 0xce, 0x5e, 0xb1, 0x19, 0x93, 0xc0, 0x35, 0x4d, 0x98, 0x1e, 0xcb, 0x8, 0xc9, 0x17}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x8f\x13\x31\x0c\xbd\xcf\xaf\x88\xb6\x37\xa4\x4e\xc5\x0d\xf5\x86\x40\xe2\x04\x2b\x21\xc4\x3d\x93\x78\x3a\xa6\x99\x38\xb2\x9d\x96\xf2\xeb\xd1\x7c\xed\xb2\xed\x6c\x3b\xc0\xc2\x2d\x76\xec\xe7\x17\xfb\x25\x59\x99\x77\x21\x8b\x02\x1b\xa6\x00\xa6\x26\x36\xda\x80\xa1\x04\x6c\x95\xd8\xa0\x0a\x84\xba\x2c\x56\xe6\xcb\xfd\xfb\xfb\xad\x79\x6b\x02\xa9\xa1\xba\x8b\x12\x30\xd2\x50\x0e\xde\x54\x60\x18\x52\xb0\x0e\xbc\xa9\x4e\x3d\x94\x18\x8c\x3d\x54\xb4\x2d\x48\xb2\x0e\xa4\x47\x3f\x36\xe8\x9a\x62\xf5\xb4\x8a\x75\x9a\x6d\x08\x27\x13\x01\xbc\x18\xeb\x1c\x88\x94\xc5\x1e\xa3\xdf\x4e\x04\x3f\x53\x80\xc2\x26\xfc\x0a\x2c\x48\x71\x6b\xb8\xb2\xae\xb4\x59\x1b\x62\xfc\x61\x15\x29\x96\xfb\x37\x52\x22\x6d\x0e\xaf\x8b\x16\xd4\x7a\xab\x76\x5b\x98\x9e\xc1\xb6\x2b\x16\xa5\xc1\x5a\xd7\x18\x77\x0c\x22\xeb\xa9\x7c\xc1\x39\x80\x6c\x8b\xb5\xb1\x09\x3f\x30\xe5\x24\x5d\xda\xda\xdc\xdd\x15\xc6\x30\x08\x65\x76\x30\xfa\x1c\xc5\x1a\x77\xad\x4d\xd2\x9b\x8f\xa7\xeb\x4d\x01\x3e\xa0\x03\xeb\x1c\xe5\xa8\x83\x0f\xa2\x4f\x84\x93\x35\x46\x4c\x86\x63\x18\x37\x12\xf9\x31\xfe\x00\x43\xf0\x01\xb8\x9a\x98\xbc\xba\x2b\x96\xf1\x8b\xe4\xe1\x2c\x39\xa0\x68\xbf\x38\x5a\x75\xcd\x0c\x8e\x4d\xfd\x69\xce\x90\x3c\xa4\x40\xa7\x76\x29\x99\x44\x01\xdd\xe9\x12\x26\x91\xf7\x28\x9c\x53\x37\xa1\x2a\xfb\x1d\x2c\xc3\x6b\x29\xa2\x12\x63\xdc\x95\x8e\x18\x48\x4a\x47\xed\x25\xfc\xd8\xcf\x31\xfa\x0c\xd9\x31\x58\x85\x7e\xb9\x83\xa1\x07\x39\xf9\xce\x75\x59\xef\x59\x39\xcd\x68\x60\x50\x64\x2f\xf3\x73\x47\x85\xd1\x63\xdc\x0d\xfe\xc7\x88\xb3\xad\xeb\x1c\x6f\x0e\x6c\x52\x6e\xf9\x20\xea\x59\x9e\xa3\xd0\x1d\x45\x65\x0a\x01\x58\x9e\x71\x6f\x44\xad\xe6\x45\x63\x19\x93\xcb\x85\x14\x7c\x14\x06\x47\x3c\x6a\xfb\xd1\xfc\x8d\x92\xc3\x95\xbb\x79\xd6\x9a\xad\x28\x67\xa7\x99\xe1\xc9\x41\xe1\xa1\xf6\xb8\xb2\x09\x3b\xd9\x4c\xfd\x88\xa0\x47\xe2\xfd\x19\x97\x6e\x18\x7f\xc8\x65\x94\xc3\xd4\xa2\xeb\x03\x7f\xa1\x1a\xb3\xfd\x9c\xc4\xbe\x32\x1f\x91\x99\x18\xbc\xa9\x99\x5a\x63\x45\x40\x65\xc3\x94\x15\x78\xd3\x82\x32\x3a\xd9\x8c\x90\xeb\x4e\xab\xe5\xc9\xb6\x61\xe6\x92\x74\x19\x37\x98\x0d\xa8\x32\xc1\xce\x74\xf5\x3a\x9d\x05\x34\xba\x6b\x0a\x51\xd1\x5d\xbf\xa7\x4a\x7b\x88\x0c\x07\x84\xe3\xfc\x0c\x5e\x86\xc9\xed\x07\x43\x72\xf5\x0d\x9c\x0e\xff\xda\xbf\x25\xb4\x78\x42\x37\x3e\x89\xff\x48\xe4\x2f\xa4\xbb\x80\x87\x80\xcb\x8c\x7a\xba\x41\x65\x0a\xeb\x5e\x45\xf8\xae\x8e\xa2\x28\x5b\xbc\xf8\xfc\xb2\xc0\x2f\xc9\x9f\xba\xef\x7f\xd8\x68\x48\x74\x7c\x49\x8a\x9f\x01\x00\x00\xff\xff\x44\x9e\x1b\x25\x56\x09\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2390, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0x12, 0xc3, 0xf5, 0x5c, 0x9c, 0x18, 0x23, 0x95, 0xf3, 0xca, 0x99, 0x9d, 0xb9, 0x86, 0x52, 0x9d, 0x76, 0x97, 0xfe, 0x31, 0x39, 0xb5, 0x5f, 0x9d, 0x2a, 0xad, 0xe5, 0x5c, 0x23, 0x35, 0x75}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\x38\xa4\x0f\x7d\xb1\x24\xa4\xd9\x86\xc1\xc0\x30\x04\x49\x31\x04\x6b\x83\x22\x31\xb2\x61\x59\x80\xd2\xe4\x49\xe6\x2a\x91\x2a\xef\xe4\x2c\x19\xf6\xdd\x87\xa3\x2c\xff\x51\x2d\xc5\xeb\x30\xbe\x24\x3a\x9e\xee\x7e\xfc\xdd\x1f\x9e\x35\x49\x92\x64\xa2\x6a\x7b\x87\x81\xac\x77\x33\x50\xb5\xc5\x3f\x19\x9d\x3c\x51\xfa\xe9\x7b\x4a\xad\xcf\x56\xa7\x0b\x64\x75\x3a\xf9\x64\x9d\x99\xc1\x45\x43\xec\xab\x1b\x24\xdf\x04\x8d\x97\x98\x5b\x67\xd9\x7a\x37\xa9\x90\x95\x51\xac\x66\x13\x00\x1d\x50\x89\x70\x6e\x2b\x24\x56\x55\x3d\x03\xd7\x94\xe5\x04\xc0\xa9\x0a\x67\x60\x1c\x05\xd4\x3e\x18\x4a\xad\x2b\x02\x12\xa5\xbe\xc6\xa0\xd8\x07\xf9\xc7\xd1\xd2\xe6\x9c\x5a\x3f\xa1\x1a\xb5\x18\x2c\x82\x6f\xea\x19\x8c\x2b\xb7\xd6\x49\xf4\x01\x5a\xb4\x97\xd7\xb7\x37\xd1\x51\x94\x95\x96\xf8\xe7\x7d\xf9\x3b\x4b\x1c\xf7\xea\xb2\x09\xaa\xdc\x85\x16\xc5\x64\x5d\xd1\x94\x2a\xec\x6c\x4c\x00\x48\xfb\x1a\x67\x70\x72\x22\xff\x37\x8b\xb0\x66\x63\xed\x9a\x58\x71\x43\x33\xf8\xeb\xef\x09\xc0\x4a\x95\xd6\x44\x32\xda\x4d\x41\x7c\xfe\xe1\xea\xee\xec\x56\x2f\xb1\x52\xad\x10\xc0\x20\xe9\x60\xeb\xa8\xb7\x45\x07\x01\xeb\x80\x84\x8e\x09\x94\x88\xa1\x85\x90\xae\xdf\xaa\x83\x30\xc1\xb6\xf3\x2c\x6b\x27\x9e\x1b\x59\xcf\xfe\x6b\x01\xd0\xea\x80\x91\x08\x22\x01\x2f\x11\x56\xad\x0c\x0d\x50\x04\x07\x3e\x07\x5e\x5a\xda\xc2\x88\x07\xd9\x31\x0b\xa2\xa2\x1c\xf8\xc5\x1f\xa8\x39\x85\x5b\x0c\x62\x04\x68\xe9\x9b\xd2\x80\xf6\x6e\x85\x81\x23\xea\xc2\xd9\xe7\x8d\x65\x02\xf6\xd1\x65\xa9\x18\xd7\x11\xe8\x96\x75\x8c\xc1\xa9\x52\xa8\x6b\x70\x0a\xca\x19\xa8\xd4\x13\x04\x14\x1f\xd0\xb8\x1d\x6b\x51\x85\x52\x78\xef\x03\x82\x75\xb9\x9f\xc1\x92\xb9\xa6\x59\x96\x15\x96\xbb\x0c\xd6\xbe\xaa\x1a\x67\xf9\x29\xd3\xde\x71\xb0\x8b\x86\x7d\xa0\xcc\xe0\x0a\xcb\x8c\x6c\x91\xa8\xa0\x97\x96\x51\x73\x13\x30\x53\xb5\x4d\x22\x70\xc7\xb1\x0c\x2a\xf3\x6a\x13\xe0\xd7\x3b\x48\xf9\x49\x72\x80\x38\x58\x57\x6c\xc4\x31\xed\x06\x79\x97\xe4\x03\x2b\xb1\x6c\x5f\x6b\xf1\x6f\xe9\x15\x91\xb0\x72\xf3\xf6\x76\x0e\x9d\xd3\x18\x82\x7d\xce\x23\xdb\x3b\xc9\xb1\x25\x5e\x88\xb2\x2e\xc7\xd0\x06\x2e\x0f\xbe\x8a\x16\xd1\x99\xda\x5b\xc7\xf1\x41\x97\x16\xdd\x3e\xe9\xd4\x2c\x2a\xcb\x12\xe9\xcf\x0d\x12\x4b\x7c\x52\xb8\x50\xce\x79\x86\x05\x42\x53\x1b\xc5\x68\x52\xb8\x72\x70\xa1\x2a\x2c\x2f\x14\xe1\xff\x4e\xbb\x30\x4c\x89\x50\xfa\x32\xf1\xbb\xed\x67\x5f\xb1\x65\x6b\x23\xee\x5a\x4a\xb7\x0e\xd5\x50\x8c\x9c\xa3\x6b\x69\x56\x7b\xc2\x5e\x40\xe7\x4b\x84\xa5\x27\x96\xbe\xd3\x16\x0b\xee\x54\x69\xef\xcd\x83\xb0\x65\xb5\xda\xf3\xf9\xbb\x71\x5f\xf3\x77\x90\xfb\x10\x7d\x1c\xb4\x9f\xfb\x50\x29\x96\x26\xc9\xdf\x7d\x73\xd0\xb7\x54\x56\x81\xe1\x90\x73\xd9\x1f\xf3\x7e\xb3\x51\x8b\xb6\xe4\xb0\xed\x9b\x53\xc0\xb4\x48\xe1\xe2\xfa\xfc\xfd\xdb\x29\x9c\x4f\xe1\xf6\xe6\x6e\x0a\xf3\x5f\xe7\x80\xac\x8f\x65\x80\x55\x28\x90\xe9\x45\xae\xd7\x7a\x3d\x9e\x21\x66\xb6\xa4\x6c\xef\x7d\xcb\x58\x7d\x61\x74\x04\x46\xb7\xa5\x42\x50\x4f\x2f\xe6\x51\xdb\xe5\x8f\xc8\xa4\x67\xef\xfa\xa2\x41\x6c\x43\x36\xda\xa5\xbd\x33\xf1\xb6\x3d\xb8\x3b\x68\xf4\x18\xd3\xed\x2a\x15\xf1\x3c\x28\x47\xb6\xbb\xbe\x87\x75\xb7\x19\x27\xbd\x21\x61\x5b\xe1\x88\xee\x08\xe9\xdb\x55\x21\x91\x2a\x46\x7d\x1e\x65\x27\xa0\xa2\xfd\xfb\xef\xab\xcc\x7c\x19\xe2\xaf\x32\xc3\x07\x8a\xeb\x5f\x1a\x91\xb6\x6c\x03\x9a\x21\x33\xc9\x1a\xeb\xe0\xb6\xf8\x18\xd8\x3c\x98\xdd\x5f\x2a\xf4\x8b\xa2\x5b\xc6\xd1\x6f\xde\x0d\x1c\xb0\x3f\xd6\x88\xa6\x5c\x80\x0d\xa1\x91\x11\xa0\x9d\x3e\xd6\xb3\x8d\x74\x52\x34\xb1\x5c\x52\x38\x8f\x7f\x07\x20\x6b\xe5\xe4\x56\xb2\x46\x2e\x8b\xdc\xa2\x81\xc5\x93\x8c\x21\x57\x97\x20\x1d\x52\x15\x94\x1e\x7c\xf3\xe5\x12\xb0\x83\x14\xf7\x0e\x73\x62\xe3\x4d\x2e\x9d\x68\x03\x43\x9a\xb3\xe2\x0e\x5d\x77\xc6\xdc\xba\x7e\xab\xde\x5d\x5d\x2f\xdb\x3b\xfd\xef\x0e\xbc\x83\xf3\x5f\x6e\xe3\x73\x67\x31\x47\xd6\x4b\x34\xd0\xd0\x58\xba\x01\x7c\xbc\xba\xfc\x08\x8a\x40\x20\x3a\xb8\x3f\x7d\x88\xc6\x9e\x9b\x80\xc3\xe6\xe2\x4b\x23\x36\x95\x4c\x2d\x75\xc0\xc4\x20\x63\xa8\xac\x4c\x89\xf1\xda\x13\x0f\x6f\x1e\xa6\xe2\xe2\xa7\x8b\x0f\x87\x1c\x8c\x58\xdd\xba\x1e\x77\x70\xf6\x10\x39\xb9\x3f\x7d\xd8\x4e\x1a\xc6\x6b\x4a\xd5\x23\xa5\xaa\x52\xcf\xde\xa5\xda\x57\x99\x2e\x6d\xd6\x8e\x94\x59\xc0\x1c\x03\x3a\x8d\x59\xf0\x0d\xe3\xb7\x67\x59\x81\x9c\xb4\x2c\x27\x91\xe5\x25\x57\xe5\x2b\x1f\xe3\x39\x54\x38\xb2\xee\xdf\xf4\x9d\x56\x56\x07\x4f\x3e\xe7\xe8\x13\x5d\xd2\x50\xf4\xac\x84\xe2\xcc\x21\x3f\xfa\xf0\x29\x33\x8e\x32\xf1\xf3\xe3\xca\xe2\xe3\x0f\x71\x2f\xd1\xa5\x4d\x5a\x7c\xaf\xd4\x73\xb2\xd6\x4c\x8c\xa3\x88\x28\xa1\xa5\x7f\x1c\x43\x72\xb6\x83\x44\x97\xbe\x31\x69\xe1\x7d\x51\x62\xc4\x21\xfe\x04\xde\xce\xc9\x57\xa7\x59\xa5\x9c\x2a\xd0\x48\xe1\x91\x30\x70\x32\xde\xa6\xc6\xdb\x90\x54\xd6\x70\x7d\x28\xd3\x5e\x4e\xaa\xfc\x70\xc4\x55\x73\x64\xf3\xdc\x2f\x3a\x01\xd0\xaf\xaf\xcf\x0d\x86\xa7\x83\x65\x34\xe2\x7b\x53\x60\xd3\xcd\x9c\x1d\x7f\x63\x12\xab\xa2\xb0\xae\x50\xb5\x8d\x85\xd3\xaf\x65\xc9\xe8\xb1\x2a\x69\xf3\x7f\x9d\xd6\x73\x55\x50\x4c\x6c\x56\x45\x92\xdb\x92\x31\xd0\xf4\x3f\xe4\xf1\x00\xd0\x98\xd8\x9b\x9f\x28\x7b\x69\xfd\x52\xb4\x5f\xec\xfa\x03\x0a\xc3\xf7\x51\xd2\x5d\x08\x03\x63\xd7\x41\x83\x47\x8f\x5d\x3d\xd1\xaa\xfb\x70\xb1\x3a\xdd\x3e\xc5\x9c\x4b\xd6\x5f\x1a\xe2\x06\x00\xc9\xcf\x23\x33\x03\x0e\x0d\xae\x7f\xa3\xfb\x20\x93\x46\x2b\xd9\x5e\xf4\x4a\x6b\xac\x19\xcd\x75\xff\x4b\xc2\xc9\xc9\xde\x67\x82\xf8\xb8\x33\x8e\xc1\xfd\xc3\xa4\xb5\x8a\xe6\xae\xc3\x21\xc2\x7f\x02\x00\x00\xff\xff\xf2\x56\x01\xeb\x64\x11\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 4452, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x97, 0x3b, 0x70, 0x3e, 0xf0, 0xaf, 0x5e, 0x3b, 0xac, 0xca, 0xaa, 0xe0, 0xa6, 0x36, 0x5f, 0x77, 0xf7, 0x9b, 0xd4, 0x7, 0xb4, 0xbd, 0xbe, 0x2e, 0x39, 0xff, 0xdb, 0x5e, 0x7f, 0xdd, 0x95}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x5b\x73\x1c\xb7\xd1\xe8\xbb\x7e\x45\x17\xfd\x20\x29\x67\x39\x34\x25\xdb\xe5\xc3\xa4\x72\x8a\x26\x69\x5b\x15\x99\x52\x69\x19\xe7\x24\x47\xa7\x54\xd8\x99\xde\x5d\x84\x33\xc0\x18\xc0\x2c\xb5\x4e\xe5\xbf\x7f\xd5\xb8\xcc\x65\x07\x73\x21\x25\x7d\x0f\xf9\xb8\x55\x2e\x8b\x3b\x98\x46\xa3\xef\xdd\x00\x7a\x59\xc9\x7f\x45\xa5\xb9\x14\x67\xc0\x4a\x8e\x1f\x0d\x0a\xfa\x4b\x27\xb7\xdf\xeb\x84\xcb\x93\xdd\xe9\x0a\x0d\x3b\x7d\x72\xcb\x45\x76\x06\x17\x95\x36\xb2\x78\x87\x5a\x56\x2a\xc5\x4b\x5c\x73\xc1\x0d\x97\xe2\x49\x81\x86\x65\xcc\xb0\xb3\x27\x00\xa9\x42\x46\x5f\xde\xf0\x02\xb5\x61\x45\x79\x06\xa2\xca\xf3\x27\x00\x82\x15\x78\x06\x5c\x6c\x14\x6a\x9d\x4a\x61\x94\xcc\x73\x54\x3a\x91\x25\x2a\x66\xa4\xa2\x7f\x08\xbd\xe5\x6b\x93\x70\xf9\x44\x97\x98\x12\xc0\x8d\x92\x55\x79\x06\xf1\x41\x0e\xaa\xa6\x71\x00\x0e\xcb\x57\x6e\x82\x8b\x7a\x02\xfb\x2c\xe7\xda\xfc\x25\xfe\xfc\x35\xd7\xc6\x8e\x29\xf3\x4a\xb1\x3c\x86\xa2\x7d\xac\xb9\xd8\x54\x39\x53\x91\x01\x4f\x00\x74\x2a\x4b\x3c\x83\xa3\xa3\x27\x00\xa5\x42\x8d\x6a\x87\x7f\x15\xb7\x42\xde\x89\x1f\x39\xe6\x99\x3e\x83\x35\xcb\x35\xd2\xd0\x6a\xa5\x3c\x11\x3d\xe6\x3a\x65\x39\xba\x7f\x02\xe4\x6c\x85\xf9\x12\x73\x4c\x8d\x54\x6f\x99\xd9\x9e\x41\xa2\x0d\x33\x95\x4e\xb4\xff\xd6\x8f\x24\x12\xbd\xc3\x32\xe7\x29\xd3\x61\x60\x89\x69\xa2\xfc\x77\x61\x98\x7d\xf9\x70\xa0\x83\xc8\x76\x8c\xe7\x6c\x95\xe3\xbb\xf6\x3b\xee\xe1\x19\xfc\xeb\xdf\x4f\x00\x76\x2c\xe7\x99\xe5\xa9\xc3\x90\x18\x70\xfe\xf6\xd5\xaf\x2f\x97\xe9\x16\x0b\x16\xd0\xce\x50\xa7\x8a\x97\x76\x1c\x1c\xf5\xa8\xec\x9f\xaf\x50\x03\x83\x82\x09\xb6\xc1\x2c\x10\x12\x1a\x4a\xc2\x5a\x2a\x30\x5b\xf4\x40\x01\xd2\xbc\xd2\x06\x55\x02\x37\x5b\x6c\x8f\x4b\x99\x00\x22\x32\x4f\x11\xde\x94\x28\x96\x24\x12\xf0\x4e\x56\x06\x81\x89\x0c\xfe\x52\xad\x50\x09\x34\xa8\x03\xc7\x6b\x90\x35\xf1\x13\x78\x2f\xe0\x6f\x5b\x14\xc0\x44\x5f\x2e\x80\x6b\x27\xcd\x98\x2d\x80\x81\xc0\xbb\x08\xbe\x35\xd0\x0c\xcb\x5c\xee\x0b\x14\xa6\xf5\x1e\x18\x09\x2c\xcf\xe5\x1d\x90\x6e\x29\xc1\x72\x30\x8a\xad\xd7\x3c\xa5\x27\x0a\x59\xba\xa5\xc5\x86\x85\x68\x30\x5b\x66\x6a\x90\xf8\xb1\x94\x1a\x03\x62\x20\x95\x5f\x5e\x0b\xff\xbf\x96\xc4\x19\xb1\x01\xb3\xe5\xba\x7e\x00\x05\xdb\x43\x8e\xcc\xce\x9f\x71\xad\x2a\xcb\x96\x1a\x30\xd1\xb8\xac\x56\x39\x4f\x61\xcd\x52\x7a\x5d\xa0\xb9\x93\xea\x96\x16\x26\x30\xa5\xc1\x1a\x98\x1e\x5c\x35\x28\xdc\x71\xdd\x06\x49\x33\xae\x10\xec\xe3\x0c\x64\x65\x2c\x6d\xb7\xc6\x94\xfa\xec\xe4\xe4\xb6\x66\x06\x59\x95\x4c\xa6\xfa\x24\x95\x22\xc5\xd2\xe8\x93\xb0\xf6\x63\x8f\x03\x17\x9b\x13\x3f\xe3\xf1\xa1\x0a\xd2\xc7\xb3\x0c\x77\xa8\xa0\x94\x5a\xf3\x55\x8e\x0b\xd0\x64\xb9\x56\x39\x42\x86\x6b\x56\xe5\x46\x07\x41\x82\x32\x67\x66\x2d\x55\x01\x4c\x21\x54\x1a\xb3\x04\x96\x88\x40\xb4\x6f\x08\x42\x1a\x6a\xdf\x28\xa4\x22\x18\x86\xf1\x5c\x27\x47\x7e\x80\xd9\x93\x6a\xcb\xd5\x3f\x31\x0d\xdc\x29\x15\x19\x24\xc3\x83\x06\xd3\xa7\x65\x4e\xeb\xef\x0e\xf4\xe2\x29\x29\x8e\x1b\x43\x98\x72\x61\x79\x8e\xb0\x73\xdf\x61\x06\xda\x2a\x15\xc8\x75\x60\xa9\x35\x26\xc2\xb0\x0e\x07\xad\x1e\xae\x49\x6c\x1d\x56\xb4\x26\x45\x40\x40\x6f\x65\x95\x67\xc4\xab\x1d\x2a\x03\x0a\x53\xb9\x11\xfc\xf7\x1a\xb2\x26\x99\xa0\x29\x73\x66\x50\x9b\x0e\x44\x2e\xbc\x90\xee\x58\x5e\xe1\xc2\xea\x11\x31\x56\x21\xcd\x01\x95\x68\x41\xb3\x43\x74\x02\xbf\x10\xc1\xb8\x58\xcb\xb3\x9a\xdb\x1b\x6e\x82\x03\x49\x65\x51\x54\x82\x9b\xfd\x89\x65\x25\x5f\x55\x46\x2a\x7d\x92\xe1\x0e\xf3\x13\xcd\x37\xc7\x4c\xa5\x5b\x6e\x30\x35\x95\xc2\x13\x56\xf2\x63\x8b\xb8\xb0\x12\x98\x14\xd9\x57\xb5\xac\x3f\x6d\x61\xea\xf8\xa1\x8d\xe2\x62\x53\x7f\x6d\xad\xff\x20\xdd\xc9\xf6\x93\x62\x32\xff\x9a\xc3\xbf\x21\xaf\xd3\x21\x84\x77\x57\xcb\x9b\x46\x8f\x88\x05\x5d\x9a\x5b\x6a\x37\xaf\xe9\x86\xf0\x44\x28\x2e\xd6\xa8\x1c\xe3\xd6\x4a\x16\x16\x22\x8a\xac\x94\x5c\x18\xfb\x47\x9a\x73\x14\x5d\xa2\xeb\x6a\x55\x70\x43\x9c\xfe\xad\x42\x6d\x88\x3f\x09\x5c\x30\x21\xa4\x21\x8d\xaa\x48\xc3\x49\x68\x5f\x09\xb8\x60\x05\xe6\x17\x4c\xe3\x17\x27\x3b\x51\x58\x1f\x13\x49\xa7\x09\xdf\xf6\xfe\xdd\x81\x1d\x8d\x71\xee\x6a\x90\x43\xf4\x90\x18\x64\xcd\x61\x89\x29\x5f\xf3\xd4\xca\xbc\x53\x05\x52\x4a\xcd\x15\x66\xb0\xc2\x2d\xdb\x71\xa9\xc2\xf7\x3d\xbb\x9d\x4c\xe1\x11\xd7\x5e\x87\x91\x35\x1e\x17\xf4\xcc\xce\x8f\xdd\xe7\x87\x5e\xae\x3f\xde\xc9\x98\xc2\x35\x2a\x14\x24\x41\x92\x44\x0e\x53\x85\xc6\xda\x4f\xc6\x45\x9b\x76\x35\x9e\xdb\xda\x72\x41\xda\x82\x66\xc3\x88\x0c\x56\x7b\x3b\xa2\x6f\x88\x13\xe7\xbe\xac\x5f\xd0\x3d\xa8\x99\x14\x4f\x8d\xa7\xa6\x85\xc0\x15\xc8\x3b\xd1\x9e\x61\x11\x59\x33\xad\xc1\x19\xca\xf7\xa2\x07\xf3\xc6\xba\x2b\xbb\x9e\xa2\xd2\xf5\xa2\x2c\x7e\x6b\x49\xbe\x8e\x54\xe9\x16\xf7\xda\x9a\x0f\x2b\x18\x64\xb3\x01\x4c\xae\x93\x54\x99\x43\x8a\x42\x67\xc1\x6b\x9e\x3b\x37\x4f\xca\xe5\x5f\xba\xc5\xfd\x19\x41\x3c\x78\xf8\x5e\xc0\xab\x35\x54\x42\xa3\x59\xf4\x60\x32\xb8\xe3\x79\x96\x32\x95\x75\xc0\x13\x77\x2a\x23\x0b\x66\x78\xca\xf2\x7c\x0f\x1b\x14\x14\x57\x62\x66\xb1\x75\xab\xb6\x91\x46\xf3\x52\x0f\x36\xd7\x2e\x26\xaa\x5d\x4c\xc4\x41\x66\xb2\x20\xaa\x3c\x23\xa8\xba\x5a\xb9\x3f\xf5\x73\x3b\x4b\x3b\xbc\x09\x9f\x06\x8f\xd6\xcc\x4f\x35\x5c\x9c\xd3\x42\x72\xb2\x04\x5d\xc4\xc9\x56\x6f\xdc\x1b\x77\xdc\x6c\xa3\x40\x7d\xec\xf4\x54\x83\x51\xc4\x2b\x6d\xa4\x42\xeb\x98\x6f\x2c\xd6\xc7\x95\xee\xac\x14\x9e\xdd\x6d\xd1\x6c\x51\x35\xe8\xf4\x60\x4a\x45\x54\x52\xc7\x5e\x47\x31\x7b\x3e\x13\xc1\x3a\x48\x7b\xda\x17\xd4\x55\xc5\x73\x73\xcc\x05\xbc\x39\xaf\xcc\xd6\x49\xbd\xaa\xdd\x6f\xad\x24\x71\x65\x86\x11\x85\xa6\x8f\xcd\x3b\x7a\xdf\x1e\x3a\x88\x6b\x56\x60\x30\x29\x5e\x7d\x4d\xd4\xcc\x8e\xc5\x32\x72\x47\xc1\x0c\xde\x9d\xf8\x40\xe6\x98\x56\x7e\xec\x30\xd6\x27\x36\x55\x39\xf9\xca\xfe\x2f\x82\x0f\xc0\xcd\x9b\xcb\x37\x67\x70\x9e\x65\x20\x2d\x17\x2a\x8d\xeb\x2a\x77\xd1\x89\x4e\x5a\xf1\xc5\xc2\x7a\xbb\x05\x54\x3c\xfb\x3f\x4f\x23\xa0\xa2\x76\xda\xae\xd9\xca\xe1\x84\x51\x73\xa2\x6b\x0d\xd9\xe5\xf5\xd2\xd2\x2f\x44\xa8\x23\xa6\xa8\xaf\x82\xce\xe3\x92\x4e\x91\x19\x4c\xa5\x58\xf3\x4d\xa5\x10\x8a\x2a\x37\xbc\xcc\x11\xd6\xc8\xc8\x01\x69\x6b\x20\xfe\x00\x3f\x7a\x75\x7a\x2d\x59\xf6\x03\xcb\x99\x48\x51\x2d\xdd\xbc\x3d\xe0\xb5\x57\xb5\x71\xac\xde\x92\xd1\xd1\x86\xc4\x6d\xb3\x5f\x40\xb3\x04\x88\xcc\x4f\x8b\xa2\x48\x46\x65\x3a\xe9\x01\xb6\xb1\xa1\x07\xfe\xb6\x86\xbd\xf4\xa0\x13\x87\xa9\x35\xba\x15\x25\x84\xc0\x5a\xaa\xeb\x4d\xe9\x98\x81\x5b\xb8\x30\xa0\xa5\x73\x41\x7b\x9c\x49\x71\xc1\xb9\xc7\xdf\x52\xd0\xe8\x96\x01\x89\xe3\xdb\x37\xe1\x1e\x4f\x52\x73\x17\xe8\x70\x1d\x28\xe5\xa8\xc1\x45\xc6\x77\x3c\xab\x58\xde\x83\xe8\x92\x0c\x97\x02\xa2\x06\x2d\x6d\x56\x42\x44\x21\x7b\xa1\x88\xa6\x94\xd6\xc2\xdd\x16\x95\x75\x70\x86\xa9\x0d\x9a\x26\xc5\xb9\xbc\x5e\xf6\x80\x06\x7a\x13\x5e\x7e\x75\xd6\x7d\x50\x84\x23\xf8\x6f\x15\x02\x2b\x24\x91\x33\xcf\xfb\x1e\x5d\xdb\x50\xb4\x4f\xd6\x7e\x90\xe4\x7c\x02\x16\xa5\xd9\x2f\x9a\x54\xc0\xae\xd7\xc2\x4c\x9c\x14\x74\x8a\x08\x27\xde\x4c\xf6\xe0\xbb\x64\xda\x61\x3b\x60\x8c\x22\x2a\x36\x2c\x3c\xe3\x6a\x37\xfc\x5e\x5b\x8b\x3c\x13\xdb\x3a\xd8\xa7\x4b\xe3\x86\x02\x50\x4b\x03\x67\x54\x7c\x9a\xa5\x17\x80\x82\x12\x7f\xc8\x25\xcb\x60\xe5\xf5\xad\x36\xdb\x14\x09\xf6\xdd\x2a\x9a\x34\xe9\x38\xde\x4e\xe4\xc2\x35\xac\x18\x21\x2a\x05\x19\x4d\xc5\xb4\x51\x95\x8d\x31\xef\x49\x77\x57\x9b\x08\x99\x9b\x8f\x1f\xce\xff\xb6\x3c\x73\x03\x22\x06\x02\x9e\x59\x27\x73\xe5\x65\xb0\x07\xd3\x96\x67\x9e\x13\x94\xdf\x2b\x85\x67\xf3\xa0\x34\x6f\xfd\x74\xf1\xb6\xef\x42\xde\xcf\x44\xa6\x01\xf3\x9a\xaf\x76\x5c\x99\x33\x80\x9f\xa5\x36\xd7\x8e\x13\x7d\xb8\x02\xce\xc5\xde\xb3\xab\x4e\x5f\x6d\x48\x0e\xcf\xb8\x48\xf3\x2a\x23\xcb\x73\x2d\x05\x3e\xaf\x69\x6f\x64\x1b\x66\xdf\x4e\xbc\x17\x23\x92\x19\x51\xa5\x7b\x38\x5f\xca\x5c\x28\x34\x3f\xa4\xd0\xb1\x7d\xe9\x1e\x9e\x7a\xdb\x2c\x60\xd2\x61\xb7\xc6\xc2\x56\xe6\x99\x86\x92\x29\x56\xa0\x21\x0b\x15\x02\xb3\x16\x45\xea\xd5\x47\x3d\x6f\xc4\x8b\x24\xf0\xd6\xe5\x78\x20\x05\x85\x33\x6b\xbb\x1a\x92\xf1\x51\x3a\x8f\x52\x0a\xac\xb2\x05\x69\x99\x5c\x63\x7b\xf0\xf0\x22\x3b\xfa\x1b\x43\x08\x06\x57\x12\x91\xdd\x7b\xaf\x68\x98\xff\x60\x65\xc0\x0a\x7f\xe4\xc9\x98\x20\x40\xd0\xd8\xf8\xa3\xc3\xd4\x91\x46\x5a\x8f\x46\xae\xcf\xa7\x90\xf6\x3b\x66\xe0\x6e\xcb\x7d\x91\xad\x43\xa7\x01\xb8\x36\xb8\x77\x75\xb7\x2c\x81\xb7\xbe\xbc\xe4\x8b\x1d\xb6\x82\x74\x14\xb4\xfa\xc8\xba\xe7\xa3\x57\xbe\x66\x72\x14\xa7\xfc\x88\xa3\xa0\x8f\x90\x19\xbe\x95\xb1\xa4\xe8\x60\x8d\x61\xe0\xb0\x18\x5c\xfb\x11\xc1\x06\x7d\x3e\x79\x3f\x80\x7c\x6f\x09\x29\x15\xdf\x45\x52\xe9\xde\x1a\xfd\xb8\xe1\x25\xbe\xf5\x03\x22\xc1\x5f\x5c\x84\x26\x97\xe6\x21\xde\x7b\x49\xf6\xe1\xd4\x7a\x8e\xc2\x2c\xb6\x0c\xd9\xa7\x38\xd9\xec\x4a\x63\x02\xbf\xda\xd0\xcf\x09\x59\x74\x21\x8c\x5c\x96\x8d\xe8\x62\xde\xe6\xbd\x00\x6f\xd2\xbd\xf0\xcf\x08\xce\xc1\x46\xc6\x2e\x80\x6d\x95\xca\xdb\xe0\x21\xf0\xdb\x3a\x7c\xe1\xca\x5a\x21\x8a\xb6\x01\x42\x3f\x3e\x00\x5f\xcb\x88\x65\xc4\x4d\x81\xdc\xc6\x95\xbe\x70\xd0\x44\x24\x5c\x6c\x12\x38\x8f\x82\x8c\xa1\x75\x50\x66\x6f\x07\x46\xcd\x54\xd1\x12\x06\xb8\xb0\x79\x5e\x4a\x17\x2b\x4f\xfb\xef\x4e\xbe\x22\x93\x32\x6a\x51\x5c\xa8\xd4\xa4\x23\x36\x64\x6a\xd5\x26\x9a\x54\xa4\xce\x03\xc2\xde\x88\x91\x71\xcd\xb5\x82\xcf\x4c\x2f\x53\x0a\x74\x79\xaa\x9b\x48\x9c\x52\xb7\xa4\x9d\xef\x0c\x49\x57\x3d\xab\x53\x10\x61\xdf\xf9\x5d\x0a\xd4\xbe\x4c\x6d\x13\xbf\x4c\xdc\x2f\x80\x86\x3a\x88\x76\xbb\x0d\xff\x90\xc2\x6d\xce\xf8\x2f\x9d\xf2\xd1\xb7\x6e\x27\xa6\x4d\x15\x87\x50\x71\x58\x2d\x0d\x1f\x62\x7e\xa5\x28\x49\xcf\xf7\xa0\xab\xb2\x94\xca\x04\xf4\xa5\xab\x46\x9d\xff\x6d\xb9\x70\xe1\x9e\xab\x64\xff\x74\xf1\xb6\x8e\xa6\x22\x89\x94\x67\xd7\x1f\x3a\x41\xc3\x0c\xd5\xa2\xe9\xc8\x3a\x03\xa1\x10\x27\xb0\xcf\x94\xe2\xaf\x73\xed\xe5\x35\xe4\x2f\x9f\x5d\xd3\x28\x54\x6a\x29\xd9\x02\x56\xb2\x8a\xa4\x53\x16\xa2\x6c\xad\x05\xbe\xff\xda\x12\xee\x9b\x6f\x5e\xba\xa2\x18\xa5\x7f\xe0\xf6\x99\x4a\xe9\xf7\x5b\xc8\x36\x07\x54\x87\xec\x30\x13\x8d\x48\x76\xb3\x8d\x78\x46\xd3\x5e\xcc\x8e\xb3\xc1\xb5\x37\xa8\xfa\x7c\x37\x38\x88\xf7\x02\x2e\x25\x6a\xa0\x98\x76\x1c\xfe\xa0\x1c\xc4\xd9\x30\x93\xe4\x51\xa0\x31\x83\xb7\x08\x55\x12\xc2\x14\x3f\x96\x39\x4f\x39\x49\x74\x9d\xab\x37\x84\x8f\xc2\xb4\x39\x74\xc1\x44\x65\x4b\x6e\x13\x4b\x75\x34\x3a\xf0\xe6\x43\xeb\x9f\x14\xfb\x88\xf7\x08\xa0\x07\x2c\xee\x94\x37\x99\x26\xee\x80\x1b\x1b\xf6\x26\x35\x4a\xe3\x5e\x63\x50\xc2\xda\x9e\xe4\xa6\xb5\x33\xd1\xd6\x12\x32\x9f\xd9\x5e\xb0\xc2\x17\x3e\x59\x9e\xcb\x34\x5a\x3b\xa5\xcf\x6a\xdf\x54\x42\xff\x08\x5b\x79\x87\x3b\x54\x0b\xc2\xc5\x5b\x31\x5b\x79\xe1\xa9\x05\x1e\x60\xd9\x64\x7c\x58\x0a\xd2\x2d\x13\x1b\xac\x77\xf6\x6a\xdc\xfc\xbe\xa6\xaf\x6a\x06\x13\x7f\x48\x92\xb8\xc9\x22\x6f\x14\xce\x31\xf4\xb3\x41\x18\x0b\x6c\x6d\x81\xb3\x64\x29\x86\x43\x0c\xe3\x85\x8f\xde\xf0\x76\xbd\x63\xcd\x73\x83\xca\x6f\x92\x1b\x5a\x4a\x3d\xbc\xaf\x65\xd3\x45\x4a\xe2\x22\xd7\x7e\x02\x5b\x5b\xa5\xe9\x8a\x32\xb7\x9e\x26\x66\xbf\xf4\x96\x85\xba\xd5\x60\xd1\x43\x04\x3c\x49\xe8\x3e\x53\xd5\xba\x60\x26\xdd\x5e\x7d\x24\x16\xd8\x23\x39\x93\xd1\xe6\xe1\x0b\xae\x80\x9b\x73\x6d\xa9\x66\x0f\x95\x40\x38\x3f\x12\x52\xb6\xc2\x6e\x61\xc6\x6b\xd1\xb6\x0e\xde\x8c\xb2\x62\x7e\x7e\x7d\x89\xd9\x70\xb0\xcc\x94\x62\xfb\xc8\x53\x6e\xb0\x18\xc8\xf2\x3a\x4b\x38\x1f\x41\xd3\x6f\xde\x86\x27\xb6\x24\xe9\x95\x3e\x6e\x6e\xc1\x07\xd4\x14\x6f\xdd\xe2\xde\x59\x5a\x26\xea\x83\x44\x0e\x84\xc2\xbc\xce\x19\x6f\x71\x6f\x07\xf9\xad\xed\xb8\x51\x18\x4f\x85\xc7\x93\x61\x4a\x87\x6f\x31\x46\x21\x7a\x12\x10\x8b\x87\x7d\x13\xd9\x32\x10\xe0\xa1\x47\x07\x64\xa6\x75\xfa\xac\xc4\xd1\x9b\xbe\xb0\xd4\x70\x6a\xe6\x49\xcc\xca\x32\xe7\x03\xbe\xcc\x7d\x8c\x1c\x4a\x7a\x27\xd2\x5e\xf7\x09\x0b\x9e\x89\x76\xcd\xb8\x66\xf7\xdd\xb1\xf6\xa9\x76\x6c\x24\xa9\xdf\xf2\xd2\xee\xb9\x8e\x60\xed\xed\x48\x38\xc0\xe0\x92\xaf\x00\xdc\xc9\xf9\x2b\xb1\x80\x6b\x69\xe8\x7f\x57\x1f\xb9\x36\x3a\x5a\x7f\x6e\x3e\x14\x6c\x5c\x4b\x63\xc7\x7e\x12\x49\x1c\x52\x33\x09\xe2\xab\x12\xa4\x18\xc2\xe9\x1e\xad\xab\x7d\xbe\x41\x27\x64\xb4\x88\xab\xa3\xc2\xe5\x3e\x5c\x93\x5f\x96\x2a\xac\xdc\x6c\x5b\x85\x0f\x02\x1e\x0a\xf6\x42\x8a\x63\x5b\x62\x0f\xd0\x47\x80\xd6\x4c\xe3\x3a\x90\x52\xaa\x0e\xbd\x06\x26\x1a\x81\xb9\x42\xf0\xd3\x5b\x63\xee\xde\x71\x67\x65\x72\x46\xe6\x3f\xb3\xa1\xa8\x3b\xeb\x41\x99\x36\x4f\xa1\x40\xb5\x19\xc3\xb3\x24\xeb\x39\xc5\xba\x21\xfb\xe6\xe9\x37\x6c\xe5\xda\x40\x06\xf8\x6f\xcd\xf7\x6b\x52\xc7\x99\xa6\xde\x8d\x75\x66\xb1\x60\x25\xb1\xfe\x5f\x64\xe7\x2c\x25\xff\x0d\x25\xe3\x4a\x53\x04\x44\x61\x5a\x1e\x5f\x7a\x7b\xbc\xdf\xc2\x6f\x83\x26\xa8\x5c\x03\x19\xb4\x1d\xcb\xc9\x06\x93\x66\x09\xc0\x7c\x38\x2f\x93\xeb\x9e\x23\x5a\xc0\xdd\x56\x6a\xf4\x3b\xf8\x14\x90\x70\x0d\x47\xb7\xb8\x3f\x5a\x74\x44\x13\x78\xdc\xd6\x1c\xbd\x12\x47\x8b\xb0\x71\xde\x15\x94\xe0\x00\x5c\xde\x77\x64\x9f\x1d\x25\x3d\xdf\x35\x98\xf5\x4e\xf8\xb3\x41\x33\xcf\xb2\xcc\x9e\x7c\x65\xf9\xdb\x09\xbb\x3c\x1c\x24\x51\x14\x46\xe2\x4a\x18\x4e\x04\x48\xed\xa1\x7e\xd7\x46\xd7\xd9\x42\x88\x6e\x40\xee\x42\xa0\x94\x6e\x31\xab\xf2\x98\x94\xf9\x50\x70\x20\x39\x68\x02\x9c\x7a\xeb\xac\x7b\x68\xee\xba\x8d\x49\x0f\xf8\xe0\xf9\xb9\x19\x54\x1d\xdd\xc0\x97\xd9\x60\x28\x19\xa7\x56\x3b\x92\xac\x23\xe2\x03\xc7\x96\xb5\xb6\x05\x07\xf3\xb5\x5e\x06\x32\x1e\x09\xfa\x9d\xaa\x15\x1a\x96\x74\x8b\x4a\x72\x40\x3e\x72\x2e\xaa\x8f\x7e\x8d\xc7\x4a\xe6\x78\xf0\x1e\xa5\x32\xa8\xce\xe0\xe9\x53\x3f\x6f\x3d\x6b\x7d\x00\x23\x5e\xfa\x3c\x8c\xa5\x49\x7f\xbc\x81\xd4\x6d\xac\x47\x42\xfb\x41\xf1\x9f\x0a\x46\xe6\xc4\xae\x3d\xc6\x7d\xe6\xf8\x15\xee\x1d\xc3\xc2\x2c\x3b\x3f\x61\xe5\x3f\x25\x9e\x1d\x71\x1d\xb5\xa1\xbb\x67\x4c\x3b\x02\x72\x4e\xb4\x0b\x73\x22\x5e\x98\x8c\x7a\x61\x34\xf2\x85\xe9\xe8\x17\x66\x45\xc0\x30\x15\x05\xc3\x17\x8b\x84\x61\x22\x1a\x86\x79\xe1\x1f\xcc\x8a\x8a\x7b\xcb\x98\x1b\x19\x4f\x2e\xc0\x4a\xe4\xfd\xa3\xe3\x09\xb8\x24\x65\xf3\x22\xe4\x7b\x90\x69\x2a\x52\xee\x11\xe9\x1e\xd1\xf2\xc4\x7a\xda\x31\xed\x7d\x23\xe6\x09\xd0\x07\xd1\xfa\xbc\xa8\x79\x8a\xfc\x1d\x54\xe6\x45\xce\x13\x20\x0f\xe2\xea\xa9\xe8\x19\x66\x46\xd0\x30\x27\x8a\x86\x39\x32\x32\x11\x4d\xc3\x97\x8a\xa8\xe1\xcb\x44\xd5\xf0\x69\x91\xf5\x70\xca\xa2\xbf\x54\x74\x0d\x53\x11\x36\xcc\x73\x2d\xf3\x23\x6d\x98\x92\x0b\x23\x73\xf4\x07\x9b\x66\x6c\xdd\x36\x83\xbb\x81\x48\xfb\xc1\xa7\x07\x92\x37\xdd\x42\x22\x89\x01\xe9\xa7\x9d\xcd\x0e\x58\x62\x5c\xd0\xe6\x6c\x5d\x76\xaa\xeb\x27\xc4\x4a\x73\xcc\x44\x76\xdc\x2c\xe1\x64\x38\xf8\xfb\xd4\x5a\x1e\xad\xac\x94\x99\xab\xf3\xdf\xd4\x33\xda\x55\x1a\xc3\x52\x7f\x0e\xd1\xe3\x32\x68\xc4\x98\xd8\x83\xc5\xdc\xb9\x65\xab\x01\x3e\x80\x35\xca\x1e\x22\xfd\x53\xad\x6e\x0b\x5c\xaf\x31\x35\x7f\xf6\x5b\x13\xc3\x86\xdc\x42\xa1\x21\xb5\x9d\xfd\x53\xf8\xd7\x9f\x1f\x58\xf6\x9b\x8e\x4e\x1c\x72\x33\x23\xc7\x2b\x3b\xf8\xe0\x4c\x8b\xa3\x83\x83\x43\xb4\xb3\xcb\x48\xe0\x8a\x24\x66\xc4\x60\x16\xc8\x84\x76\x83\xed\xf1\xca\x36\x18\xed\x2f\x10\xd4\xc9\xc4\xc2\xdd\x57\xc3\xd1\xe3\x08\xee\x43\xea\x7d\x2d\x97\x2e\xd9\xc4\x05\xbc\xb5\xc7\xa6\x9b\x6f\xac\x51\xb9\x96\x57\x1f\x31\xad\xe2\x47\x2c\xda\xb4\x1d\x75\xf8\xf3\x6b\x9b\x7f\x69\x22\x3a\xb7\xce\x4e\x44\xd7\x48\xfe\xbc\xea\xa6\xa3\xed\x00\x05\x6f\x71\xdf\xd4\xd7\x7c\x24\xe9\x4e\x9e\xce\xa9\x87\x05\x7f\xec\xdc\xfb\x1f\xc3\x7e\x58\xb1\xe2\xc2\x21\xe8\x26\x0d\x6c\x1e\xe3\x43\x9e\xd7\x76\x9b\xd2\x81\x3c\x77\xa8\xfd\x37\x96\x66\xdf\xdc\xa3\x34\x3b\x1e\x5f\xd9\x85\xc4\xc3\xce\xa6\x12\x0b\x57\xbf\x55\x2c\x4f\xe0\xb2\x39\xe0\x3b\x02\xd2\x0f\xf6\xaf\xf7\x5c\x6f\x7d\x16\x63\x2d\x55\xb8\xf8\xe6\xcf\x3c\x8f\x11\xdd\x1a\xb7\x94\x89\xda\x82\x35\x92\xa1\xed\xd5\x3c\x28\x99\x32\x3c\xad\x72\xa6\x80\x74\x78\x23\xd5\x48\xf8\x37\x83\x27\x8d\xf0\x2e\x31\x95\x22\x9b\x9b\x85\xde\x1c\xbe\xd7\xe6\x92\x3d\x9a\x84\x8a\x4b\xb7\x4d\xc8\x8b\x31\xe6\x1c\xa8\xd0\x33\x77\xb6\x2e\x48\xb2\x5c\x07\xdb\x54\x2b\xfd\xc2\x1d\x62\xbd\xe3\x7a\x1c\x2c\xd7\x4d\xfc\xc2\x37\x42\x2a\xcc\x9e\x37\xae\xa1\xd1\xe6\x04\x7e\xd8\x07\x7f\x39\xa6\x65\xdc\x84\x3d\x75\x5b\x2e\xf1\x78\x7a\x85\xf2\xec\x6a\x4c\xc4\x5a\x2a\x7b\x9b\xf4\x59\x36\x26\x46\x76\x87\x7e\xc7\x53\xf3\x3c\x81\x7f\xa0\x92\x56\x10\x05\x6e\x98\xe1\xbb\x3a\x70\x0a\x87\x78\x8c\xdf\x62\x66\x63\x06\xe6\x6b\x78\x66\x01\x02\x2f\x0a\xcc\x38\x33\x98\xef\x9f\x87\xbd\x4b\xbd\xd7\x06\x8b\x29\x81\xb1\xa7\xb5\x47\x4e\x33\xae\xa5\x2a\x98\xb1\xe3\xbe\xfb\x66\x6c\xcf\x61\xa6\x2c\xfd\x1a\x2e\x13\x34\xd4\x73\xf7\x0b\x0e\x44\xc3\xfb\xe9\x09\xeb\x3a\x98\xed\xb4\xb2\x9b\x70\xa1\x35\xa4\x2e\xa3\xc6\x35\x08\x1b\xfc\x93\x64\x92\x81\x42\x7b\x63\xdf\xeb\xd5\x03\xb4\x2f\xdc\xa4\x1f\x2d\xd0\x86\x41\x81\x2e\xe1\xa6\xa2\xa8\x8a\x15\xda\x7b\x8a\xd1\x1b\xd4\xee\xa5\x3e\x52\x91\x2a\xac\x91\xf0\xe2\x70\xe0\x98\x00\xb4\xd8\xfe\xf2\x45\x77\x41\xb2\x32\x33\xf7\xe5\x3b\x43\xc7\xf7\xe4\xdd\xfd\xc3\x7a\xff\xbd\xb7\xa4\x87\xef\xc7\x87\xfd\xf7\x1e\xc8\xc7\xfd\xf8\xc7\xfd\xf8\xc7\xfd\xf8\xee\xe7\x71\x3f\xde\x7f\x1e\xf7\xe3\x87\x3e\x8f\xfb\xf1\x87\x40\x1e\xf7\xe3\x1f\xf7\xe3\x5d\xa3\x81\x25\xa6\x95\xe2\x66\xff\x56\xc9\x35\xcf\x27\x5a\x3f\xf4\xc7\xd7\x45\x14\x7b\xcc\x9f\x82\x17\x77\x73\xe5\xe6\xf5\xb2\xdd\x57\xa7\x87\x96\x0d\x79\xfa\x5d\xb1\xe6\x5d\xb3\xa4\xef\x59\xc9\xdd\x8d\xf9\xfb\x9d\xce\x0f\x5d\x4e\xec\x4c\xd7\xd2\xa6\x44\xf6\xc2\x54\x7d\xb7\x99\x80\xbf\xc9\xb3\x05\xd8\x4b\x4e\x3e\x47\x71\xac\xff\x45\x66\xa8\xfa\x57\x2b\x4a\x4f\x0a\x7b\x59\xd1\x61\xed\x72\x42\xca\x91\xc2\xc3\x4e\x5d\xd2\xde\x8a\xa8\x5c\x5b\x15\x23\xfd\x51\xd6\x7e\x00\x89\xe6\x0e\x51\x90\x5f\x41\xa6\xc9\x8e\xfe\x28\x15\xe0\x47\x46\xa1\xe2\x02\x36\x7c\x87\x82\xec\x4b\xa7\x71\x88\xbb\x5e\xe3\x9b\x84\x34\x0b\x18\x44\x3a\x1c\xc3\x27\xba\xfa\x89\xe0\xff\x26\x7f\x4f\xfe\x41\x4b\x86\xaa\xdc\x28\x96\xa1\x6b\xdc\xd4\x7a\xf8\xbf\x4e\xa1\x88\x58\xa1\x94\xd1\xdc\xae\x81\x52\x7c\xe1\x46\xda\xa6\x09\x4d\x0d\x39\x1e\x22\xf7\x13\x1e\x85\xba\xca\x6d\x70\xcc\x69\xd1\x34\x2c\x34\x5c\x6a\xd8\x68\x8d\x07\x17\xbc\xa8\x0a\x2b\x81\xbe\xc3\x50\x5b\xda\xfa\x38\x37\xe2\x47\x6c\x39\x4d\x4e\x1b\x3d\x2f\xd8\xc7\x1e\x2c\x3b\xe6\x45\x02\x70\x2e\x6c\xd0\xee\x09\xdf\x83\xdb\x34\x33\x22\xc5\x4b\x03\xdb\x6b\x3c\x9d\x30\x59\xd0\x6d\x01\x6a\x6e\xa5\xf6\x20\xda\x54\x64\x85\x8e\xc8\xdc\x04\xeb\xa2\x2d\x8c\xd3\xe4\xe5\xe7\x8a\xfa\x53\xdb\xf2\x6e\x7a\xbb\xc0\x8d\x73\xc6\xdf\xb6\xc7\x08\xb7\x66\x08\x1f\xed\xed\x44\x58\x5c\x02\x3f\xc4\xed\x3f\x7e\x34\x64\x21\xf3\x3d\xa4\x4c\xd9\x74\x28\x1c\xb2\xf7\xf0\x03\x75\x28\xd7\x14\xae\x61\x40\x47\xa6\x06\xf6\x1f\x98\x20\x49\x4b\x99\x61\xda\x28\x59\x6e\x79\x9a\x10\xcb\xbc\xfa\x1c\x02\xcf\xa5\xbc\xd5\x90\xf3\x5b\xd7\xff\x28\x6e\x47\xed\x39\x97\x94\x97\x5b\x54\xda\xdd\xca\x3e\x86\xab\x8b\xcb\x9f\xaf\x8e\xaf\x2e\x2e\x97\xe7\xc7\x17\x3f\x9f\x5f\xfc\x7c\xfe\xe2\xeb\xe3\xb7\x6f\x5e\xff\xfd\xf4\xe5\xd7\xdf\x76\xc6\xbc\x8b\x8d\x88\xcf\x73\xf8\xda\xf9\xd5\xf2\xf4\xc5\xf7\xc7\x3f\x5d\xfc\x72\xbc\xfc\xf9\xfc\xc5\xb7\xdf\x45\x26\xef\x8d\x19\x02\x5d\x70\x71\xf3\x7a\x59\xf7\x40\xbc\x79\xbd\xdc\x9d\x26\xa7\x5f\xe0\x44\x4c\xa0\xd4\x9c\xbd\xc8\x23\x3f\xb8\x9d\x72\xb7\x7a\xf8\x78\x58\xc0\xf2\x8d\x54\xdc\x6c\x8b\xe1\x8c\xc0\x2a\x18\xf9\x55\x81\x1b\x69\xb8\xeb\x51\xe1\x62\x31\x02\x44\xb2\xb9\x65\x22\xd3\x5b\x76\x8b\x09\xd4\x55\x5c\x1d\x35\x68\xe1\xa3\xb0\x90\x3b\x04\x14\x46\x71\x97\xa8\x71\xe5\x62\x06\x91\x69\xc8\xa4\x2b\xbb\xb9\xbb\x0c\x09\x74\xec\xf4\x30\xa2\xce\x52\x5f\x5e\x2d\x8f\x2f\x7e\xb8\x78\x49\x5c\x03\x78\xb6\x67\x45\xfe\xfc\x2c\x2a\x6a\xed\x91\x31\x76\xc1\xe7\x38\xcb\x33\xbd\xcb\xdc\x11\x9f\x59\xbc\xed\xbc\x32\xc4\x61\x6b\xb7\x59\x1e\xec\xec\x20\x82\xfe\x34\x9f\xb7\x9b\x46\xa6\x32\x77\x3c\xe7\x7a\x16\xcb\x07\x01\x77\x9c\xab\x67\x4e\xcb\xf0\x7b\xd7\x70\x9a\xbc\xb0\xee\xe1\x34\x79\x19\x98\x35\x08\xd1\x32\x31\xae\x6e\xd6\x6f\xbd\xb9\xb9\x3a\x6b\xdd\xe8\x23\x5c\xb7\x7c\xb3\x3d\xec\x50\x37\x48\xfd\x7a\xdb\x8a\x6b\xf0\x5f\xdd\xbc\x5e\x9e\xbe\x18\x17\x8e\x41\xde\x8a\x2a\xb7\x5d\x31\xcf\xc0\xa8\x2a\xd2\x01\xaa\x15\x4e\x4c\x3b\x87\xf6\x68\xe7\x22\x62\x5e\xa1\x8e\xe9\xce\x86\xee\xac\x86\x3d\xdf\x3b\x7e\xcb\x93\x42\xfe\xce\xf3\x9c\x25\x52\x6d\x4e\x42\x20\x7a\xe2\x7a\xd1\x7d\x58\xf2\x0c\x3f\xdc\xbc\x5e\x7e\xd5\x0e\x7b\x3e\xa4\xb2\x28\x99\xe1\x2b\x9e\x73\xb3\xff\x90\xbc\xf8\x5e\x61\x2a\x8b\x02\x45\x86\x59\xf2\xe2\x7f\x0f\x99\x79\xe2\xf0\x81\x4b\x18\x55\xcd\x9b\xd7\xcb\x0f\xe7\x57\xcb\x0f\xa7\x2f\xbe\xff\xf0\xd3\xc5\x2f\x1f\xc6\x2d\x70\xfb\x8d\x17\xdf\x7e\x17\xde\x78\xf9\xfd\x37\x2d\x70\xc1\x55\x7c\x08\xae\x62\x06\xd0\x51\x7f\x00\x30\xe5\x55\xee\x01\xfa\xc5\xb7\xdf\x85\x17\x1b\xb4\x3b\xa0\xbb\x23\xe6\x82\xfe\xcc\x2e\x74\xca\x81\xde\x1b\xdf\xa8\x36\x47\x15\x6e\xc2\x79\x4e\x28\x5b\x61\xa3\xc3\x69\x35\x73\xe3\x66\x2a\xd8\x03\x94\xc9\x45\xa9\x5d\x35\xfa\x0f\x52\x9a\x28\x3b\x5f\x36\xc6\xf9\xa2\x36\xce\x95\xa8\x2f\x5c\x3f\xe4\xf4\xf0\x04\xbb\x65\x1e\xad\xd5\x76\x79\x2d\xf3\xec\xcb\x31\xfa\x4d\x9e\x7d\x58\xb1\xf4\xf6\x8e\xa9\xec\x3f\x96\xdd\x8f\x36\x32\x02\xfa\xb3\xdb\xc8\xf6\x4b\xe3\xb8\x76\xb8\x30\x97\xbe\xef\x0e\x5f\x19\x05\xe9\x1e\x46\xa1\xc6\xc0\xc5\x61\xd1\xba\xc7\xb9\x78\x3f\x0e\x36\x2f\x8d\xc0\x1b\xc1\x7c\x8c\x0c\x7d\x40\xcd\xb3\x7b\x49\xf3\x90\x04\xc7\x26\xed\x4c\x36\x01\xb4\x4b\xe9\x1e\x29\xba\xf9\xd0\x9c\x74\xc3\x59\xed\xaf\x3f\xbf\x55\xbe\x5f\xc3\x1b\x29\xec\x71\x90\x48\xed\xd0\x97\x7a\xa4\xf2\xbf\x26\x10\xcf\x41\x2e\xea\x8a\xc4\x8e\x67\x7e\x37\x90\x39\x13\xdc\xce\x95\x9a\x26\x86\x1d\x3f\x30\xb4\x61\x67\x7d\x43\xd3\x56\x28\xe9\xe3\xd7\x2a\x6d\xda\xbc\x79\x2e\x54\xfd\xa9\x2e\xe7\x5d\x13\x8a\x7f\x98\x51\xd1\xf1\x27\x47\xeb\xd9\x99\xed\x52\x6a\x50\x18\x87\x88\x3f\xc1\x84\x7b\xdb\x95\xda\xd5\x54\xfd\xfd\xb0\xa1\x13\x3e\x4c\xdb\x52\x65\xa8\x3d\xd8\xa6\x06\xb8\xc3\x5c\x96\xfe\xf2\x10\x7e\xe4\xda\x16\x1d\xdb\x43\xd6\xb2\x12\x83\xad\x6a\x56\x84\x94\x25\x1f\x26\x00\x97\x58\xa2\xb0\x8d\xeb\xa4\x80\x52\x61\xca\x35\xe6\x7b\x7f\x36\xa7\x0d\xb3\xfe\x49\x82\x78\x01\x5f\x02\xa3\x85\xa7\xa8\x7d\x81\xd9\x6e\xa9\x87\xfe\xf3\x98\x55\xa9\x6f\xa4\xd2\xad\x85\x0e\x14\xac\xdb\xa2\xd1\xe9\x29\xd3\xaa\x62\x74\x4b\x8d\xfe\x60\xd1\x1e\x0d\xdc\x61\xde\xef\x34\x68\x89\x99\xc9\xd2\xb8\x3e\x04\xc4\x57\x29\x40\xcb\xb5\xb9\xa3\xd5\xe5\x7c\xa5\x98\xe2\xd8\xbf\x1d\x07\x43\x69\xa9\xff\x35\x86\xd6\xf0\x6e\xfb\x33\xfb\x38\xec\x20\x17\x52\xdb\xae\xef\x6e\x15\x72\xe5\x3b\x48\xfb\x41\x5f\xa0\x67\x76\xef\x17\x24\x46\xf7\x4d\x7a\xa3\x2d\x3d\xeb\x83\x32\x35\xbe\xf5\x38\x38\xf8\x31\x8b\xd6\xc4\x69\x2a\x95\x15\xa8\xc1\xda\x79\xbb\x7f\x47\xb4\x20\x7c\xdf\xe3\x33\xa9\x14\x6e\xa7\x69\x7c\x95\x47\xcd\xb8\xee\xb1\x8f\xd6\xf7\xbe\xb0\xce\x95\xe7\x4d\xb4\x55\xd5\x79\x4d\x06\x7f\x7a\x6d\xb2\xfd\x0c\x4d\x57\xbf\x14\xdb\x25\x77\x87\x74\x88\x6c\xaa\xfe\xb1\x8c\x00\xb2\xee\xb6\x0f\xcf\x78\x82\x8b\x89\x5f\x09\x69\x7f\xf0\xb7\x8a\xe5\xfa\xe0\xf7\x47\x9e\x7b\x43\x45\x4a\x4d\xff\xd5\xbb\x74\x6d\x3a\x38\x03\x10\x4e\x3a\xf7\x1d\xcf\x16\x5b\xc2\xeb\x7a\x62\xc6\x7e\x36\xc4\xb7\x12\xb6\xcb\x49\x59\xe9\xbc\x05\x8f\x1d\x1b\xb1\x01\x79\xb7\x93\xda\x2f\xbe\x35\x8a\x0d\xa6\x55\x85\xb6\x45\x5c\xa7\xa1\x79\x9b\x71\x2a\x92\xa3\xa2\x71\xb1\xbd\xeb\xb9\x3b\xd6\x9d\xb8\xd9\xab\x60\xf5\x0f\x98\xe4\x92\x45\x0e\x4d\x85\x96\x8e\x16\xad\x1f\x59\xae\x2d\x5e\x4c\xec\x9d\x1a\x4b\x8d\x07\x68\x51\x66\xc6\x0c\xd7\x6b\x3e\xd0\xbc\xfd\xfd\xe1\xc2\xdf\x21\xcb\xf6\xb3\x97\x6d\x97\x19\x03\x4a\x60\xcf\x0f\x1b\xc9\xea\xd0\x71\x26\x69\x51\xa6\x37\x46\x11\x06\x11\x26\x3d\x74\xcd\x76\xa6\xcb\xeb\xa5\x67\x69\x1c\xf0\xec\xc5\x46\x78\xda\xdf\x3e\x8c\xf0\x98\xa4\xb0\xee\xdc\x1a\x1a\xfb\x5c\x5e\x2f\xdb\xa4\x98\xd1\xa5\xaf\xd3\x38\x2e\xbc\x3b\xd1\x85\xad\x69\x74\xad\xa3\x9d\x98\x6d\x57\xb7\x87\xcb\x14\xa1\xd0\x83\x79\x79\xbd\x7c\x80\x24\xf9\xf5\x5c\x5e\x2f\x63\x47\x0d\x0e\x84\xa7\xd5\xc4\x0e\xb6\x6c\x87\xb0\x42\x14\xa0\xab\x94\x02\x81\x75\x95\xe7\xfb\xd0\xd7\xa9\xb5\xb6\x7e\xe1\x76\xfe\x5a\xe3\x3b\x88\xb1\xed\x84\x81\x6d\x84\xe8\x09\xf9\x8b\x30\x21\x31\xd5\x9e\x52\xf5\x06\x4e\x64\xf6\xb7\x0a\xea\xc7\xbe\xe9\x7b\x3c\x10\x1f\xee\xb4\x39\xb6\x0d\x95\x33\x6d\x6e\x14\x13\x9a\x87\x1f\xe8\xba\xe7\x19\x89\xf0\x09\xfe\x31\x63\x06\x8f\x07\x22\xca\x02\xb5\x66\x9b\x87\xcd\xa0\x90\xe9\xa1\x0c\x67\xe2\xd5\x7e\xac\x34\xfb\xd5\xa1\x14\xe7\xd3\xda\xe9\x37\x2a\x6c\x93\x98\xd4\x50\xb6\x12\xbe\x14\xb6\xff\x67\x54\xd0\x3e\x5f\x67\xf1\xf1\xc6\xe2\x2d\xac\x6a\xeb\x35\x86\xd7\x63\x07\xe8\xc7\x0e\xd0\xbd\xcf\x63\x07\xe8\xc7\x0e\xd0\x8f\x1d\xa0\xfb\xeb\x79\xec\x00\xfd\xd8\x01\xfa\xb1\x03\xf4\x63\x07\xe8\xc7\x0e\xd0\x8f\x1d\xa0\x1f\x3b\x40\x3f\x76\x80\xb6\x9f\xff\x01\x1d\xa0\x43\x19\xff\x27\xf7\xd3\x68\x91\xed\xca\xee\x4d\xb2\xde\xf0\xc8\x6e\x46\xf8\x9d\x35\xfb\x93\xa0\xfe\x85\x07\x16\xf5\x0f\xae\x42\xeb\x39\xd7\x61\xdb\x0d\xf5\xd8\xc1\xbd\xc8\x05\xf9\x4b\x7f\xcf\xcb\x4d\xb3\x98\x79\xce\x1e\x4a\x99\x91\xe8\x2a\x67\x50\xdb\xbb\x19\xfd\x3d\x1a\x2b\x7f\x6e\xaf\xa4\x07\x32\xdc\xf3\x21\x00\x16\xa6\xbf\x36\x6d\xeb\xf2\xad\xdb\xd4\x72\xdd\xdf\x82\x99\x5d\x80\x30\xb9\x9e\x73\x37\xa6\x19\x16\xd8\xd8\xbd\x02\x73\x78\x0f\xc2\x9d\x58\xed\xd7\xea\x84\xbf\x3b\x72\x8f\x42\xc4\xe8\x59\xfe\xe1\x33\xd8\x9f\x76\xfe\x7a\xb8\x57\xc4\x03\xcf\x5e\xfb\x33\xd6\x51\x90\x0f\x39\x77\x1d\x3b\x5f\x1d\xb7\xfa\x9f\x74\xe8\xfa\xc1\x97\x8e\xc7\x2f\xe2\x4d\x9d\x7a\xf8\x42\x07\xac\xbf\xc8\xe1\xea\x07\x1f\xac\x8e\x1d\xa0\x8e\xce\x30\xef\x50\xf5\xe0\xe1\xe9\x28\xcc\xa9\x03\xd5\x07\xfc\xdb\x85\x33\x84\xbb\xd3\xe6\x2f\xcb\xfa\x63\xf7\x63\xac\xee\x01\xf8\x5f\x37\x6e\x9d\x38\xd1\x46\x2a\xb6\x09\x67\x50\x9a\x5a\x2e\x4b\x29\x15\xc3\xec\x9a\x15\x41\xb3\xed\xcf\x7d\xc3\x91\x43\xa7\xcc\x2b\xc5\x72\xff\x67\x6b\x8f\x16\xfe\xdf\xff\x7f\xe2\xa0\x62\xf6\x6b\xc0\x83\xbe\xfc\xaf\x00\x00\x00\xff\xff\xa5\x50\x44\xa2\xfa\x82\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 33530, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc4, 0x49, 0x15, 0x94, 0x98, 0xbe, 0xf0, 0x37, 0x3f, 0x25, 0xd7, 0xca, 0xfc, 0xe9, 0x8c, 0xc5, 0xa9, 0x72, 0xb7, 0xbe, 0x3d, 0x6f, 0x5f, 0x31, 0x5a, 0x24, 0x8d, 0xd0, 0x86, 0x42, 0xb4, 0x1b}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x55\x4f\x6f\xda\x4e\x10\xbd\xfb\x53\xac\x38\xfe\x24\x93\x5f\x5a\x55\xaa\x7c\x23\xa4\xf9\x23\xa5\x52\x64\xa2\x44\xea\x6d\xd9\x7d\x98\x15\xcb\x8e\x3b\x3b\xa6\x22\x9f\xbe\x5a\x20\x04\xe3\x24\x90\x9e\xa2\xdc\xb0\xdf\x7b\x33\x8f\x37\x03\xa3\x6b\x77\x0f\x8e\x8e\x42\xa1\x8c\xa7\xc6\x1a\x86\x45\x10\xa7\x7d\x9f\x6a\x84\x38\x75\x13\xe9\x3b\x3a\x59\x9c\x66\x33\x17\x6c\xa1\x86\x5b\x42\x2c\xf1\xbb\x41\x94\x6c\x0e\xd1\x56\x8b\x2e\x32\xa5\xbc\x1e\xc3\xc7\xf4\x49\x29\x43\x41\x98\xbc\x07\xe7\x42\xe4\x63\x7f\xf6\x3d\xf6\x1d\x15\xaa\x77\xda\xff\xbf\x97\x29\x15\xf4\x1c\x85\xda\xf6\xc9\x5d\xa8\x18\x31\x6e\x90\x58\x6b\xd3\x82\x57\x06\xf3\x67\x87\x39\xd5\x60\x2d\xc4\x59\xac\x61\x52\xcf\x08\xc3\x90\x12\x93\xb5\x81\x75\xfd\x7d\x59\xdc\x62\x9d\x0e\x1b\x03\xcf\x85\x95\xaa\x99\x16\xce\x82\x47\x9b\x16\x4a\xbd\x27\xb3\xc4\x5f\xe7\x36\x78\x18\xdd\xee\x94\x5a\x21\x51\xb4\x60\x8e\x20\x3f\x82\xb0\xc3\x26\xb6\x5c\x61\x32\x81\x91\x42\x0d\xbc\xa7\x3f\xab\x77\x4a\x69\x23\xa9\xe3\xe6\x29\x57\x30\x5f\x8a\x41\x23\x53\x62\xf7\x88\x11\x4c\xc3\x4e\x96\x97\x4c\x4d\x7d\xbd\x4d\xf1\x99\x39\x64\x68\x69\xd3\x5e\xc0\xef\x74\xd5\x96\x9d\xc3\xe3\x2d\xd9\x39\xa2\x61\x37\xc6\x75\x88\xa2\x83\xc1\xbe\x7a\x8d\x96\xd4\xa4\xda\x63\xff\x0a\xde\xaa\xff\x0a\xa5\x19\x07\xc8\xcb\xd8\x7d\x6d\xda\x40\x89\x05\xcd\x0e\x64\xe2\x75\x14\x67\x3c\x69\x3b\xd6\x5e\x07\xe3\x42\x55\x0c\xea\xda\x2f\xdb\x66\xee\xe8\x86\xb4\x3d\x5b\x51\xc0\x07\xe4\x22\xda\x4c\x77\xf9\x77\xd4\xf1\xfd\x92\x70\x48\x61\xe2\xaa\x86\x71\x05\xed\x65\x3a\x9c\xc2\xcc\x0e\x28\x56\xe3\x3a\xde\x5a\x97\x7f\xe3\xa2\x20\x80\x0f\x59\xeb\x08\x6f\xc9\x3b\xb3\x7c\x5b\xb5\x5e\x9b\xe3\xed\x75\xf9\x47\xda\x3b\x07\xa3\x4a\x54\xde\x6e\xe0\x05\xd3\xfc\x3d\x9d\xd7\x3b\xb4\xab\x18\x88\xb0\x1b\x37\x82\x83\xcd\xbb\xda\x83\x92\xfd\x15\x49\x76\x8f\x5a\x92\x9f\x64\xdd\x64\xf9\x2f\x3e\xcb\xfd\x88\x1e\x9c\x4c\x8f\x8f\x68\x04\xe9\xcc\xdf\x21\x5e\x10\x9f\x69\x33\x43\xb0\x23\xf0\x62\xa7\x08\xa7\x5f\xfb\xb7\xaf\x45\x1a\xe1\x15\x45\x81\xfd\x45\x61\xc7\xe3\x13\x3e\x9c\xea\x50\xa1\x44\xa4\x86\x0d\x4a\x18\x62\x3b\xda\x8d\x41\x74\x55\x5c\xa6\x7f\xf3\x35\xe3\x09\xe0\xcd\x73\xa1\x7a\xff\xf5\xb2\x3c\xcf\xb3\x0f\x79\xc4\x72\xfd\xd8\x30\x3e\xe7\x29\x4b\xdf\xac\x73\xcc\x98\x3c\xce\x5c\xb0\x2e\x54\xdb\x43\x96\xde\x15\x6a\x98\x22\x4c\x9b\x4a\xfc\x81\xe7\x55\x99\xfa\x53\x4e\xeb\x72\x78\xdb\x99\x55\x9d\x84\x13\x17\x60\x4b\xf2\x68\x8d\x2b\x9e\xd8\x10\xfb\xda\xce\x5d\xc8\xfe\x06\x00\x00\xff\xff\x58\x12\xc6\xf1\x1e\x0a\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 2590, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x2d, 0x67, 0x8b, 0x8b, 0xc4, 0xd7, 0xb7, 0xbc, 0x6, 0x33, 0x8d, 0xb4, 0xcb, 0xad, 0x4, 0x2c, 0x20, 0x9, 0xa4, 0x83, 0x10, 0x0, 0xbd, 0xf0, 0x6a, 0x6e, 0x32, 0x3a, 0x87, 0x5d, 0xfa}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\x51\xa8\x03\xa2\xdd\x7f\x80\x06\x89\xde\xb7\xf1\xdd\x99\xdb\xd8\x2b\xdb\x17\x7e\x1f\x45\x20\x88\x44\x69\x79\xde\xcc\xbb\x89\x2e\x15\xaf\xb4\x72\x0c\x6a\x5c\x68\xc8\x3b\x7b\x88\x69\xc5\xf6\x5c\x56\x4e\x5a\x28\xa9\x16\x80\x54\x2d\x29\xc5\x34\xf6\x13\xb0\xc1\x1a\x57\x39\xe7\xa3\xd8\x93\xda\xc2\x73\x70\xe7\x96\xe6\x15\xd3\x54\x80\x4e\x27\xee\x3f\xe1\x07\x50\xef\xf6\xf9\x07\xcd\xab\xa9\xa4\xb9\xe8\x05\x69\xe8\x66\x37\x9c\xcd\xf1\xc6\xbe\x49\xe3\x97\xef\x2f\xec\xf4\xc1\x2d\x03\xa2\xc8\xab\x04\xf4\x57\xf5\x9f\x42\xeb\xf7\x48\xf6\x43\x71\xc5\x94\x7e\xe7\xdd\x65\xe7\xea\x61\x5d\xf4\xe2\x1c\x31\xdb\x60\xa7\x34\x2f\x5f\x01\x00\x00\xff\xff\xf3\x40\x5a\x74\x0a\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x8c, 0x18, 0x1c, 0xe2, 0xe5, 0x97, 0x66, 0x8, 0xfe, 0x5b, 0x6, 0x60, 0x9d, 0x8f, 0xac, 0x16, 0x66, 0x66, 0x65, 0x25, 0xb3, 0x8f, 0xef, 0x71, 0x1d, 0x82, 0x2c, 0x1f, 0xa4, 0xd, 0x83}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xc8\x2e\x17\xdd\x02\x5d\xa0\x7b\x87\xee\x8c\xfc\x1b\x13\xb6\x45\x81\xa4\x5c\xa0\xa7\x0f\x92\x78\xe2\x7b\x0f\xc4\xe7\x2e\x3f\x30\x17\x6d\x85\xec\xc6\x75\xe2\x11\x8b\x9a\xfc\x73\x88\xb6\x69\xbd\xfa\x24\xfa\x71\x7c\xa6\x55\xda\x5c\xe8\x5b\x37\xa4\x1d\xc1\x33\x07\x97\x44\xd4\x78\x47\xa1\x6e\xba\x23\x16\x0c\xcf\xeb\xd5\xcf\xec\x9d\x2b\x0a\x69\x47\xf3\x45\x7e\x23\x4b\xbb\x1b\xdc\xb3\x76\x18\x87\x5a\xb2\xb1\xc1\x4b\xca\xc4\x5d\xbe\x4c\x47\xf7\xe7\x64\xa6\xcb\x25\x11\x19\x5c\x87\x55\x9c\xcd\x61\x87\x54\xf8\x4b\xd0\xe6\xae\xd2\xe2\x6d\x5d\xe7\x27\x1c\xb0\xdb\xf9\x7c\x47\xbc\xee\x26\xfe\x86\x3f\x8e\xba\xa4\x47\x00\x00\x00\xff\xff\xca\x87\x68\x45\xed\x00\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 237, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xfa, 0xc5, 0xb2, 0xce, 0xdd, 0xc0, 0x21, 0x49, 0xc0, 0x28, 0xa6, 0x7d, 0x8c, 0x46, 0xd4, 0xf3, 0x9d, 0x8, 0xb3, 0x2c, 0x8c, 0xac, 0x17, 0x87, 0xc8, 0x6c, 0x6a, 0x69, 0x5d, 0xef, 0x90}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\x06\xe0\x3d\x4f\xe1\x17\x48\x11\xdb\x29\x1b\x2c\xec\x87\xc4\xee\x4b\x7d\x57\xd3\xc6\x8e\x6c\xa7\x03\x4f\x8f\x2a\x55\x62\x02\x89\xd5\xb2\xfe\xff\xfb\xb1\xf3\x07\x99\xb3\x4a\x01\xbb\x61\x9d\x70\xc4\xa2\xc6\x5f\x18\xac\x32\xad\x17\x9f\x58\x9f\xf6\xe7\xb4\xb2\xcc\x05\xae\xba\xd1\x2b\xcb\xcc\xf2\x48\x8d\x02\x67\x0c\x2c\x09\x40\xb0\x51\x81\x6e\xda\x28\x16\x1a\x9e\xd7\x8b\x9f\x67\xef\x58\xa9\x80\x76\x12\x5f\xf8\x1e\x99\xe5\x61\xe4\x9e\xb5\x93\x61\xa8\x25\xd3\x8d\xae\x74\x3f\x72\xb0\xf3\x9b\xe9\xe8\x7f\x60\x12\xc0\x8f\xe5\xb7\x6a\x1f\xb7\x4f\xaa\xe1\x25\xe5\xf3\xfb\x9d\x6c\xe7\x4a\x2f\xb5\xea\x90\xf8\x27\xb9\xa9\x70\xa8\x1d\xab\xbf\x03\x00\x00\xff\xff\x37\x75\xb6\xb0\x31\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xb9, 0xd5, 0x57, 0xe3, 0x88, 0x98, 0x3e, 0x29, 0xea, 0xbf, 0x8c, 0x99, 0x2e, 0x96, 0xf8, 0xdf, 0xc2, 0x96, 0xd, 0xc7, 0x9e, 0xa3, 0x8b, 0x90, 0x2b, 0x7a, 0xa1, 0x1f, 0xfc, 0x4f, 0x3f}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\xae\xd5\x30\x0c\x86\xf7\x3e\x85\x5f\xa0\x0d\x88\x2d\x2b\x12\x13\xb0\x80\xd8\x53\x9f\xff\xb6\xe1\x34\x76\x64\xbb\x7d\x7e\xd4\xf6\xdc\x09\xdd\xd1\x7f\xbe\xfc\xfa\xe2\x94\x5e\xff\xc0\xbc\xaa\x64\x6a\x2a\x35\xd4\xaa\x2c\x13\xab\x41\x7d\x62\x6d\xe9\xf8\x3c\x3c\xab\x3c\x32\xfd\x82\x1d\x95\xf1\xe3\xa6\x86\x86\x28\x8f\x12\x25\x0f\x44\x52\x1a\x32\x55\x59\x0c\xee\xa3\x76\x58\x39\x91\xfb\xc0\x7b\x61\x64\xd2\x0e\xf1\xb5\xbe\xc5\xf8\x1f\xe7\x1d\x7c\xd6\x40\x1e\x5d\xab\x84\x9f\xc3\x48\x33\x8a\xc1\x7e\xeb\x13\xf2\xad\x6e\xc8\x94\x8e\x62\xc9\x76\x49\x0e\x36\x84\xa7\xe7\x3e\xc3\x04\x01\x9f\xaa\x26\xbf\x05\x0b\xb3\xee\x12\x29\xce\x8b\x03\x11\x51\x95\x80\x1d\x65\xcb\xf4\xe5\x93\x5f\x49\x57\x8b\x4c\x0d\x61\x95\xef\xc4\x79\xc5\xf9\x88\x35\xa2\xdf\x49\x6c\xfe\x55\xe5\xad\x2e\xf9\x1a\x89\xb8\xbc\x34\x10\x9c\xba\x69\x43\xac\xd8\x3d\xf1\x45\xb5\xd2\xfd\x56\x90\x65\x64\x58\xf8\xc8\x65\x9c\x77\x79\x6c\x78\x57\x1b\xb9\x4c\x6c\xf1\xea\x3b\x43\xd8\xcf\x6b\x77\x2f\x95\xe9\xe3\x2d\x4d\x7e\xf0\x40\xf4\x57\xe7\xef\x65\xc6\x96\x89\xb5\x75\x15\xc8\x59\xe7\xd8\xc0\xa1\x76\xab\xb6\x12\xbc\x5e\x94\xbf\xbb\x7f\xf0\x43\xff\x02\x00\x00\xff\xff\xf3\xaa\xe4\xf4\xff\x01\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xe6, 0x77, 0x40, 0x4f, 0x55, 0xae, 0x76, 0xce, 0xd1, 0x27, 0xf5, 0x2e, 0xec, 0x50, 0xfd, 0xf9, 0xf5, 0x2, 0xcd, 0x27, 0xfc, 0x51, 0x80, 0xdf, 0x29, 0x71, 0xe1, 0xca, 0xa7, 0x73, 0x22}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\x4b\xcc\x17\xc4\x86\xb2\x01\x03\x7b\x91\xd8\xdd\x9c\xdb\x33\xbd\xda\x91\xed\x74\xe0\xd7\xa3\xe8\x0a\x4b\xa5\x8a\xd9\x7e\xef\x7d\xdf\x03\xbc\xb2\xcc\x0e\xb1\x10\x68\x23\xc3\x50\x83\xba\x76\x0f\x32\x30\x5d\x09\x42\x81\xc3\xe1\x83\xec\xc2\x95\xe0\xa5\x56\xed\x12\x39\x9d\x58\xe6\x02\x6f\xdb\xeb\x4e\x57\x1a\x45\x2c\xc7\x84\x8d\x3f\xc9\x9c\x55\x0a\xd8\x1e\x6b\xc6\x1e\x8b\x1a\x7f\x63\xb0\x4a\x3e\x3d\x7b\x66\x7d\xbc\x3c\xa5\x33\x05\xce\x18\x58\x12\x80\xe0\x99\xca\x20\x10\x5f\xf8\x10\x13\xcb\xd1\xc8\x7d\xfa\x65\x4a\xde\xf7\x5f\x54\xc3\x4b\x9a\x60\x9b\xbe\x12\x5d\x81\xfe\x3a\x6e\x92\xdb\xc1\x1b\xd6\xfb\x0b\xc3\x76\x47\x87\x41\x73\xe3\x96\x00\xb0\xf1\xbb\x69\x6f\x77\xa4\xfe\xe3\xf1\x13\x00\x00\xff\xff\x5e\x3a\x23\xb1\x71\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 369, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x8e, 0x10, 0x4b, 0xec, 0x40, 0x80, 0x5c, 0x10, 0x83, 0xa9, 0x57, 0x2, 0x49, 0x9d, 0x4e, 0x4d, 0x6a, 0xec, 0xaf, 0x5d, 0x81, 0xa3, 0x2f, 0x1e, 0xd3, 0x8b, 0x69, 0xa0, 0x39, 0x50, 0xdf}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\x93\x98\x13\xc4\x86\x6e\x83\x85\xbd\x48\xec\xee\xc5\x6d\x4c\x5b\xfb\x64\x3b\x1d\xf8\xf5\x28\x22\x88\x01\xc1\xd2\xd9\xb6\xde\xf7\x7c\x87\x67\xd1\x29\x90\x33\xc3\x3a\x3b\xa5\x39\xdc\xce\x8c\x34\x48\x06\x5e\xd9\xaf\xd2\x18\x4f\xad\xd9\xa2\x39\x96\x93\xe8\x54\xb1\xb3\x33\xaf\x97\xa2\xc7\x42\x5d\xde\xd8\x43\x4c\x2b\x7c\x4f\x6d\xa4\x25\x67\x73\xf9\xa0\x14\xd3\xf1\xf4\x18\xa3\xd8\xfd\xf5\xa1\x5c\x38\x69\xa2\xa4\x5a\x00\xa5\x0b\x57\x88\x1e\x9d\x23\x86\xef\xe8\x6d\x10\x9d\x1a\xd7\x15\xa4\x31\xcb\x21\x87\x5f\x7b\xb1\xec\xdf\xb9\x65\xd4\x32\xe0\x4b\xb4\x41\x37\xe7\xed\x09\xeb\x13\x76\x7c\x58\xad\x3f\x95\x0b\x40\x5d\x5e\xdc\x96\xfe\x4f\xd7\xbf\xc3\x3f\x03\x00\x00\xff\xff\x1f\x8f\x27\xc8\x6f\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 367, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x6b, 0xe2, 0x98, 0x77, 0x85, 0x4, 0x5f, 0x81, 0xee, 0xa8, 0x60, 0xbe, 0x8a, 0xf3, 0x3, 0xad, 0xd8, 0x7, 0x27, 0x33, 0x11, 0xe8, 0x28, 0x66, 0xe4, 0xd9, 0x9, 0x76, 0xee, 0x60, 0xb5}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x70\xb7\x02\x56\xd1\xad\xd0\x05\xba\x77\xe8\xce\xc8\x74\x42\x44\x12\x05\x52\x36\xd0\x9e\xbe\x88\x63\x1b\x41\x3c\x74\x13\xc5\xf7\x9f\x3e\xf4\x02\x5f\x92\x08\x46\x51\x68\x17\x02\xa9\xa4\xd8\x44\x81\x9b\x51\x1a\xbd\xbb\x72\x19\xc2\xc2\x38\xac\xfc\x4d\x6a\x2c\x25\x80\x9e\x30\x7a\x9c\xda\x45\x94\x7f\xb1\xb1\x14\x7f\xfd\x30\xcf\xf2\x36\xbf\xbb\x4c\x0d\x07\x6c\x18\x1c\x40\xc1\x4c\x01\xb8\x9c\x95\xcc\xfa\x4d\xbf\x2e\xac\x62\xa4\x70\x7b\xb4\xd8\x85\xc7\xd6\x1f\x38\x9d\x12\x59\x70\x3d\x60\xe5\x4f\x95\xa9\xda\x4d\xda\xef\x3d\xfd\x9e\xf5\x2c\x0e\x40\xc9\x64\xd2\x48\x2b\xd6\xbd\x76\x0e\x60\x26\x3d\x3d\x5c\x1c\x6d\x5d\x77\x8c\x56\x19\x6c\x39\x18\xe9\xcc\x91\xee\x03\x95\xa1\x0a\x97\x76\x9f\xea\xed\x3b\xac\x51\x69\xb3\xa4\x29\x53\x4c\xc8\x79\x05\x67\xda\xa8\x28\x65\xe4\x73\xc6\xba\xf9\xa2\xd2\xb2\xfa\xb7\x17\xd6\x25\xf3\xd4\x6c\xa0\x9a\xe4\x27\xef\xfe\x87\x82\x4f\xc6\xbf\x00\x00\x00\xff\xff\x4f\x96\x11\xa4\xdd\x01\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 477, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xf1, 0xe, 0xa2, 0x89, 0xa6, 0xa5, 0x86, 0x8d, 0x2d, 0x22, 0x6e, 0x62, 0x6c, 0x7c, 0x58, 0xca, 0x7b, 0x96, 0x5f, 0xa7, 0xbd, 0x5f, 0xcb, 0x2d, 0x53, 0xeb, 0x25, 0xd3, 0x62, 0x2c, 0xf8}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\x84\x30\x10\x44\x7b\x7f\xc5\x48\xd4\x20\xa5\x75\x97\x32\x75\xa4\xf4\x96\x3d\x84\xd5\x81\xed\xdb\x5d\xf8\xfe\x13\x88\xab\xae\x9e\xa7\x37\x6f\xc0\x77\xce\x6d\xaf\x8e\xb9\x29\x7c\x21\x5a\xa7\x26\x6f\x0a\x71\xe3\x3a\x4f\xf8\x71\xd8\xd2\xf6\xb5\x40\xf9\xdc\x45\x89\x9a\x36\x5a\x4f\x99\xb0\xdc\x3a\x4b\x18\xd0\xa9\x9b\x98\x49\xab\x36\x85\x87\xd4\x12\xf1\x4b\x3d\x24\xf3\xf6\x87\xd4\xe5\x8f\x7a\x12\x11\xc7\x57\xd8\xe8\xa9\x24\x4f\x31\xe0\xf2\x45\x48\xfd\x57\x9a\x8d\xef\x80\x7b\xb8\x8e\xe2\x99\x55\x6d\x91\xd9\xc7\x0f\xee\x15\x00\x00\xff\xff\xe5\x09\x18\x74\xc4\x00\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 196, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0x8d, 0xe1, 0x55, 0xc4, 0xdf, 0x60, 0x69, 0xa, 0xef, 0xf1, 0x8c, 0x61, 0xea, 0x45, 0xf4, 0xa, 0xcb, 0x9d, 0xc7, 0xc3, 0xb4, 0x10, 0x8a, 0xb6, 0xf3, 0x21, 0xe6, 0x97, 0xc0, 0x28}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\x03\x41\x0c\x85\xfb\x39\x85\x2f\x30\x8b\x50\xaa\x4c\x4b\x45\x17\x09\x89\xde\x99\x3c\x96\x11\xb3\xf6\xc8\x36\x91\xb8\x3d\xca\xee\x02\x45\x0a\xca\xe7\xef\xfd\x98\x47\x7b\x85\x79\x53\x29\x74\x7d\x4c\x1f\x4d\x2e\x85\x5e\x60\xd7\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\x16\xd1\xe0\x68\x2a\x7e\x93\x44\xbe\x99\xa6\x33\x82\x27\x1d\x10\x7f\x6f\x6f\x31\x35\x7d\x58\x89\xcc\xb9\xc2\x22\x3b\xaa\x21\xb2\xf0\x82\x42\x0b\xc2\x5a\xf5\x1c\xdd\x13\x51\xe7\x33\xfa\xde\xb6\xf1\x26\xb3\xc1\x3d\xeb\x80\x71\xa8\xa5\x1f\xb0\x07\x77\xed\x83\x2b\x0a\xfd\x8e\xe6\xbb\x9c\x0f\xd4\x5b\xf1\x50\x8b\x75\x21\xdf\x15\x6d\xb0\xd0\xf1\x70\x3c\xac\x32\xd8\x66\xc4\x69\x3d\xfe\xd9\x1c\x1d\x35\xd4\xfe\x79\x33\xbe\x06\x0a\x3d\xf5\x4f\x0f\xd8\xf3\x29\x7d\x07\x00\x00\xff\xff\x31\x2a\x66\x9a\x58\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 344, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x93, 0xf5, 0x35, 0x51, 0xf2, 0xbd, 0xe6, 0x30, 0xc3, 0xd3, 0x25, 0x22, 0x49, 0x95, 0x6a, 0x8f, 0xa2, 0x8a, 0x9c, 0x67, 0xa6, 0xe4, 0xd, 0xee, 0x77, 0x40, 0x1c, 0x28, 0xe7, 0x40, 0xa3}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x21\x99\x9d\x0f\xdf\xaa\xb5\x73\xb7\xa2\x3b\x23\xd3\x36\x1b\x99\x14\x44\xba\x45\xdf\xbe\x48\xed\xfe\x1b\x79\xe4\x1d\x7f\xb8\x33\x9e\x16\x86\x72\xbc\x59\xbf\xc1\x1a\x77\x0a\xeb\x10\x47\x67\x6f\xa6\x2e\xd7\xca\x98\xee\x92\xbe\x70\x09\xd1\x39\x9d\x11\x0b\x23\xfa\xe6\xc1\x23\x0a\xe1\xba\xe9\x58\x19\xa2\x61\x88\x45\x1c\xc5\x74\x92\x79\xa5\x76\x49\xd4\xe4\x99\xbb\x8b\x69\xc6\xeb\xff\x74\x13\x1d\x33\x1e\x3e\xf7\x8f\xd4\xd2\xca\x41\x23\x05\xe5\x04\x90\xaa\x05\x85\x98\xfa\x7d\x04\x3a\x57\x26\xe7\x8b\x35\x56\x5f\x64\x8a\x8b\xd8\xbf\xd2\x99\x82\x07\xd3\xfa\x9e\x71\x8a\xbe\xf1\x29\x01\x95\xae\x5c\x0f\xdb\xfe\xfd\xaf\x6b\xa7\x1f\x0e\xe8\xa1\xd0\xce\xfc\x2b\x41\x69\xe5\x8c\x9f\x83\x43\xf2\x46\x85\x33\xbe\xc3\x06\xd1\xb9\xb3\xfb\xf0\xd5\x55\xfa\x08\x00\x00\xff\xff\x4c\x3f\xbd\xa8\x43\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x99, 0xa0, 0xf5, 0x24, 0x3, 0x8, 0xa4, 0xc3, 0xec, 0x80, 0xc0, 0x88, 0xbd, 0x8, 0xb0, 0xfc, 0xf0, 0x3, 0x42, 0x53, 0x21, 0xf3, 0xbb, 0x4a, 0x33, 0xfd, 0x7, 0xa3, 0x23, 0x4, 0xfa}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x41\x73\xdb\x38\x0f\xbd\xe7\x57\x70\x7c\xfe\x68\xd9\x69\xbf\xee\x96\x33\x39\x78\x5d\xb5\xc9\x4c\xec\x66\xe2\x4c\x7b\xf4\xd0\x14\x6c\x73\x4d\x91\x2c\x00\x79\xa2\x7f\xbf\x43\xd9\xb1\x65\xc5\x71\x73\xd8\xd5\x49\x23\x3c\x3c\x3c\x80\x00\x44\x1d\xed\x0f\x40\xb2\xc1\x2b\xa1\x63\xa4\x6c\x3b\xbc\xda\x58\x5f\x28\xf1\x05\xa2\x0b\x75\x09\x9e\xaf\x4a\x60\x5d\x68\xd6\xea\x4a\x08\xaf\x4b\x50\xc2\xfa\x15\x02\x91\x0c\x11\x50\x73\xc0\xbd\x81\xa2\x36\xa0\x44\x88\xe0\x69\x6d\x97\x2c\xcf\xe0\xb4\xf7\x81\x35\xdb\xe0\x29\xf1\x09\x61\x82\x5f\xda\x55\xff\xe0\xd4\xb7\x21\xb3\xfe\x6f\x30\x2c\x23\x86\xe7\xfa\x4c\x34\x8a\x60\x92\x33\x42\x74\xd6\x68\x52\x62\x78\x25\x04\x31\x6a\x86\x55\xbd\xa3\xe5\x3a\x82\x12\x8f\x60\x10\x34\x43\x32\x83\x03\xc3\x01\x77\xe6\x52\xb3\x59\xdf\xeb\x05\xb8\xbd\x8c\x0b\xa9\x31\x94\xd1\x69\x86\xbd\x67\xab\x1a\xe9\x71\x27\x24\x17\x68\x84\x78\xd1\xdd\xc0\x42\x01\xb3\x13\x49\xe9\xd9\x54\x0b\x40\x0f\x0c\x94\xca\x10\x48\x09\x67\x7d\xf5\x7c\x24\x0f\x05\x48\x0c\x0e\xfa\xa7\xc8\x52\x13\x03\x2a\xd1\xeb\xed\xa1\x1c\x5c\x0a\x7c\x2c\xb3\x10\x52\x6c\xa0\x56\xa2\x77\x99\xa3\x77\x88\xf5\x22\x5d\x89\x5e\xfe\x6c\x89\xe9\x68\x82\xe5\x12\x0c\x2b\xd1\x9b\x86\x99\x59\x43\x51\x39\xe8\x9d\x89\xd2\x09\x50\x79\x04\x6d\xd6\x7a\x71\x44\xbf\x37\x4a\xfe\x0c\xa6\xe2\x96\xdb\x31\xbf\x19\x98\xe0\x8b\xd4\x03\xd7\x83\xdf\x6b\xf0\x81\x25\x82\x2e\xea\xff\x56\x01\x01\x6e\xad\x81\x91\x31\xa1\xf2\x3c\x7d\xbb\x25\x84\x88\x68\x03\x5a\xae\xc7\x4e\x13\xed\x90\x54\x13\x43\x29\x8d\xab\xd2\x89\x48\x83\x96\xad\xd1\x6e\xef\x60\x82\x67\x6d\x3d\x60\xab\xe9\xe4\xa5\xb6\xdb\xeb\x05\x2c\xad\x6f\x04\x4f\x80\x48\xaf\xe0\x21\x38\x6b\x6a\x25\xbe\x6a\xe7\x16\xda\x6c\x9e\xc2\x7d\x58\xd1\x77\x9f\x23\x9e\x78\xda\x32\x81\x2b\xe7\x5e\x1c\xee\x96\xd3\xc0\x0f\x08\x94\xb6\x43\x07\xd7\x1a\xff\x2c\xa0\x5d\x59\x7f\xc8\xa3\x2b\x4e\xa5\xa1\xa2\x36\x83\x09\x65\xa9\x7d\xa1\x5a\x9f\xe4\xa5\x9c\xa4\x20\xd6\xd8\x66\x00\xbf\x6d\x7b\x1f\x2b\xf3\x98\xdf\xe7\xa3\x59\x3e\xff\x91\x3f\xce\xee\xbe\x4f\x4f\x30\x42\x6c\xb5\xab\x40\x89\xde\xa0\x3f\xe8\x0f\x25\x79\x1d\x69\x1d\xb8\x77\x96\xe9\xe7\xe8\x69\x7c\x3b\x9f\x8e\x26\xf9\xec\x61\x34\xce\xcf\x31\x7d\xc5\x50\xaa\x8e\x41\x88\xa5\x05\x57\x3c\xc2\xf2\xb5\x65\x6f\x7b\xd0\xbc\x56\x87\x05\xd3\x3f\xac\xd4\xb3\x32\xee\x26\xa3\x6f\x67\x83\x9f\x39\x81\xb5\x6e\x56\xa9\xc4\x50\xa5\x35\xb1\xfd\xd8\x1f\xb4\x3c\x11\x28\x54\x68\x80\x4e\x85\x21\xfc\xaa\x80\x98\xba\x72\x4d\xac\x94\x18\x0e\xca\xd6\xe7\x6d\x70\x55\x09\x93\xd4\xeb\x74\x7a\x78\x3b\xad\x8c\xa9\x03\x0a\x69\xf4\x09\x57\x99\x1c\x76\x49\x67\xc0\x26\x8b\x1b\x9b\x19\x2d\x1b\x74\x06\xcf\x8c\xda\x30\x14\x59\x84\xb2\x23\x4c\x17\xdf\xbd\xab\x1b\x5e\x78\x35\x03\x69\xe0\x25\x2e\xb4\xd9\xfd\x3f\x5e\x37\xe8\xaf\x4a\xd7\xcd\x7a\xed\x96\xa9\xe3\xf9\xba\x3f\x35\xae\x3a\xf9\x49\xe9\xc2\x8a\x03\x71\x01\x88\x1d\x0b\x81\xa9\x10\xa4\xb3\xc4\xe0\xa5\x2e\x8a\xd4\xc6\x37\xea\xf3\x87\xcf\x1f\x3a\x48\x76\x24\x8d\x8d\x6b\x40\x49\x95\x65\xa0\x9b\xa7\xfb\xd9\x3c\x1f\x7f\xb9\xcd\xe7\x8f\xb3\xd1\xfc\xe7\xdd\xd3\xed\x7c\x94\xcf\xe6\xc3\xeb\x3f\xe7\xdf\xc6\x93\xf9\xec\x76\x74\xfd\xff\x4f\xff\x3b\xa2\xf2\xf1\x97\xdf\xe0\x5e\xf1\x8c\xff\x1a\xbf\x8b\xe7\x2c\xee\x02\x5b\x27\xb7\x2a\x12\x23\xe8\xf2\x66\xcd\x1c\x55\x96\x0d\xaf\xff\xe8\x37\x63\xa6\x3e\x0d\x06\x83\x41\x76\xae\x14\x80\x2c\x97\xd6\xc1\x4d\xd3\x16\xec\x28\x8b\x68\xb7\x9a\x21\xbd\xf7\xcd\xc9\xc4\xbf\x38\xed\x11\x72\x03\xf5\x05\xdf\x0d\xb4\x1b\x22\x06\xec\x36\xec\x61\xbb\x3e\x04\x64\x25\x3a\x87\xf5\xf2\x7b\x2f\x81\xd1\x1a\xfa\x57\x87\x48\x34\x97\x8b\x32\x60\xad\xc4\xc7\xc1\xc4\xbe\x6b\xbe\xba\x23\xd4\xca\xf7\x6d\xd9\xa9\x5e\xbf\x9f\xa8\x5d\xd0\xd6\xf5\xe1\x6d\x0e\x4a\xd7\x2c\x6e\x2b\xdb\x7d\x99\xbe\xe1\x71\x61\x2f\xec\xae\x83\x13\x1d\xdb\x6c\x17\xb6\x88\x65\x28\xa9\xbb\xf2\x9b\xdf\xbf\xd1\x72\x51\xf9\xc2\x41\xa7\x61\xd2\x13\x9b\x8a\x35\xbd\x76\x40\xa5\x35\xf3\x4f\x00\x00\x00\xff\xff\xb8\xac\xc5\x1e\x10\x0b\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 2832, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x2b, 0xf1, 0xb8, 0x2b, 0x55, 0xdf, 0xa3, 0x95, 0x9b, 0x31, 0x93, 0xb8, 0x75, 0xae, 0x9f, 0x4d, 0x96, 0xcd, 0x9c, 0x14, 0xa6, 0xdf, 0x43, 0x6, 0x94, 0xd0, 0xa6, 0xb8, 0xda, 0xb, 0x32}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x6f\xc2\x40\x0c\x85\xf7\xfb\x15\x4f\xb0\x96\x14\xd6\xac\x4c\x9d\x58\x2a\x76\xf7\x62\x38\xab\x89\x1d\x9d\x7d\x20\xfe\x7d\x45\x00\xb5\xea\x4d\x4f\x67\xfb\x7d\xdf\x1a\x9f\x45\x1c\x95\xdd\x5a\xcd\x0c\x71\xa8\x05\x72\x65\x0a\x1e\xf0\x75\xc3\xfe\x78\x78\x83\xc4\x7d\x62\x3a\xde\xd0\x9c\x07\x90\x83\x90\x6d\x9a\x9a\x4a\xa6\x10\xd3\xb4\xc6\xc4\xb9\x90\x8a\x4f\x08\x43\xf0\x38\x22\x0a\xdf\xef\x71\x2d\x92\x0b\xf6\x63\xf3\xe0\x7a\x98\xb9\x52\x58\xfd\x85\x86\xe1\x4a\x12\x38\x59\xed\xd2\x1a\x1f\x7a\xae\xec\xbe\x37\x8d\x6a\xe3\xc8\xf5\xa9\xe3\x20\x1d\xd0\xe6\x61\xc9\xf1\xd7\xbb\x4b\x34\xcb\x91\xab\x8b\x69\x8f\x6c\x7a\x92\x73\x67\x33\xab\x17\x39\x45\x27\xf6\x7e\xd9\xa5\x6f\xd1\xa1\xff\x6f\x91\x26\x0e\x1a\x28\xa8\x4f\x80\xd2\xc4\x3d\xe4\xc1\x4f\x1e\x14\xcd\xef\xff\x97\x47\xf3\x92\x81\xcd\x73\xcf\x5e\x15\x58\xde\xe5\x85\x5f\x6d\xbb\x6d\xb7\xdb\xb8\xd2\xec\xc5\x62\x95\x7e\x02\x00\x00\xff\xff\xb3\xe2\x1b\x07\x65\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 357, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x55, 0x62, 0x66, 0x26, 0xb0, 0xbd, 0x39, 0xb8, 0x3f, 0x33, 0x66, 0x5d, 0x9f, 0x49, 0x8a, 0xa2, 0xac, 0x2a, 0x5c, 0x3e, 0x18, 0x29, 0x74, 0xbc, 0x0, 0x97, 0xc9, 0xe2, 0x1b, 0x83, 0x26}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x6e\xc3\x20\x10\x80\xe1\x9d\xa7\x38\x79\xc7\x69\xa5\x4e\xcc\x5d\x3a\x57\xea\x7e\x71\x2f\xce\xc9\x31\x47\xef\x8e\xa8\x79\xfb\xca\x4e\x54\x91\x56\x5e\x32\x81\x00\xfd\x1f\x30\x71\xfe\x4c\xf0\x36\xe3\x48\xef\xae\x84\x73\xc0\xc2\x1f\xa4\xc6\x92\x13\xf0\xb2\xde\x4b\xa1\x6c\x47\x3e\x78\xcf\xb2\x3b\x3f\x07\x2b\x34\xa4\x00\xe0\x38\xda\x32\x46\xc8\x38\x53\x82\xe1\x54\xcd\x49\x23\xe7\x51\xc9\x2c\x4a\x21\x45\x17\x0d\x00\x00\x07\x95\x39\xc1\x3a\x05\xb8\xaa\xdd\xab\x0c\x13\xe9\x8a\x77\xb7\x9d\x6b\xa9\xfb\x25\x77\xa2\x3c\x72\x8e\x5b\xed\x74\x42\x27\xf3\xae\xb9\xc6\x11\x8b\xca\xf7\x25\xaa\x54\xa7\x06\x7f\xd8\xbe\x0f\xa6\xf3\x4b\xff\xd4\x7a\x53\xdd\x53\xd4\x3d\x0e\x71\x3d\xb6\x01\x36\xde\x1d\xf7\x55\xf1\xb2\xfc\xeb\x3f\xf5\x4f\xf6\xf6\xd0\xf0\x13\x00\x00\xff\xff\xac\x8b\xd7\x12\xb1\x01\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 433, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x14, 0x39, 0xff, 0xa2, 0xc1, 0xc5, 0xd4, 0x2e, 0xb7, 0xd, 0x93, 0xd5, 0x83, 0x85, 0x1f, 0x1d, 0xe7, 0x73, 0xd1, 0x42, 0x8, 0xfa, 0x7a, 0x25, 0x4a, 0xed, 0x37, 0x10, 0xb8, 0x13, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
