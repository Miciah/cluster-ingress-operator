// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/canary/daemonset.yaml (633B)
// assets/canary/namespace.yaml (74B)
// assets/canary/route.yaml (383B)
// assets/canary/service.yaml (331B)
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (883B)
// assets/router/deployment.yaml (2.206kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.85kB)
// manifests/00-custom-resource-definition-internal.yaml (6.71kB)
// manifests/00-custom-resource-definition.yaml (66.287kB)
// manifests/00-ingress-credentials-request.yaml (2.091kB)
// manifests/00-namespace.yaml (460B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (446B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (514B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (720B)
// manifests/0000_90_ingress-operator_03_prometheusrules.yaml (949B)
// manifests/01-cluster-role-binding.yaml (578B)
// manifests/01-role-binding.yaml (576B)
// manifests/01-role.yaml (686B)
// manifests/01-service-account.yaml (405B)
// manifests/01-service.yaml (538B)
// manifests/01-trusted-ca-configmap.yaml (517B)
// manifests/02-deployment.yaml (3.854kB)
// manifests/03-cluster-operator.yaml (566B)
// manifests/image-references (557B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCanaryDaemonsetYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x6b\x1b\x31\x10\x85\xef\xfb\x2b\x1e\xf8\xec\x76\xd3\x43\x59\x74\x4d\x5a\x6a\x68\x9a\x05\x87\xde\xa7\xda\xb1\x23\x22\x69\xd4\x99\xd9\x80\xff\x7d\xd9\xa5\x4e\x5d\x53\x4a\x74\x12\x4f\xef\xd3\xbc\x37\x1b\x7c\xe1\x9c\x05\x0f\x8d\xab\x3d\xa5\x83\x63\x57\x8f\xca\x66\xb8\xa5\x4a\x7a\xc2\x44\x5c\xa4\x1a\x7b\xb7\xc1\xbe\x71\x4c\x87\x14\xf1\x42\x79\x66\x03\x29\xc3\xd8\x41\x0e\x9d\xab\xa7\xc2\xdd\x73\xaa\x53\xc0\xdd\x0a\xed\xd9\x3b\x6a\xe9\x3b\xab\x25\xa9\x01\xd4\x9a\xbd\x7f\xb9\xe9\x36\xa8\x54\x18\x54\xa7\xf5\x62\x8d\x22\xff\xe3\xaf\x77\x9d\x35\x8e\xa1\x03\x9a\xca\x9a\xe9\x8e\x69\xca\xa9\xf2\x9e\xa3\xd4\xc9\x02\x3e\xf6\x7d\x07\x38\x97\x96\xc9\x79\xb1\x02\x67\x68\x39\x51\xaa\x53\xaa\xac\x76\x56\x80\xed\x3a\x34\xe0\x69\xe9\xbd\x95\x73\xef\x6d\x5c\xfb\xbe\xda\x80\x0d\x76\x85\x8e\x8c\x64\xd7\x25\xff\x78\xd2\xe2\x18\xe7\x9c\x47\xc9\x29\x9e\x02\x76\x87\x6f\xe2\xa3\xb2\x71\xf5\x0b\x9f\xb3\x96\x54\xc9\x93\xd4\x7b\x36\x5b\xa0\xdf\xc0\x67\xca\xf9\x07\xc5\xe7\x47\xf9\x2a\x47\x7b\xa8\x9f\x54\x45\x2f\xc8\x26\xea\x17\xe9\x97\xfc\xaf\xad\x46\x51\x0f\x18\xfa\xa1\xbf\x78\x5f\xd7\xe5\x12\x25\x07\x3c\xde\x8e\xff\x25\x87\x61\x78\x13\xa9\x6c\x32\x6b\xe4\xbf\x82\x2c\xf2\xcf\x99\xcd\xaf\x54\x20\xb6\x39\xe0\xa6\x2f\x57\x72\xe1\x22\x7a\x0a\xf8\xd0\xdf\xa7\xee\x57\x00\x00\x00\xff\xff\xf4\x58\x1d\x74\x79\x02\x00\x00")

func assetsCanaryDaemonsetYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryDaemonsetYaml,
		"assets/canary/daemonset.yaml",
	)
}

func assetsCanaryDaemonsetYaml() (*asset, error) {
	bytes, err := assetsCanaryDaemonsetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/daemonset.yaml", size: 633, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x9a, 0xa8, 0xca, 0x18, 0xb4, 0x43, 0x9a, 0x7b, 0x28, 0xbe, 0xcf, 0x7f, 0x46, 0xb3, 0xd5, 0xbe, 0x2b, 0xa4, 0x5b, 0x99, 0xe, 0x1e, 0xa2, 0x31, 0x72, 0xe9, 0xb1, 0x97, 0x66, 0x32, 0x94}}
	return a, nil
}

var _assetsCanaryNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\xc4\x20\x0c\x05\xd0\xde\x53\x78\x01\x8a\x6b\x3d\xc4\x95\xd7\x7f\xc1\xbf\xc4\x8a\x30\x08\xa3\x48\xd9\x3e\xef\xf2\x68\xa6\x5f\x74\xe6\x44\xa5\x60\xfa\x8f\x2b\x7d\x84\xe9\xfd\x91\xce\x8d\x86\x0d\x13\xd5\x40\xa7\xe9\x98\x8c\x3c\xfd\xbf\x8b\xc7\xb1\x98\x59\x2a\x02\xeb\x91\x37\x00\x00\xff\xff\xa2\x0f\x7e\x71\x4a\x00\x00\x00")

func assetsCanaryNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryNamespaceYaml,
		"assets/canary/namespace.yaml",
	)
}

func assetsCanaryNamespaceYaml() (*asset, error) {
	bytes, err := assetsCanaryNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/namespace.yaml", size: 74, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xb8, 0xeb, 0xfb, 0xd2, 0x1, 0x66, 0x41, 0x91, 0xc, 0x7c, 0x4, 0x28, 0x23, 0xd9, 0x68, 0x49, 0x55, 0xcb, 0x65, 0x92, 0xaa, 0x8d, 0x46, 0x67, 0xbd, 0xf8, 0x27, 0x93, 0x32, 0x6e, 0x4c}}
	return a, nil
}

var _assetsCanaryRouteYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x8a\x87\x78\x3e\x9f\xb3\x05\x5e\x6f\xb9\x5b\xae\x41\x03\x74\x67\x64\x26\x21\xea\x90\x02\x45\x27\xcd\xbf\x2f\x6c\x23\x68\xbb\xe9\x49\x7a\xdf\xe3\x63\x83\xbf\x3c\x8e\x86\x97\xc2\x5a\x2f\x72\x0a\xfc\xd3\xb3\x73\xad\xf8\x43\x4a\xfe\x80\xdb\x14\x9c\x1a\x1c\x0a\x67\x39\x49\xc6\x8d\xc6\x89\x2b\xc8\x19\x54\xca\x28\x3c\x80\x02\x3e\x69\xc8\x95\xd3\xbb\xe8\xd0\xe3\x75\x31\x51\x91\x37\xf6\x2a\xa6\xfd\x8a\x69\xed\x99\xd2\x8a\xfd\xbe\x6d\x53\x03\xa5\x2b\x83\x74\x58\x0e\xb5\x50\xe6\x85\x5c\x39\xbe\x51\xdb\x74\xe5\xa0\x81\x82\xfa\x04\x90\xaa\x05\x85\x98\xd6\x59\x02\x17\x2a\x6e\x1f\x8f\x76\xc9\xf0\x9f\x21\x47\x1a\x49\x33\xf7\xd8\xb8\x4d\x3a\xb8\x1d\x45\x37\xa9\x16\xce\xb3\xb7\x98\xc7\xca\x08\xf2\x33\xc7\x7e\xd6\xd8\x75\xbb\xee\x57\xe4\x92\x80\xb0\xf5\x79\xad\x75\x60\xbf\x49\xe6\xe5\xa6\x79\xaa\xb5\xc2\xd7\xc0\x58\xf6\x30\x7f\xb9\xb3\x9c\x2f\xd1\x63\xdb\x75\x09\xb8\xcb\x38\x64\xf2\x61\x6f\xa3\xe4\x47\x8f\xff\xa6\x9c\x3e\x03\x00\x00\xff\xff\xd8\xf4\x34\x5c\x7f\x01\x00\x00")

func assetsCanaryRouteYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryRouteYaml,
		"assets/canary/route.yaml",
	)
}

func assetsCanaryRouteYaml() (*asset, error) {
	bytes, err := assetsCanaryRouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/route.yaml", size: 383, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x63, 0x3c, 0x6e, 0x43, 0x81, 0x26, 0xa8, 0x73, 0xd7, 0x70, 0x41, 0x40, 0x4e, 0x20, 0x41, 0xef, 0x8c, 0x86, 0xef, 0xa7, 0x32, 0xa1, 0x1a, 0x9e, 0xe, 0xdf, 0xe6, 0x39, 0x8d, 0x46, 0x8b}}
	return a, nil
}

var _assetsCanaryServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\xb1\x6a\x33\x31\x10\x04\xe0\x5e\x4f\x31\x70\xb5\x7f\xfc\x77\x42\xed\x35\x71\x95\x03\x87\xf4\x8b\x6e\xed\x88\xc8\xd2\xb2\xbb\x77\xe0\xb7\x0f\xbe\x0b\xc1\xa4\x4a\x27\xcd\xcc\x7e\x03\x5e\xb8\xd6\x8e\x57\xe1\x66\x1f\xe5\xe2\x38\xb5\xab\xb2\x19\x46\x6a\xa4\x77\x18\xeb\x5a\x32\x87\x01\x67\xe1\x5c\x2e\x25\x63\xa5\xba\xb0\x81\x94\x41\x22\xb5\xf0\x0c\x72\xe8\xd2\xbc\xdc\x38\x7c\x96\x36\x27\x9c\xbf\xcf\x48\xca\x3b\xab\x95\xde\x12\xd6\xff\x61\x40\xa3\x1b\x83\xda\xbc\x3d\x4c\x28\xf3\x06\x19\xfb\x13\xf2\x2f\x98\x70\x4e\x01\xf0\xbb\x70\xc2\x58\x17\x73\xd6\xd3\x14\x00\xe9\xea\xf6\xa8\x0e\x1b\x91\x10\x8f\xf1\x78\xf0\x2c\x01\xd8\xdb\x3d\xda\xbf\xda\xbd\xe7\x5e\x13\xde\xc6\x69\x4b\x9c\xf4\xca\x3e\x3d\xcf\x7e\xa0\x18\xe3\x6f\x28\xc6\xf8\x17\xe8\x31\xfb\x0a\x00\x00\xff\xff\x41\xbe\x5b\x7c\x4b\x01\x00\x00")

func assetsCanaryServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryServiceYaml,
		"assets/canary/service.yaml",
	)
}

func assetsCanaryServiceYaml() (*asset, error) {
	bytes, err := assetsCanaryServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/service.yaml", size: 331, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0xde, 0xe2, 0x1e, 0x7a, 0x6d, 0xaf, 0xcf, 0xb3, 0xf8, 0x47, 0x40, 0xf, 0xe4, 0x19, 0xcd, 0x25, 0x2b, 0x90, 0x14, 0x3, 0x97, 0xc7, 0x48, 0x2d, 0xb, 0xbb, 0x7e, 0x99, 0xde, 0x85, 0xd2}}
	return a, nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xdb\x40\x0c\x85\x77\xfd\x0a\x22\x9d\xad\xa0\x5b\xa1\xb5\x43\xb7\x0e\x45\xd1\x9d\x3a\xbd\x54\xac\x2f\xc7\x03\xc9\x93\x9b\xfe\xfa\x42\xb2\x13\x18\xb6\x83\x24\x9b\xa8\x3b\x7e\xef\xdd\x23\x3f\xd1\xd7\xdc\x3c\x60\xe4\x49\x2b\x26\x32\xcd\xa0\x07\x35\x32\x6d\x01\xf3\x9e\x7e\xce\xe2\xe4\xb3\xb6\x3c\xd1\x08\x62\x27\x83\x87\x49\x0a\x59\xb6\xb2\xaa\xbb\x8c\x19\x7d\xb7\x97\x32\x0d\xcf\xc4\x1f\x9a\xd1\x71\x95\x5f\x30\x17\x2d\x03\xd9\xc8\xa9\xe7\x16\xb3\x9a\xfc\xe3\x10\x2d\xfd\xfe\x8b\xf7\xa2\xf7\xcb\xe7\xee\x11\xc1\x13\x07\x0f\x1d\x51\xe1\x47\x0c\xa4\x15\xc5\x67\x79\x88\x9d\x94\xdf\x06\xf7\xdd\xd1\x52\x67\x2d\xc3\x87\x6e\x47\x5c\xe5\x9b\x69\xab\xbe\x36\xed\xe8\xee\xae\xa3\xd5\x9b\x36\x4b\x38\xfd\x43\x99\xaa\x4a\x09\xdf\xaa\x15\xec\x95\x13\x8e\xa5\xc3\x16\x39\x16\x0b\x6c\x3c\xb5\x64\xf1\xd8\x3e\x0e\x1c\x69\xee\xae\x75\xd6\x27\xa0\x84\xa4\xf3\x37\x5c\x4b\x87\xee\x51\x0c\x8b\xe0\x70\xa1\x90\x0c\x1c\x78\x85\x7c\x19\xce\x35\xd8\xdb\xf8\x07\x29\x38\x25\xb8\x7f\x4c\x60\x4b\xb0\x7f\x49\xf6\x26\x7e\xbb\xf3\xd1\x4c\xde\x0f\xbe\xf7\xe0\x68\x17\xfc\x56\xa7\xdb\x86\x1d\xa9\x99\xc4\xd3\x1b\xe8\xe7\x6b\x49\x4b\xe0\x6f\x24\x2d\x1e\xc6\xa7\xb9\x9f\xeb\x38\xce\x9a\xbf\xaf\xeb\x70\x3c\x98\xd5\xa3\x20\x0e\x6a\xfb\x1b\x2e\x26\xf1\xa4\x0b\xec\xe9\xd5\x99\xbc\xec\x59\x7e\x73\xa1\xfe\x07\x00\x00\xff\xff\x45\xf5\x79\x0d\x73\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 883, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x8f, 0x37, 0xcb, 0xab, 0xde, 0xe5, 0xa2, 0x91, 0xc9, 0x97, 0x4d, 0x2d, 0xc3, 0x31, 0xf, 0x76, 0x59, 0x61, 0x77, 0xe0, 0xf7, 0xcb, 0xcc, 0x9b, 0x90, 0x68, 0x90, 0x5a, 0xfe, 0x7a, 0xae}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x92\xda\x38\x10\xbd\xf3\x15\x5d\xe1\xec\x98\x24\xb3\x53\xbb\xbe\x51\xe0\xd9\xa5\x2a\x80\x0b\x9c\x5c\x29\x8d\xdc\x80\x6a\x64\x49\xdb\xdd\x26\xc5\x7e\xfd\x96\x0d\x33\xd8\x8e\x67\x32\x7b\x58\x9f\x54\xea\xd7\xaf\x5f\xcb\x4f\xea\x31\xcc\x31\x58\x7f\x2e\xd1\x09\xfc\x30\x72\x84\x02\xf7\xaa\xb2\x02\x27\x65\x2b\xe4\xd1\x18\x16\xee\x40\xc8\x0c\x33\xef\x84\xbc\xb5\x48\xc0\x01\xb5\xd9\x1b\x7d\x05\x81\x22\x04\x15\x82\x35\x58\x80\x12\xa0\xca\x89\x29\xf1\xe3\xe8\xc9\xb8\x22\x69\x55\x18\xa9\x60\xbe\x23\xb1\xf1\x2e\xa9\x13\x38\x3e\x7d\x1a\x8d\xc1\xa9\x12\x41\xb9\xa2\x59\x70\x50\x1a\x1b\x46\x46\xe9\xb0\xd5\x55\x93\x11\x40\x20\xdf\x28\x9a\xa3\x2a\xac\x71\xb8\x45\xed\x5d\xc1\x09\xdc\x4f\x26\x23\x00\xc1\x32\x58\x25\x58\x43\x01\x9e\x93\x9a\x35\xd2\xc9\x68\x9c\x6a\xed\x2b\x27\x2b\x55\x62\x02\xe4\x2b\x41\xba\x02\xc6\xe0\x7c\x81\x5b\xb4\xa8\xc5\x13\x18\xfe\x49\xc3\x05\x17\xc8\x78\x32\x72\x9e\x59\xc5\x7c\xe1\xe1\x33\x0b\x96\x91\xb6\x15\x0b\x52\xa4\xc9\x88\xd1\xca\x5e\x13\xb4\x77\xa2\x8c\x43\xe2\x67\x2d\x00\x51\xd3\x6e\x4f\xc1\x45\x85\x29\xd5\x01\x5f\x2f\x5f\x7f\x0d\x24\xab\xac\xcd\xbc\x35\xfa\x9c\xc0\x62\xbf\xf2\x92\x11\x72\x7d\xce\x37\x9c\x20\x95\xc6\x29\x31\xde\x2d\x91\xb9\x4e\xba\x26\x3c\x28\x6b\x1f\x95\x7e\xca\xfd\x57\x7f\xe0\xb5\x4b\x89\x7c\x5b\x46\xf0\x24\x2d\xb9\x37\xc1\x47\x91\xd0\xda\x6e\x75\x97\x79\x92\x04\x7e\x9f\x74\xa2\x81\xbc\x78\xed\x6d\x02\xf9\x2c\x7b\x85\x8e\xdf\xe2\xbb\xbb\xfb\xf2\x9f\x08\x4b\x14\x32\xfa\x4d\xca\x4f\x7f\x7c\xb9\x7f\x17\xe7\x18\x96\x48\x87\x9e\xad\x6f\x61\x74\xa7\xa4\x83\x66\x51\xc2\x50\x31\xd2\x8b\xa9\x83\x62\xfe\xe1\xa9\x68\x3c\x7d\x40\x87\xa4\xa4\x43\x38\xd0\xc2\x36\x9f\xe6\xdb\x5d\xb6\xde\xe4\x1d\x95\xcd\x75\x4b\xe0\x43\x2d\xff\xc3\x40\xda\x66\xfd\x2d\x4f\x37\xbb\x6d\xba\xf9\xbe\x98\xa5\xbb\xd5\x74\x99\x6e\xb3\xe9\x2c\x1d\x22\xf1\x01\x1d\x1f\xcd\x5e\x22\x73\xb9\xe0\x03\x7c\xf3\xf4\x61\xfa\xed\x6b\xbe\x9b\xa5\x9b\x7c\xf1\xb0\x98\x4d\xf3\x74\x37\x5f\x6c\x86\xe8\x62\x14\x1d\x87\x27\x13\x8b\xe5\x38\x90\x39\x29\x19\x6a\xec\x99\x71\x9e\x6e\xf3\xc5\x6a\x9a\x2f\xd6\xab\xdd\x6c\xba\xcb\xa6\xf9\x5f\x83\xac\x27\x45\x31\x55\x2e\xd6\xde\xed\xcd\xa1\x54\x81\xe3\xeb\x2d\x8e\xb4\x6a\x2d\x3f\x6a\x6a\xbb\xde\x9a\x13\x3a\x64\xce\xc8\x3f\x62\xd2\x61\x36\xce\x88\x51\x76\x8e\x56\x9d\x5f\x5e\x8e\x4f\x5d\xcb\xd6\x96\xfc\x13\xa5\x9b\x08\x10\x94\x1c\x13\x88\x8f\xa8\xac\x1c\xff\xe9\x07\x87\x8c\x45\xa8\x0a\xf3\x7f\x0b\x89\xeb\x2a\xe7\xf7\xc9\x61\x5f\x91\x46\xee\x12\x12\xfe\x5d\x21\x0b\xf7\xcb\xe8\x50\xd5\x8a\x26\x65\x6f\xbf\xc4\xd2\xd3\x39\x81\xcf\xbf\xdd\x2f\x4d\x2b\x76\xf2\xb6\x2a\x71\x59\x3f\xae\xbd\x87\xa3\xac\xf7\xb2\x8b\xea\xb7\x8d\x02\x57\xa3\x5c\xc7\x50\xa4\x91\xa4\x1e\x35\x7d\x54\xdd\xf3\xda\xd9\x73\x02\x42\x15\xbe\x5a\xec\x4d\xff\x0c\x94\xbd\x05\xa3\xc7\xca\x15\xf6\x1d\x45\x2f\x5d\xbf\x34\x1c\xbd\xa3\x01\x46\x4d\xdd\xbf\x7a\x45\x2f\x7d\x81\x09\xdc\x7d\x9e\x74\x1e\x95\x6d\x03\xaf\xe7\x4c\x77\x26\x44\xed\xe7\x28\xfa\x65\x07\x97\x33\x58\xaa\xd0\x2e\x6c\x04\xcb\xde\xcf\x7a\xc2\x73\x9b\xa6\x77\xb5\x9e\xdd\xf7\x2a\xe0\xd7\x07\xe9\x43\x3d\x8e\x94\x4d\x60\xaf\x2c\xdf\x22\x3f\x1d\xc2\xbf\x01\x00\x00\xff\xff\x88\x0a\x20\xee\x9e\x08\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 2206, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x3, 0xe, 0x6e, 0xda, 0xa5, 0x5c, 0x83, 0x5c, 0x1d, 0x96, 0x75, 0xdb, 0x87, 0xf7, 0x77, 0xaa, 0x9c, 0xdc, 0x43, 0x33, 0xaf, 0x54, 0x72, 0x19, 0xf1, 0x6e, 0x81, 0xc, 0x46, 0x47, 0x66}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe3\x36\x0c\xbd\xfb\x57\x08\x93\xc3\x02\x0b\xd8\x41\x6f\x45\x6e\x45\x0b\xf4\xd4\x2e\x50\x14\xbd\xd3\x12\x63\xb3\x23\x8b\x02\x29\x65\xd6\xfd\xf5\x85\xfc\x31\xd9\x49\x32\x49\x76\x27\xa7\x58\x14\xf9\xde\x93\xf8\x11\x6d\xcc\xaf\x3e\x6b\x42\x31\xc2\x1e\xcd\x9e\xc5\xa4\x1e\x0d\x47\x14\x48\x2c\x86\x92\xa2\xdf\x37\xd5\xc6\xfc\xfd\xe5\xb7\x2f\x3b\xf3\x8b\xf1\x9c\x0c\xef\x8b\x97\xa2\xd1\x9e\xb3\x77\xa6\x45\x23\x18\x3d\x58\x74\xa6\x1d\x27\x28\x35\x14\x26\xa8\x00\x03\x6a\x04\x8b\x3a\xa1\xbf\xf4\x64\xfb\x6a\xf3\x96\x05\x6c\xca\xe0\xfd\x68\x02\xa2\x53\x03\xd6\xa2\x6a\x53\x3d\x53\x70\xbb\x55\xe0\x5f\xec\xb1\x82\x48\xff\xa0\x28\x71\xd8\x19\x69\xc1\x36\x90\x53\xcf\x42\xff\x41\x22\x0e\xcd\xf3\xcf\xda\x10\x6f\x0f\x3f\x55\x03\x26\x70\x90\x60\x57\x99\x49\xc1\xae\x90\x05\xed\x69\x9f\x6a\x0a\x9d\xa0\x6a\xbd\xd2\x57\xc6\x40\x08\x9c\x26\x0c\x2d\x11\xc6\x50\xb0\x3e\x3b\x6c\x04\x3d\x82\x62\xf3\x1a\x5d\xf0\xa9\x1d\x6a\xeb\x39\xbb\x7a\x80\x00\x1d\xba\x9d\x79\x4a\x92\xf1\xe9\x76\x68\xb9\xcd\x35\xaa\xee\xa9\xeb\x6b\x38\x00\x79\x68\xc9\x53\x1a\xbf\x03\x87\x42\xe7\xb1\x0e\xec\xb0\x76\x78\x40\x5f\x0e\xf3\x1a\x2e\xd9\xa3\xee\xaa\xda\x40\xa4\xdf\x85\x73\x9c\x4e\x55\x9b\xa7\x82\x2c\xa8\x9c\xc5\xe2\x62\xb3\x1c\xf6\xd4\x0d\x10\x75\x5a\x1e\xd3\x35\x2d\x15\xe5\x40\x16\xc1\x5a\xce\x21\xcd\x36\x0c\x2e\x32\xad\xab\xc5\x63\x5d\x58\xc1\x65\x23\xb2\x5b\xfc\x0f\x38\x3b\x1f\x50\xda\x55\xc9\xe7\xa7\xea\x5c\x1f\xc4\x49\xc5\x89\x42\x87\xd1\xf3\x38\xe0\xca\xe8\x00\x07\x0e\x8a\xf7\x61\x46\xf6\x64\xc7\x73\xd4\xc8\xce\x91\x4a\x8e\x25\xeb\x6d\x76\xdd\x9d\x78\x03\x07\x4a\x2c\x14\xba\xc6\xb2\x20\x6b\x63\x79\x38\x87\x5f\xae\x65\xf1\x3e\x41\xb6\x82\x90\x70\xfa\xec\x30\x4d\xbf\x39\xba\x62\x3a\xe7\x7b\xb7\xcc\x2f\xa4\x72\xee\x94\xa9\xfd\x4e\x0d\x2d\x05\x47\xa1\x9b\xed\x47\x8f\x93\xad\xeb\x1a\x3d\xe9\xfc\xf1\x02\xc9\xf6\xd7\x65\xaf\xcd\xf5\xa6\x6c\xcf\x25\x2f\xbd\x68\x39\x24\x61\xef\x51\xf4\x1d\xf3\x56\x13\xa4\x7c\x57\x86\x96\xe0\xe6\x4e\x09\x2e\xa8\xa0\x65\x59\xaa\xf5\xb8\xfc\x0e\xca\xb9\x89\x6e\x9e\x75\x2f\xa0\x49\xb2\x4d\x59\xf0\xcd\x41\xf1\x95\x7b\xf9\x82\x48\xa5\x82\xd6\xfb\x08\x98\x5e\x58\x9e\x4f\xb4\x94\xbc\xfc\xa0\x96\x23\xd3\x2d\x55\xdf\xf0\x9d\xe4\xff\x07\xa9\x97\xa2\x5c\xb3\x73\xbd\xec\x1e\xc4\x71\x31\x95\x6b\xed\x6e\xcc\x1f\x24\xc2\x82\xce\xec\x85\x07\x03\x5a\x66\xcb\x56\x38\x27\x94\xed\x80\x49\xc8\xea\x76\x81\xac\x4b\xc7\x34\x23\x0c\xfe\x42\xab\x96\x88\x1b\xca\x66\x54\x5d\x61\x2f\x24\xf4\xba\x9c\x3b\x64\x94\x61\x81\x21\x91\xbd\x3e\x2d\x12\x3f\x63\x10\x3c\x10\xbe\x5c\xce\xc1\x63\x94\xdc\x1e\x5b\x9a\xdb\x7f\xd1\xa6\xf9\x5f\xff\xa1\x82\x36\x06\x82\x33\xf8\x35\x42\x70\x25\x66\x79\xdd\x58\x08\x20\x63\x7d\x9c\x2e\xcd\x07\x72\x79\x22\xf5\xd3\xe7\x4f\x0f\xb8\xb8\xfb\xd9\x3f\x50\xd9\x77\xe8\x50\xb4\x59\x28\x8d\x37\xa4\xac\x6e\xe5\x46\xf1\x6b\xb2\x1c\x34\x09\xd0\xd9\xbf\x7e\x56\xfc\x26\xf8\xcf\xf2\xd4\x98\x37\x7a\xd6\xb4\xcc\xb8\x07\xa8\x76\xa4\x96\x0f\x28\xe3\xbb\x25\xf7\xfa\x84\xf1\xcb\xd3\xe5\xfd\x29\xf7\x7f\x00\x00\x00\xff\xff\xe4\xab\x25\xc4\x22\x0b\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2850, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0xfb, 0xbc, 0xfa, 0xf3, 0x4, 0xd1, 0x4a, 0x2b, 0xfc, 0xb0, 0x79, 0xe2, 0x0, 0x31, 0x70, 0x97, 0x7f, 0x8f, 0xf9, 0x1f, 0xb0, 0x40, 0xd, 0xfc, 0x6a, 0x95, 0xe3, 0x6f, 0x81, 0x5e, 0x87}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x6f\xe3\xb8\x11\x7f\xcf\xa7\x18\x78\x1f\xee\x25\x92\x2f\x97\xb6\x28\x0c\x14\x45\x90\xbd\x3d\x04\xdd\x4b\x17\x49\xba\x07\x74\x37\xc0\xd1\xe2\x48\xe2\x2d\x45\xea\x38\x94\x73\x4e\xd1\xef\x5e\x0c\x49\xc9\x92\x2d\x3b\x69\xb7\xc7\x27\x7b\x38\x1c\xce\xfc\xe6\xaf\x24\xd1\xaa\x8f\xe8\x48\x59\xb3\x02\xd1\x2a\xfc\xcd\xa3\xe1\x7f\x94\x7f\xf9\x33\xe5\xca\x2e\x37\x17\x6b\xf4\xe2\xe2\xec\x8b\x32\x72\x05\xd7\x1d\x79\xdb\xdc\x21\xd9\xce\x15\xf8\x16\x4b\x65\x94\x57\xd6\x9c\x35\xe8\x85\x14\x5e\xac\xce\x00\x8c\x68\x70\x05\xd2\x90\xc3\xc2\x3a\x49\xb9\x32\x95\x43\xa2\xdc\xb6\xe8\x84\xb7\x8e\x7f\x18\xaa\x55\xe9\x73\x65\xcf\x00\x84\x31\xd6\x0b\x96\x43\x7c\x1e\x40\x99\x42\x77\x12\x73\x87\x1a\x05\xe1\x84\x7f\xa9\xd6\x4d\x56\x68\xdb\xc9\xac\x11\x46\x54\x28\x57\xb0\xf0\xae\xc3\xc5\xcb\x47\x09\x75\xd9\x9f\xca\x6a\x55\xd5\x99\xd8\x08\xa5\xc5\x5a\x69\xe5\xb7\xff\x85\x1c\x65\x2a\x8d\x99\xb1\x12\x33\x89\x1b\xd4\x6c\xd9\x70\x9c\x5a\x2c\xd8\x8e\xca\xd9\xae\x5d\xc1\x4b\xd6\x33\x5c\xc9\xee\x08\xf2\xdb\xdb\xfb\xbb\x80\x5c\xa0\x69\x45\xfe\x6f\x53\xfa\x7b\x45\x3e\xec\xb5\xba\x73\x42\x8f\xb1\x0e\x64\x56\xaf\xd3\xc2\x8d\x36\xce\x00\xa8\xb0\x2d\xae\x60\xc1\xf6\xb5\x0e\x09\xdd\x06\xff\x61\xbe\x18\xfb\x64\xde\x29\xd4\x92\x56\x50\x0a\x4d\xc8\xac\xdd\xda\x25\x1f\x27\xcd\xc8\x0b\xdf\xd1\x0a\xfe\xf5\xef\x33\x80\x8d\xd0\x4a\x06\x7f\xc5\x4d\x36\xe8\xea\xc3\xcd\xc7\xcb\xfb\xa2\xc6\x46\x44\x22\x80\x44\x2a\x9c\x6a\x03\x1f\x2c\x06\xed\x41\x11\x08\x36\x06\xa2\x6a\x90\x1c\x02\xca\x80\xaf\x11\x9e\xad\x41\x02\xc9\xb1\x85\x12\xd6\x5b\x36\x22\x2f\xac\x29\x55\x35\xf5\x42\xa1\x3b\xf2\xe8\xd2\x6d\x00\x39\x03\x9f\xb7\xdd\x5a\xab\xe2\x9f\xd6\x20\x08\x23\x7b\xa2\x53\x1b\xe1\x91\xa9\x39\x7c\x36\x70\x1d\x8f\x82\x90\x8d\x32\xac\x80\x6a\x3b\x1d\x2c\x02\x5b\x82\xaf\x15\x0d\x52\x7b\x20\x58\x6d\x63\x3d\x50\xd7\xb6\xd6\x79\x94\x39\x3c\xd4\x8a\x26\xfb\xd6\xe8\x2d\x94\xd6\x81\x32\x1e\x9d\x11\x1a\x0a\xdb\x34\x9d\x51\x45\x90\x3d\xc8\xb4\x25\xfc\xbd\x45\x73\xcf\x96\x40\x1f\x17\x94\x2f\x12\x83\xdf\xb2\xa3\xec\xfa\x17\x2c\x7c\x22\xb5\x8e\xd9\xbc\xea\xfd\xc1\x6b\x94\xbb\x03\x6d\x0f\xf5\x6f\xd8\x2d\x91\x27\x21\x4a\x01\xe3\x4d\xa4\xa1\x04\x0a\x2e\xeb\xad\x06\x87\x21\x34\x8c\x9f\x2a\x9c\x94\x16\x26\x69\x95\xc3\x3d\x87\x8f\x23\xa0\xda\x76\x5a\x42\x61\xcd\x06\x9d\x0f\x2e\xad\x8c\x7a\x1e\x24\x13\x78\x1b\xae\xd4\xc2\x23\xf9\x89\xc4\x01\xa5\x8d\xd0\x1d\x9e\x07\x7f\x35\x62\x0b\x0e\xf9\x0e\xe8\xcc\x48\x5a\x60\xa1\x1c\x7e\xb4\x0e\x41\x99\xd2\xae\xa0\xf6\xbe\xa5\xd5\x72\x59\x29\xdf\x57\xab\x04\xb7\xdf\x2e\x0b\x6b\xbc\x53\xeb\x8e\x81\x5d\x86\x1c\x5d\x92\xaa\x32\xe1\x8a\x5a\x79\x2c\x7c\xe7\x70\x29\x5a\x95\x05\xc5\x4d\xa8\x3d\x79\x23\xdf\x0c\x61\xff\xcd\x48\xd3\xe8\x0f\xf2\x4e\x99\x6a\x20\x87\x5c\x3d\x8a\x3b\x67\x6c\x0c\xf4\x78\x2c\xea\xbf\x83\x97\x49\x8c\xca\xdd\xf7\xf7\x0f\xbb\x10\x9a\x04\x5e\xc0\x3c\xa0\xbd\x3b\x46\x3b\xe0\x19\x28\x65\x4a\x74\xd1\x71\xa5\xb3\x4d\x90\x88\x46\xb6\x56\x19\x1f\xfe\x14\x5a\xa1\x99\x82\x4e\xdd\xba\x51\x9e\x3d\xfd\x6b\x87\xe4\xd9\x3f\x39\x5c\x87\x12\x0c\x6b\x84\xae\x95\x22\x04\xf7\x8d\x81\x6b\xd1\xa0\xbe\xe6\xea\xf7\x7b\xc3\xce\x08\x53\xc6\x90\xbe\x0c\xfc\xb8\xd5\x4c\x19\x27\x19\x03\xd0\xd7\xe1\x59\x0f\xf1\x26\x3b\x88\x51\xe2\xdf\xaa\x4c\x49\x1a\x53\x01\x99\x5b\x39\x2e\x40\x58\x8b\x8d\xb2\x6e\xa0\x1b\x0a\x65\x2b\x7f\xe9\x7a\x08\x10\xb3\x8c\xb1\x12\x19\x0b\xb8\x15\x0d\x4e\x68\xb1\x12\x3e\x3c\xbc\x9f\xa3\x6e\xdb\x29\xb3\x17\xae\x42\x3f\x0e\x94\xb9\xea\x10\x2c\x8e\x57\x4d\x89\x7b\x40\x24\x9e\x1e\x8b\xda\x92\xe7\x8e\xd4\x9b\xbb\xab\xd3\x7b\x42\x66\x7d\x93\x3c\xa4\xcc\x7b\x34\x95\xaf\x57\x70\x31\xd9\x1a\xcc\x3c\xa9\xd1\xc0\xd5\xeb\x94\xfa\x44\xa0\x18\x60\xf8\x8d\xa4\x1c\x6e\x4a\x78\x46\x67\xcf\x93\xbb\x4a\xd1\x69\xbf\x27\x17\x58\xc4\xe5\xb7\x39\xdc\x0d\x32\x9f\x94\xd6\xd0\x07\x3b\xc5\xb6\x73\xf5\x13\x1b\x59\x71\x34\xc2\x95\x56\x5c\xb4\x22\xc6\xe7\xb0\xee\x0e\x65\x06\x11\xa3\xe3\xd7\xb7\x57\x3f\x7e\xbf\x3b\xd2\xa2\x0b\x12\xaf\x3e\xdc\x40\xc8\x07\x51\xf8\x7c\x16\x3d\x2e\x80\xd5\xa8\x83\xc5\x55\x5a\xd7\x08\x1f\x76\xff\xf4\x87\x43\x68\x55\xd3\x35\x2b\xf8\x76\x0e\x58\x16\xfa\x0a\x64\xb7\xed\xe0\xee\x51\x1b\x66\x95\x72\x78\x67\x1d\xe0\x6f\xa2\x69\x35\x9e\xc3\xe2\x6a\x01\x76\x5f\x3d\x80\x45\x30\x78\x31\x6f\xd3\x6c\x44\xa0\xe9\x9a\x7d\xcd\xb2\x88\xdb\x01\xf5\x6a\x42\x49\xa8\x9e\x34\x2b\xf1\x80\x70\x43\xac\x24\xd2\xbc\x8a\xc2\x39\xb1\x3d\x04\xf6\xc6\x63\x43\xfb\x21\x0b\xa0\x02\xf9\x00\x84\x59\x6b\xd3\x98\x74\xb4\xe8\x84\xed\x1e\xfb\xc6\x52\x68\x98\x68\xbc\xde\x82\x5d\x87\x89\x4c\xf6\x4c\xbb\x72\x73\xf7\xda\x7a\x73\xac\x0c\xf4\xa2\x7f\x40\xc3\xa3\xc6\xde\xc0\x70\xa0\xe5\x21\xfb\x0b\x1a\x57\x03\xe3\x01\x4a\xbb\x2a\x92\xac\x00\xf8\xa9\x46\x33\x25\xb2\xf8\xd4\x77\x62\x32\x87\xac\xb1\x5a\xa3\x4b\x74\x3a\x84\x3f\xb0\x39\x87\xd4\x5a\x23\xb9\x9d\x26\xcf\x2b\x03\x28\x8a\x7a\x98\x2a\x9f\xc3\xcc\xc7\xc5\x42\x98\x24\x2d\x8c\x68\xe2\x40\x64\x2b\x9c\x57\x05\x0f\xce\xe1\x10\x94\x42\x69\x62\x85\x84\x0f\xbf\x3b\x17\xd2\x26\xde\xb3\x9b\x57\x93\xbf\xb8\x28\xa9\x59\x0c\xf8\xb6\x7e\xb0\x05\xb2\x51\xe0\x9e\x99\x85\xe0\x01\xcd\xa3\x6b\x94\xc1\xc8\xa1\x3c\x18\x44\xc9\x0d\xfa\x40\xa4\x43\xef\xb6\x41\xc6\xc8\xa2\x70\xaa\xef\x65\xd1\xee\xff\x4b\xd5\x09\x03\xf9\xc9\x88\x89\x23\x3b\xa7\xdf\x08\x90\xe4\xfa\x3d\xb7\x1c\x57\x6b\x2e\x2b\x8f\xe4\xde\xe4\xf2\xb7\xb7\xf7\x3c\xd7\xdf\x4f\x72\x6b\xa7\x83\xe8\x35\x78\x52\xbe\x56\x86\x27\xb2\x04\xd1\x81\x58\x98\xd5\xee\x68\xba\xc5\x75\x2c\xe9\xe2\x1a\xa2\x62\x76\x77\xff\x19\x69\xc7\x1d\xc0\x14\x66\x0b\x63\x12\x91\x2d\x14\x67\x49\xb0\x85\xed\x9c\x95\x09\x23\xcc\xfb\xb8\x0b\x4f\x3d\x37\x25\x84\xa7\x23\xaa\xfb\xf1\x33\x31\x0e\x91\x8e\xf0\x79\xf1\x4e\x28\x8d\xf2\xf3\xe2\x88\xec\x41\xa1\xa1\x0d\x12\xfa\xa8\x10\x43\x2d\xc8\x9a\x38\xc8\x23\x91\xa8\x30\x59\xb8\x4e\x37\x1e\x13\x2a\x3a\x1a\x46\x8e\x94\x6b\xf9\xbc\x06\xc7\x83\x25\xae\x23\x21\x33\x03\x77\x0a\x9c\xeb\xc1\x20\x45\xf0\x4b\x47\xbe\x0f\x20\x23\x85\x93\x27\xf2\xba\x5f\x65\x78\x7a\x3e\x0c\x9b\xb1\xbe\x47\x82\x27\xae\xb9\x39\x71\xbc\xb2\x14\xce\x47\xb7\xfd\x74\x44\x1c\xaf\xd3\xe1\x19\x97\x16\xe4\x1f\x9c\x30\x14\xec\x7c\x50\x87\x13\xe3\xa1\x41\xb3\x6d\x7e\xbc\xfa\x7a\xc2\xe5\x29\xf3\xaa\x39\xa6\x20\xf4\x91\xf2\xd5\x77\xc6\xe0\xfb\x6a\x31\x87\x3d\xfc\x7f\x12\x73\x62\x0c\x3e\x90\xf5\xbb\xdf\x25\x0d\x71\xa8\xbf\xa2\x06\x25\xce\xbe\x8e\x86\x9e\xf5\x54\x63\x2a\xed\x6e\xe8\xd7\xa9\x90\xa0\x9c\x8f\xfb\x17\xa3\xfe\xe5\xb8\x54\x47\xf3\x61\xbf\x6c\x2a\xd9\xab\xab\x24\x3f\x54\x96\x0a\x53\x37\xe4\xb6\xda\x0f\xea\xde\x42\xa9\xcc\xfe\x63\xcc\x44\xe9\x34\x10\xf3\x33\xd0\x30\x39\x7c\x36\x60\xe3\x13\x42\xc0\x22\x49\x2c\xd1\x17\x35\x4a\xe8\xe8\xb4\x5f\x7e\xbe\x79\xfb\x33\x08\x02\x15\xaa\xf1\xa7\x8b\xc7\x20\xec\x99\x47\x89\xa3\xe2\xc2\xa1\x13\x32\x05\x81\x80\xd6\x61\x36\x0c\x0c\x32\xbc\x44\x0c\x37\x7c\xf7\x78\xce\x57\xfc\x70\xfd\x61\xee\x82\x13\x52\x77\x57\x9f\xbe\xe0\xf2\x31\x60\xf2\xe9\xe2\x71\xf7\x2a\x40\xda\x82\x72\xf1\x44\xb9\x68\xc4\xb3\x35\x79\x61\x9b\x65\xa1\xd5\x32\xbe\xf3\x59\x3a\x2c\xd1\xa1\x29\x70\xe9\x6c\xe7\xf1\x8f\x97\xcb\x0a\x7d\x16\x51\xce\x02\xca\xb5\x6f\xf4\x1b\x1b\xfc\x79\xac\xca\xf1\xfa\xf4\xdd\xfe\xa5\x8d\x2a\x9c\x25\x5b\xfa\x70\x27\x9a\xac\xa3\x70\xb3\x60\x88\x97\x06\xfd\x93\x75\x5f\x96\xd2\xd0\x92\xef\xf9\xeb\x46\xe1\xd3\x5f\xc2\x5e\x56\x68\x95\x45\xfd\xde\x88\xe7\x2c\x71\x66\xd2\x50\xd0\x28\xa3\xda\x3e\x9d\xd2\xe4\x72\xa4\x49\x78\x1b\x9d\x57\xd6\x56\x1a\x83\x1e\x7c\x1f\xab\x37\xb2\x7c\x73\xb1\x4c\x13\x29\xa7\x17\x31\x02\xc7\x3a\xec\xab\x92\xde\x8b\xea\x44\x8d\x9a\xe6\x07\xf3\xee\xa7\xc2\xaf\x1d\xa6\x09\x72\x3f\xe2\x4f\x58\x3d\xe4\xc2\xf9\xf0\xce\x2a\xbc\xe4\x26\x2f\xaa\x4a\x99\x4a\xb4\x2a\xc4\xf8\x7e\xda\x71\xf0\x9d\x0a\xe8\x18\xaa\x29\x02\x1f\x44\x45\x21\x06\xbd\xa8\xb2\x52\x69\x8f\x8e\xce\xbf\x22\xe4\x8e\x28\x1a\x62\x70\x78\xdd\x37\x89\xc0\x97\x1c\x73\xb2\x99\x03\x08\x19\x07\x06\xa1\x3f\xbc\xa2\xf9\x1e\x78\x7b\xd3\x7f\x8f\xd9\x5c\xec\xfe\x05\x01\x59\xfa\xb4\xb2\x89\x25\x3e\x3e\x7d\xad\xc0\xbb\x0e\xd3\x4b\x7a\xeb\xb8\x91\x46\xca\xae\x8f\x89\xa2\xc0\xd6\xa3\xbc\xdd\xff\xd2\xb0\x58\x4c\x3e\x23\x84\xbf\xa3\x89\x15\x3e\x3d\x9e\x45\xa9\x28\x3f\xf6\x7a\x30\xf1\x3f\x01\x00\x00\xff\xff\xed\x66\x7d\x53\x36\x1a\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 6710, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0x2d, 0x51, 0x79, 0xd6, 0x29, 0xca, 0x7, 0x82, 0x68, 0x52, 0x1a, 0xaf, 0x4c, 0xea, 0x5b, 0x9, 0xfd, 0xef, 0x47, 0xda, 0x8f, 0x6b, 0x79, 0xc6, 0x13, 0xc4, 0x8f, 0xfe, 0xfb, 0x23, 0xc6}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xbd\xff\x77\x1b\x37\x92\x20\xfe\x7b\xfe\x0a\x7c\x98\xf5\xc7\x52\x22\x52\x96\x1c\xe7\x32\x9a\xbd\x9d\x27\xcb\x4e\xec\x37\x8a\xac\x33\xb5\xc9\xec\x58\x1e\x1f\xd8\x0d\x92\x58\x35\x01\x0e\x80\x96\xcc\x7c\xb9\xbf\xfd\x1e\x0a\x40\x37\xba\x09\xa0\x41\xd9\xde\xd9\x37\xe7\xde\xb7\x13\x99\x8d\x2e\x00\x55\x85\xaa\x42\xa1\xaa\x80\xd7\xf4\x27\x22\x24\xe5\xec\x04\xe1\x35\x25\xef\x15\x61\xfa\x5f\x72\x72\xf3\x9d\x9c\x50\x7e\x78\x7b\xf4\xc5\x0d\x65\xe5\x09\x3a\xab\xa5\xe2\xab\xd7\x44\xf2\x5a\x14\xe4\x19\x99\x53\x46\x15\xe5\xec\x8b\x15\x51\xb8\xc4\x0a\x9f\x7c\x81\x10\x66\x8c\x2b\xac\x7f\x96\xfa\x9f\x08\x51\x56\x54\x75\x49\x26\x82\x54\x04\x4b\x32\xe1\x6b\xc2\xe4\x92\xce\x95\x86\x4d\x67\xab\x71\x51\xf1\xba\x1c\xaf\x30\xc3\x0b\x52\x9e\xa0\x91\x12\x35\x19\x0d\x7f\x2a\x49\x35\x77\x5f\x8d\x97\x74\xb1\x1c\xe3\x5b\x4c\x2b\x3c\xa3\x15\x55\x9b\x1d\xe0\x50\xb6\xa8\xc8\x98\xf1\x92\x8c\x4b\x72\x4b\x2a\xbe\x26\xc2\xfb\x9c\xe1\x15\x39\x41\x94\x2d\x04\x91\xb2\xe0\x4c\x09\x5e\x55\x44\x48\x0d\x45\x60\xc5\x45\x07\xdc\x17\x72\x4d\x0a\x3d\xf1\x85\xe0\xf5\xfa\x04\x85\x1b\x19\xa8\x16\x41\x06\xb9\x2f\x4d\x07\x67\x4d\x07\xf0\xae\xa2\x52\xfd\x39\xfc\xfe\x9c\x4a\x05\x6d\xd6\x55\x2d\x70\x15\x1a\x22\xbc\xd6\xf3\xab\x2b\x2c\x02\x0d\xbe\x40\x48\x16\x7c\x4d\x4e\xd0\x85\x1e\xce\x1a\x17\xa4\xfc\x02\xa1\x5b\xc3\x0e\x30\xbc\xb1\x9d\xff\xed\x91\x01\x56\x2c\xc9\x0a\x9b\x71\x23\x3d\x39\x76\x7a\xf9\xf2\xa7\xc7\xd3\xce\xcf\x08\x95\x44\x16\x82\xae\x15\x30\xd5\x68\x6b\xe8\xf6\xfd\x8c\x48\x84\x91\x25\xa1\x1b\x1d\x6a\x87\x87\xe6\x5c\x34\x20\x11\x52\x4b\x82\x8a\xaa\x96\x8a\x88\x09\xba\xd2\xff\x68\x5b\x16\x98\x21\x49\xc4\x2d\x2d\x08\x7a\xb5\x26\x6c\xaa\x31\x8d\x5e\xf3\x5a\x11\x84\x59\x89\xfe\x5c\xcf\x88\x60\x44\x11\xe9\x10\xe9\x01\x16\x96\xa3\xe5\x04\x5d\x33\xf4\xf3\x92\x30\x84\xd9\x36\xc2\x11\x95\xa8\x10\x04\x2b\x52\x1e\x20\x8c\x18\xb9\x0b\x8c\xd9\x03\x5b\x92\x75\xc5\x37\x2b\xc2\x94\xf7\x25\x52\x1c\xe1\xaa\xe2\x77\x48\x2f\x34\xc1\x70\x85\x94\xc0\xf3\x39\x2d\xf4\x1b\x41\x70\xb1\x84\x89\xda\xc9\x48\xa4\x96\x58\x79\x40\xc9\xfb\x35\x97\xc4\x0d\x0e\x71\x61\x27\xe9\xcd\xe1\xdf\xd7\x25\x56\x94\x2d\x90\x5a\x52\xd9\xbc\x40\x2b\xbc\x41\x15\xc1\x30\x82\x92\x4a\x51\x03\x79\x3c\xd0\x73\x2e\xd0\xba\x9e\x55\xb4\x40\x73\x5c\x68\x00\x8c\xa8\x3b\x2e\x6e\xf4\xf4\x18\x29\x60\x4d\x23\x2c\xa3\x73\x47\x82\xdc\x52\xd9\x05\xaa\x7b\x9d\x11\x04\x0d\x4a\xc4\x6b\x05\x38\x5e\x2a\xb5\x96\x27\x87\x87\x37\x0d\x59\xf4\x4a\x2c\x79\x21\x0f\x0b\xce\x0a\xb2\x56\xf2\xd0\x61\x60\x6c\x47\x41\xd9\xe2\xd0\xf6\x39\xee\xf3\xb8\x79\x2c\xf1\xc8\x2d\x11\x68\xcd\xa5\xa4\xb3\x8a\x1c\x20\xa9\xc5\xd9\xac\x22\xa8\x24\x73\x5c\x57\x4a\xc2\x44\x35\x8e\xd7\x15\x56\x73\x2e\x56\x08\x0b\x82\x6a\x49\xca\x09\x9a\x12\x82\x34\x0d\x7c\xb4\x50\x52\x95\xf0\xcd\x8a\x0b\x0d\x45\x61\x5a\xc9\xc9\xa8\x69\xb2\x16\x7a\x91\x2b\xea\xd6\xb3\x79\x3c\xb1\xea\xfd\xda\x5b\x1a\x0f\xf5\xea\x31\xad\xf4\xf0\x28\x03\x82\x13\xb7\x02\x49\x69\x17\x1c\xe2\x73\x47\xcd\xb5\x20\x92\x30\x23\x61\x3b\x80\x91\x6e\x84\x19\xe2\xb3\xff\x24\x85\xd2\x53\x11\x1a\x0c\x92\x4b\x5e\x57\xa5\x26\xd3\x2d\x11\x0a\x09\x52\xf0\x05\xa3\xbf\x34\xb0\xa5\x66\x08\xdd\x69\x85\x15\x91\xaa\x07\x93\x32\xcb\xa5\xb7\xb8\xaa\xc9\x01\x2c\x26\x4d\x53\x41\x74\x2f\xa8\x66\x1e\x3c\x68\x22\x27\xe8\x47\x8d\x27\xca\xe6\xfc\xa4\x21\xf4\x82\x2a\xa7\x4e\x0a\xbe\x5a\xd5\x8c\xaa\xcd\x21\x50\x91\xce\x6a\xc5\x85\x3c\x04\xd1\x7b\x28\xe9\x62\x8c\x45\xb1\xa4\x8a\x14\xaa\x16\xe4\x10\xaf\xe9\x18\x86\xce\x80\xfd\x26\xab\xf2\xcb\x86\xd5\x1f\x76\xc6\xaa\x36\x5a\x90\x49\x25\x28\x5b\x78\x2f\x40\xba\x26\x28\xa0\xa5\xab\x5e\x9f\xd8\x7e\x6a\x66\xd1\x22\xda\x2c\x24\x82\x5e\x3f\x9f\x5e\xb5\x8b\x49\x13\xa3\x8f\x7d\xc0\x7b\xfb\xa1\x6c\x49\xa0\x11\x46\xd9\x9c\x08\x43\xc4\xb9\xe0\x2b\x80\x49\x58\xb9\xe6\x94\x29\x2b\xda\x28\x61\x7d\xf4\xcb\x7a\xb6\xa2\x4a\xd3\xfd\xef\x35\x91\x4a\xd3\x6a\x82\xce\x40\xc7\xea\x65\x55\xeb\xa5\xae\xf9\xf6\x25\x43\x67\x78\x45\xaa\x33\xad\xde\x3e\x35\x01\x34\xa6\xe5\x58\x23\x36\x8f\x04\xbe\x79\xd0\x6f\x6c\xb0\xe6\xbd\x70\xfa\x33\x42\x2f\xfd\x5a\x93\x0b\x64\xe4\x9a\x14\x74\x4e\x0b\x58\x0b\x66\x89\xe8\xf5\x29\xa9\x20\x25\x9a\x91\x25\xbe\xa5\x5c\xd8\xdf\x7b\x78\xdd\x12\xee\x93\x4e\x83\xf0\x92\x36\x83\x01\x21\x72\xa6\xdf\x42\xd7\xa4\xdf\xa2\xaf\xfd\xb6\xbf\x30\xec\x26\xc8\x9c\x08\xc2\x34\x33\x71\xcd\x7d\xa4\x10\x44\x81\x34\xc5\x94\x75\x11\xd8\xa0\x6c\xd9\x48\x31\x54\x78\xf0\xb4\xa8\xd4\x53\xde\x40\x8b\x6d\xc1\x3c\x31\x4a\x0d\x34\x45\x9f\x6d\x61\xc0\x9c\x3d\x54\x16\x9d\x00\x83\x0a\xc4\xef\x98\xdf\xc7\x41\x60\xe6\x7a\x1e\x20\x36\x03\x20\xaf\x19\xa8\x68\x3b\xab\x55\x2d\x9b\xa9\xc1\x18\xe7\x5c\xeb\x40\xbd\xb6\x6e\xc8\x46\x82\x54\x01\x0e\xd1\xdf\x21\xa4\x2a\x39\x29\x84\xda\xc6\x2c\xea\x4c\x7b\x4e\x2b\x63\x04\xe8\xd5\x66\x3f\xbb\x21\x9b\x13\x0d\xb3\xf7\xf2\x9a\xa1\x97\x73\x54\x33\x49\xd4\x41\x00\x2a\x46\x77\xb4\x2a\x0b\x2c\xca\x4e\x07\x9a\x4e\xb5\xe2\x2b\xac\x68\x81\xab\x6a\x83\x16\x84\x69\x73\x8e\x94\x30\x62\xa3\x32\xae\xb6\x98\xab\x3f\x4e\x2a\xb5\x50\xa1\x65\xa3\x78\x02\xaa\xb3\xe4\x2b\x8d\x9b\x3d\x0d\x57\xd6\x33\xf3\x4f\xb9\x1f\x1a\x2b\x2b\x01\x48\x3b\x16\xaf\xaf\x87\x12\x9d\x9d\xea\xc9\x54\x5a\x3c\x74\x07\xaf\x45\xf9\x02\xbe\x08\x40\xbd\xa3\x6a\xe9\x5b\x58\x0f\x25\x52\x42\x53\x4d\x2a\x2e\xc8\xc4\x22\x30\x8a\xa7\x00\x44\x8d\x1d\x18\xac\x5c\x62\x61\xb8\x73\x55\x57\x8a\xae\x2b\x82\x5e\x5c\x5d\x5d\x1e\x1e\x23\xc2\xf0\x4c\x9b\x05\x02\x18\x13\xed\xdd\x2d\x69\xb1\x44\x74\xb5\xae\x68\x90\x4f\x4f\xcf\x2f\x2f\xf6\xf5\x28\x99\x95\x96\x12\xed\xd1\x09\x99\x1c\x20\xbd\xe7\x98\x55\x1b\x34\x13\xfc\x4e\x12\x21\xf7\x41\xa7\x63\x85\x2a\x3a\x23\x42\x6d\x8c\x71\x55\xcb\x10\xa9\xb4\x15\xeb\x9b\x38\x9a\xa4\x54\xa2\x15\xc1\xda\xdc\xb1\x3d\x81\x85\x09\x10\xf4\x4f\x4d\x63\xa4\x78\x90\x44\x5c\x2d\xb5\x3d\xd4\xd8\x9f\xda\x8a\xd3\x7c\x50\xd1\x1b\x52\xc1\x68\xe6\x98\x56\xb6\x27\x2b\xaa\x6a\xb0\x30\x0d\x59\xab\x6a\x13\x80\x7b\xc3\xf4\xaa\xc4\xd2\x1f\x40\xc1\x71\x45\xa4\x36\xd7\x26\x6e\xd1\x51\x36\xd6\xe3\xf4\x29\xb4\x77\xb7\x24\x7a\x48\x01\xa0\x2d\x1f\x71\xa1\x89\x26\xc6\x56\xae\x92\x72\x7f\x90\x93\x80\x6f\x02\x40\x1b\x1b\xfc\xa1\x44\xb3\x9a\x56\x6a\x4c\x19\x7a\x75\x5a\xab\xa5\x11\x56\xc2\xb3\x9f\xdc\x13\x17\xba\xfa\x81\x6d\x48\xe0\xf7\xbe\x3e\xd7\x3b\x19\xa7\x0b\xac\x88\x55\x41\x8d\x98\xb2\x3d\xf9\xad\x36\x3e\xc9\xdd\xa1\x35\x3c\xc7\x7a\x9a\x63\xa3\xab\xe4\x21\xec\xdd\x0e\xbf\x84\xff\x04\x47\x84\xd0\xd5\xab\x67\xaf\x4e\xd0\x69\x59\x22\xc3\x09\xb5\x24\xf3\xba\x32\xb6\xa4\x9c\x78\xc6\xe1\x01\x18\x28\x07\xa8\xa6\xe5\x9f\x1e\x06\x81\x45\x94\xaa\xff\x72\x4b\x89\x02\x5a\x40\x84\x0c\x6a\x27\x23\x77\x40\x23\x3d\xbb\x98\x02\x9a\xdd\xe6\x23\xa1\x51\x22\x72\xc9\x2a\x04\xcd\xdf\x05\x67\x73\xba\xa8\x05\x69\x57\xfd\x9c\x60\x6d\x52\x48\x90\xf2\x5f\xa1\xef\xad\x34\x3c\xe7\xb8\x7c\x8a\x2b\xcc\x0a\x22\xa6\xa6\xe7\x00\xf8\xc6\x56\x82\x2d\x8a\x5c\x6a\xdd\x21\x95\x66\xc2\xc5\xe6\x00\xb5\xd3\x40\x81\x11\x3c\xbb\x98\x06\x20\x6a\xcb\x55\x94\xd2\x1a\xfd\x16\xfc\x65\x03\x7d\x6a\x81\x4f\xcc\x68\x41\x83\xd6\x7a\x33\x8d\x70\xbb\x66\x42\xca\x74\x5b\x41\x1f\x18\xc9\xea\xad\x47\xb7\xae\x8c\x5e\x30\x7b\x2f\x33\x87\x18\x66\x95\xf4\xf4\x82\x19\xf3\xb6\x46\xb6\x63\xd5\x42\xc0\x98\xb1\x54\x3a\x7c\x05\xc7\xaa\x38\xa2\xac\xa4\xb7\xb4\xac\x71\x65\x77\x92\x52\x61\x55\x4b\x22\x91\xe4\x46\x6c\x11\x56\x6a\x79\x22\xa4\x95\x40\xe8\x6e\x49\x04\x58\x2d\x0a\x8b\x05\xe9\xf3\x1d\x10\xcb\xed\x6d\x35\x4b\x35\x78\xbe\x66\x8e\x4e\x60\x0f\x68\xfb\x95\xd1\xbf\xd7\x04\xe1\x15\xd7\x68\xad\xaa\x6d\xbb\x4c\x06\xd5\x35\x2b\xb5\x3c\xee\x1b\xc1\x46\x47\x91\xd5\x5a\x6d\x0e\xda\xdd\x1e\xcc\x11\xa0\x4e\x0c\x47\x74\xdd\x3f\x56\xdf\x05\x7a\x99\x68\x39\x38\x31\x23\x0e\x88\xab\xc4\xba\x8c\x33\xd3\xd0\x72\x8c\x7f\xe9\xaf\x2d\x4b\x52\x7f\x6d\x86\x4c\x90\xd6\xba\x70\x60\x01\x1b\x46\x22\xd9\x5d\xb5\x3c\xb0\x5a\x18\x55\x1c\x97\x68\x66\xd7\x61\x23\xe2\xb5\x42\x0c\x91\x80\xa8\x62\xd2\xb1\xaa\x3a\xc6\xa9\x56\x6a\x58\x0f\x96\x33\x2d\x75\x05\x96\x4a\xd4\xb0\x9f\xd8\x99\x06\xc0\x8d\x13\xb7\x55\xb7\x06\xe2\xe9\xcf\xd3\x13\xd3\x20\x20\x3c\xd0\x1e\x18\x33\xcf\x2d\x0f\x06\xa0\x82\xd3\x6b\x5f\xc3\xf9\xa5\x16\xe4\x24\x0f\x4e\xfb\xd5\x0f\x67\x97\x21\x4d\x74\x9d\x39\xa0\x16\xd0\xcb\xa7\x3f\x9e\x55\xbc\x2e\x4f\x32\x65\x60\x0c\xce\x39\x9d\xdd\x52\xa1\x4e\x10\x7a\xc1\xa5\xba\xb0\x5e\x9b\x6b\x86\x4e\xd9\xc6\x92\xdb\x21\x30\x24\x04\xf4\x76\x0e\xed\x19\x27\xa9\x96\x6f\x17\x9c\x91\xfd\x86\x96\x8a\xfb\x50\x81\xe8\x71\x2e\x0d\xb1\xe1\xd6\x42\xdd\x55\xf5\x2f\xdb\xee\x33\x2c\x00\xaf\x35\x5a\xf2\xaa\x94\x68\x8d\x05\x5e\x11\xa5\x25\x98\xb3\xc0\xbd\x19\x45\x34\x78\x4a\xdf\x4c\xd0\xa5\xd9\xe3\x23\xce\xb4\x39\x34\x07\x1c\x6a\xae\xf7\x31\x95\xd0\xe6\x41\x85\xad\x9f\xca\xe3\x83\x8c\xb9\xfa\xcd\xe3\x93\xed\xac\xec\xf0\xb0\x50\x74\x46\x01\xce\x0c\x83\x48\xd3\x50\x3f\xe0\xf7\x24\xe5\x14\x5c\x28\xaf\x31\x5b\xc4\x9b\xf6\xe6\x19\xf8\xd2\xed\xfe\xc1\x87\x5c\x51\xa9\xb4\xd1\xf7\xf2\x12\xe1\xb2\x8c\xc8\x43\xf7\x08\xf3\xbd\xe2\xc8\xec\x37\x70\x51\x68\xe3\xc6\x79\xc1\x3a\x62\xd0\x3a\xcf\x66\xe0\x60\x55\x82\x16\xa0\x68\xd0\xf3\xae\x8b\x30\xd8\x43\xa3\xe4\x1a\x73\xda\x9a\x0f\x67\x2f\x9f\xbd\x46\xee\x90\x04\xed\x91\xc9\x62\x72\x80\x46\x47\x8f\x26\xf0\x7f\x87\xdf\x8d\xf6\x27\x08\xbd\x9c\x27\xe0\x1b\x2f\x12\xf8\x25\xa9\x74\x0a\x4f\xab\x4f\xeb\x9d\xb2\x38\xd0\xa8\xd1\xbb\x20\x83\x3c\xbb\xbd\x4a\x80\xd5\xb0\xfe\x5e\xd3\x5b\x5c\x69\x46\x50\xdc\x79\x04\xf4\xa0\x47\x6e\x78\x8f\x46\xfb\x31\x16\x42\x88\x2a\xb2\x4a\xd0\xb4\x47\x55\x40\x84\xb6\x3c\x99\x47\x38\x8b\x3c\xca\xba\x78\x4a\xc0\x44\x68\x4f\x73\x3a\x79\x8f\x57\xeb\x8a\xf4\x51\x99\xf8\x70\x8d\x95\x96\xa4\x27\xe8\x6f\x7b\x7b\x6f\x1e\x8d\xff\xf0\xf6\x37\xf8\x5f\xf3\xe7\x91\xf7\xf7\xf1\x9b\x47\xe3\x6f\xdc\xdf\x4f\xde\x3c\x1a\x3f\x79\xbb\x7f\x3d\xd9\xff\xf5\xf1\xef\xbb\x7f\x77\xe8\x3e\x39\x3a\xb6\x6f\x1e\xbf\x79\x34\x3e\x7e\xbb\xff\x2f\x29\x82\xa7\xf6\x00\xee\x61\x75\x55\x69\x4d\x7e\xa2\x77\xee\x21\xf5\xe1\xc3\xc2\x42\xe0\x90\xb4\x46\x66\x25\xdf\xd2\x92\x88\xcb\x46\x94\x64\x2e\xd3\xd1\xf6\x97\x56\x2a\x39\xaf\x5c\x67\x75\xa5\x58\x91\x69\x65\x65\x56\x88\x73\xf3\xb9\x15\x5a\xb3\x92\x88\x0a\xb8\xb2\x6b\x5b\x34\x03\x4f\x11\x3d\x6c\x24\x36\xfb\xdc\xf5\xba\xa2\xee\x20\xa0\xe9\x78\x7b\x5a\x89\x0e\xcc\x1e\xcf\x58\xf4\xe6\xac\x00\xe1\x19\xaf\x95\xf5\xab\xb9\x2e\x03\x5a\xd0\xc3\xff\x80\x24\xd5\x0f\xbe\x4b\xbe\xee\x93\x06\xdf\x49\x37\x0f\xd9\x6c\x8d\x2c\x82\x89\x52\x94\x2d\xb6\xce\x9a\x82\xbd\x0a\xd2\x21\xc8\xe9\xcf\xd3\x2e\x51\x65\xc4\x0e\x1f\x80\x9b\x26\x80\x1e\xfc\x36\x5e\x87\x86\xba\x1b\xd6\x51\x36\xe6\xf5\x53\x54\x58\x4a\x5a\x9c\x0f\xea\x6b\xff\xe9\x50\x24\x00\x61\x6b\xd9\x74\xe8\x34\x08\x1e\xf5\x95\x3f\x66\x40\x1f\xdb\x53\xcf\x0e\x70\x1a\x3f\x03\x6c\xdf\x26\x38\x33\x00\x53\xcb\xcc\x3c\x03\xd6\x8e\xff\xd8\xfd\xc8\x07\x20\x34\x00\xe1\x13\x21\xd4\x9d\x8b\x7e\x34\x84\x5e\x9c\x3f\xfd\xa8\xc8\x84\xa6\xbb\x61\x6f\xe4\xc6\xa2\x45\x2c\xfc\xcd\xe7\xdb\xab\x3b\x63\x6e\xb0\xdf\x96\x0a\x33\x45\xc1\x49\x6f\xd0\xb6\x15\x7b\x00\x62\xe2\x27\x5c\xd1\x90\x5f\xa2\xff\x98\x93\x45\x2d\x7c\xac\xef\xe8\x7a\x64\x79\xf0\x7a\x74\x82\x4e\x1d\x43\x82\xb1\x8a\x9e\xee\x30\xd6\x25\x56\x68\x85\x6f\x88\x04\x5f\xad\x56\x29\x25\x29\xe0\x0c\x5b\x22\xac\x10\xa1\xb0\x79\x32\x27\x2f\x4a\x60\x26\xd7\x5c\xe4\x10\xb8\xc2\x1b\x22\xd0\xde\xd5\xd9\xe5\xe1\x74\x7a\xbe\x8f\xac\x25\x0e\xd2\xcd\x9e\x57\xd9\x26\xe0\x0a\xd7\xff\x33\x4d\xda\x2a\xee\xd1\x62\x11\xf5\x8e\x50\x00\xc5\x65\x09\xb1\x38\xb8\x72\xd2\xd1\x6e\x95\x51\xe3\xf0\x2c\x79\x21\x27\xf8\x4e\x4e\xf0\x0a\xff\xc2\xd9\xa4\xe0\xab\xc3\x53\xf8\xf3\xf9\xd9\xf4\xd0\x9c\xfe\x1e\x36\x11\x30\x8b\x9a\x96\xe4\x50\x13\x7f\xec\x88\x3f\x86\x9d\xe2\x64\xa9\x56\xd5\x97\x45\x35\xcb\x18\xad\xa5\xd5\xc5\xf9\x53\x43\x27\xb7\x2f\xeb\xd0\xc9\xa3\x42\x06\xc8\x20\x9d\x34\x3e\x50\x4b\xa0\x3e\xfa\x73\x11\xfb\x8f\x47\x2b\xab\x66\x69\x0d\x85\x60\x6b\x5a\xaf\x86\x57\xf7\xd8\xad\x8a\x8c\x96\x17\xe7\x4f\x33\xc5\xcf\x80\x0d\x8a\xc0\xaf\xfa\xf7\x5a\x1b\x7b\xe9\x21\x8e\x01\x60\xb2\x49\xa6\xc0\x1b\x16\x76\x1d\x41\xe7\xcb\xb9\x61\x53\x72\x00\x2d\xe1\x2d\x36\x3a\xb5\x5b\xae\x56\x6e\xa1\xd1\xe9\xcf\xd3\xd1\x01\x1a\x81\xcb\x69\x14\x72\xa9\xf9\xcf\xe8\x29\x16\xe4\x47\xa2\x70\xa5\xbf\xf9\xe1\xec\x52\xff\x07\x0e\x55\x14\x2e\x6e\x46\x26\x0e\x63\xf4\xd3\x74\xbd\x24\x82\x8c\xd2\xfc\x3d\xcc\x2e\x63\x2d\xe8\x87\x5a\xe8\x71\x0f\xb4\x69\x06\x3d\xd0\xee\x87\xb3\xcb\x81\x16\xcd\x54\x07\xda\x59\x0c\x0c\xb4\x7a\xf9\xf4\xc7\x0c\x46\x1b\x60\xed\x61\xb6\x1e\x60\xe9\x0c\x76\x36\xd1\x78\x79\x9b\x2d\x68\x0b\xee\xfb\x42\xcb\x18\x13\x11\x01\xbf\x61\x65\x3d\x1b\x5b\x9c\x39\xb0\xf9\x87\xd8\xb2\x72\x82\x2e\x6d\xf0\x54\x87\x7f\x9d\xdb\x71\x64\x78\xef\xa5\x0d\x0c\x4a\x30\x5f\x9a\xf1\xc6\xc8\x81\x48\x34\x49\x38\x71\xcd\x33\x48\xba\x34\xd9\xc6\x06\x65\xf7\x71\xd5\x31\x5e\x92\x4b\x1e\x8e\x52\xe8\x5b\xa6\xb6\x69\xdc\x45\x77\x61\x5b\xc4\x7d\xbf\xe8\xde\x3e\xc9\x1e\xec\x7b\xf9\x25\xd7\x82\xde\x06\x63\x5d\xb6\xe6\x6a\x5b\xc6\xa7\x7a\x69\x1b\xb8\xc9\xc4\x9c\x10\xbb\x4c\xd1\xc2\xbc\xd7\xd4\xe2\xea\x23\x6e\x1f\x07\x06\xa7\xed\xde\x5a\x92\x89\xb1\x69\xed\xca\x89\x39\x42\x1b\x3b\x36\x74\x5a\x70\xcd\x90\x75\xac\xdb\x55\x9d\x75\xfc\x8a\xe0\xe4\xd3\x1c\x4f\x7a\xd1\xae\x7e\x07\xc8\x71\x00\xec\xd0\x99\x71\x23\x76\x76\x44\x31\xb5\x14\x0b\x5a\x69\x23\x5c\xe1\xc4\xd0\x46\xf8\xb4\xa7\x4b\x94\x2d\x62\xe2\xe1\x34\x38\xb4\x5e\xa4\xac\x7f\xd0\xd5\x76\x16\x03\x79\xcd\xb4\x15\x97\x77\xc2\x1f\x8a\x2e\xb5\xbf\x1d\x7e\xa9\x65\xe6\x80\xc8\x34\x3e\x8e\xf6\xd8\x19\x8e\xc0\xbc\xf0\x98\xf6\xe0\xb3\x71\x6d\xb8\x40\xe7\x60\xc8\x88\x7e\xcc\xda\xb6\xe6\x6c\x08\x3b\x0f\x65\x7b\xb2\xca\xf0\x8a\x4c\xfc\xf3\xd5\x38\xaf\x35\x3d\x9b\x65\xc3\xe0\xab\x5f\x38\x23\xd2\x06\x9d\xc2\x41\x7f\xc9\x76\x3d\x20\x45\xcd\x21\xa9\x09\x1b\xfe\x2b\x67\x26\xda\xc5\xfe\x68\x16\xa5\xfe\xd5\x04\x56\xfb\xb8\x31\x43\x5a\xc5\xb7\xcb\x9a\x11\x6a\x21\x08\x53\xd5\x06\xc9\x7a\xad\xed\x7a\x37\x05\x6e\x82\xc8\x4e\x7f\x9e\x1e\x18\xbb\xc4\xd8\x43\x3f\x9c\x5d\x36\xe7\x5c\x32\xc1\x24\x5f\xf5\x8f\xc9\x86\x96\x9b\xee\x50\xcb\xf0\x28\xdd\x84\x92\xee\x54\x3c\x0c\x80\x4a\xcb\xbf\xee\x9c\xfa\x13\xac\xbe\x25\x97\xca\x5b\x78\x07\x68\xc6\x6b\x16\xdb\x5d\x2b\x0e\x33\xb2\x63\xff\xee\x11\x20\xf0\x9b\x6f\x1e\x9b\xc8\xfa\x5a\x9a\x31\x0b\x22\xd7\xdc\x86\x4f\x6b\xf9\xed\x86\x1b\xb7\x93\x30\x6b\x59\xb4\x7b\x94\x12\x3e\xb7\x1e\x16\x6a\xb7\x14\xc3\x07\xed\x70\x6d\x94\x83\x53\x24\xd7\x0c\x3d\xe3\x44\x22\xc6\x55\xe6\xc9\x38\xea\x9c\x8e\x27\x08\xb2\xdb\x48\x73\xc4\xe1\x81\x8b\x93\xd1\xa3\x25\xef\xd7\x15\x2d\xa8\x0a\x06\x7b\xa1\x56\x09\xda\x30\x43\x43\x16\x38\x56\x5a\x61\x56\x43\x28\x56\x1a\xa5\xc9\x45\xd0\xb3\x0b\xb2\x16\x02\x68\x98\x18\xe9\x7d\xbd\xe3\x80\x67\xe8\x9c\x40\x78\xae\x7b\xee\xab\x73\xd0\x69\x33\x80\x08\xe4\x9d\xf4\x8d\x09\x65\x75\xce\xe8\x41\x49\xa0\x45\x6e\xb9\x61\x78\x65\xc3\xe5\x70\x55\xf1\x02\xba\x98\x6d\xda\xc8\xb8\x3f\xa2\x25\xbf\x23\xb7\x44\x1c\xc0\x51\x9b\x91\x70\xb1\x7d\x81\xc2\x8a\x16\x00\xde\x41\x83\xc0\x0c\xc3\x11\xc5\xb2\x39\xd1\xec\x2c\x14\xe3\x32\x8f\x80\xb4\x21\x72\x4e\x35\xf4\xe9\x65\xb4\x16\x84\xb2\x8b\xdb\xe0\x99\x3d\x4a\x5a\xf8\xe3\xcc\x90\x06\xdd\x72\xe8\x30\x7e\xec\x96\x7a\xe4\x6d\x8e\xf1\x9c\xdc\x27\xc4\xf7\x08\x91\x2d\x5d\xc2\xa4\xd4\xc6\xc7\x0b\x82\xcb\xe0\xa9\x59\xd7\xa2\xf4\x9a\x36\xd9\x1f\x6b\x5e\xd1\x62\x03\xc2\xf6\xc5\xd5\xd5\x25\x5a\x9a\xf7\xee\x50\x25\x90\x77\x80\x9a\x1c\x95\xf6\x2c\xd8\x8f\xc5\xf1\xf6\x70\x10\xb0\xbc\x6b\xf4\xc5\x9c\x8b\x3b\x2c\x4a\x52\x9a\xa1\x5e\xc2\x00\x73\x0c\xe6\xe0\x87\xde\xb1\xfd\x9d\x49\xb4\x2a\xf5\x3a\x48\xc8\x80\xed\x3c\x2c\x49\x94\x11\x50\xdf\xbb\x1e\x0e\xd0\x5f\xc6\xcd\x3f\xf4\x5f\xdd\x1f\x34\x83\xc5\x94\xab\xdf\x4e\x33\x51\xf7\xcb\x4b\xc1\x15\x37\x32\x7b\xeb\xe7\xb1\x0d\xe1\x8c\x00\xee\x92\xcf\x8b\xc9\xb3\x29\x51\xda\x58\xb2\x8b\xb0\xf1\x39\x36\xde\xed\xd3\xf5\x9a\xb0\xf2\x3a\xea\x27\x32\xfb\xfb\x16\x97\xe0\x42\xd5\xa0\xb6\xb1\x85\x01\x94\xb4\x3e\x52\x3b\xa0\x18\x5c\xbb\xe0\xf5\x36\x82\xbc\xa7\x12\x3c\xad\x3e\x0b\xea\xb1\xbd\x26\xeb\x0a\x17\xe4\x7a\x74\xd0\x1f\x46\xd4\x7e\x89\x0e\xae\x21\x65\x3b\x32\x24\x00\x3e\xec\x64\x58\x4c\x31\x36\x83\x6b\x68\x82\xb8\xe8\x90\xe8\xab\xad\x71\xbf\x9c\x5f\x70\x46\x3e\x0a\x4e\xb7\x87\x1d\x53\x60\x40\xe0\x0d\xac\x3e\xad\xf1\x71\x25\x08\x2e\x37\x1a\x40\x33\xae\x0b\xad\x04\x3e\x0a\x36\x4d\xea\x5b\x08\xa7\x2d\x5d\xa3\x76\xdb\x26\x4c\xf1\xa7\x1b\x27\x49\x8c\x58\xb1\x02\x8a\x4a\x8f\x4b\xef\xa1\x1d\xcc\xa7\x91\x97\x96\xc3\x22\x6f\x0d\x1d\x63\xba\x40\xa3\x60\x77\x0d\xe0\x50\x75\x81\x57\xe4\x0c\x4b\x72\x5a\xfe\x67\x2d\x95\x56\xfe\x91\x93\xe0\x9e\x24\x8f\x7d\xec\xb1\x53\x81\x25\x41\xb8\x7d\x95\x22\x6f\x81\x99\x77\x18\x0e\x21\x78\xad\x34\x31\xb9\xc3\x36\x0a\xc9\x83\x18\x4e\xc3\x40\x36\xa7\xca\x44\x20\x61\x88\xb6\xe9\x03\x6b\xb3\x3f\x5c\x9c\x46\x81\xd7\x54\xe1\x8a\xfe\x02\x86\x46\xd4\x8c\x84\x18\xee\x26\xf0\xc6\x0b\x17\xba\x1e\xf5\x04\xf2\xf5\xa8\xe3\xaa\x8c\xc6\x19\xe8\x41\x5c\x8f\xde\x8f\x1b\xe5\xa1\xff\xba\x1e\x75\x86\xdc\x06\x65\x99\xc9\x1b\x0c\x2d\xf1\x6d\x4c\x85\x78\xc9\x62\xdb\x73\xb3\x59\x13\x5d\xe2\xc0\x82\xd5\x7b\xcd\xd8\x72\x69\x29\x53\x54\x04\x0b\x45\xde\xab\x03\x44\xca\x05\x19\x2b\x22\x56\x94\xd9\x2c\x61\x56\x22\x41\xc6\x84\x15\x62\xb3\x56\x36\xcf\x25\x26\x7f\x74\x63\xd8\xde\xde\xb5\xa1\xe6\x70\x3a\x78\x04\x63\xd4\xa8\xb6\x69\x80\xed\xba\x56\xfd\x81\x27\xbc\x00\x6e\xcc\xd0\x87\x36\x30\x6c\xda\x0d\x70\x9c\xc6\x1e\xe0\x69\x89\xd7\x82\xbf\xdf\x4c\xe0\x65\x37\x6d\xfd\x70\x79\x34\x36\x5d\x8d\x35\x33\xff\xcf\x44\x98\x51\x5b\x05\x60\x82\xec\xc8\x61\x27\x49\x12\x43\xf7\x07\x19\xdf\xb5\xe2\xaa\x32\xcc\xe0\x20\x76\x6c\xa3\x2d\x4b\x88\x71\x87\xb4\x08\x48\x3b\x1e\xd3\xb9\x65\xa7\x88\x3c\x4b\x46\xb7\x75\x04\xc2\x96\x68\xd6\x23\x7e\x11\x11\x12\xf1\x75\x6b\x38\x97\xd9\x8c\x96\xde\xc2\xed\x05\xbd\xf5\xd6\xdb\x28\x94\x3a\x66\xa7\xc1\x52\x4b\xbd\x63\xa9\xd8\x08\x46\x6c\xf2\x14\xa2\x10\xb7\xe4\x09\x6e\x3d\x4b\x94\xa1\xd7\xdf\x9f\xa1\xe3\x6f\x8f\xbe\x45\xd2\xe6\x2c\x7d\x33\x39\x8e\x89\x94\x15\x7e\x7f\x4e\xd8\x42\x2d\x4f\xd0\xd1\xa3\xe3\x6f\x62\xad\x28\x73\xad\x1e\xc5\x2c\x99\x26\xb8\xef\x5f\x7e\xfb\xdb\x9b\xf1\xff\xf7\xe5\xbf\x3c\xf8\xff\x1f\x7e\xf5\xf5\xe4\xd1\xf8\x0f\xa7\xe3\xbf\xfe\xed\xdd\xff\xc6\xe3\x5f\x7e\xfb\x3f\x6f\xbf\x8e\x85\xdd\x0d\x1e\x2c\x64\x84\xdb\xa5\x43\xed\x4c\xf2\xc3\xcb\xc8\xc9\x44\x57\xc1\xb8\xb6\x5e\xe5\x84\x6e\x0c\x17\x1c\x56\xa3\x02\x2a\x74\x00\x3d\x92\xec\xde\x1a\x11\x81\x1d\xb6\x15\xaf\x94\x41\x3e\x33\x65\x10\xd0\x51\xf0\x55\xdc\x78\xb0\xeb\xd1\xa4\x28\x4f\xd0\xd5\x66\x6d\x76\xbe\x07\x66\x4d\xda\x3e\xbd\x8d\xff\xa0\xc4\xc6\x96\x03\x5d\xde\x9c\x4d\x14\xb1\x3b\x5c\xbf\x3f\xcb\xb0\xb6\x8f\x02\xc7\xcc\xf1\x99\xd9\xfe\xe8\x2d\xb8\x17\x85\x01\x15\x14\x6c\x79\x10\xe0\x55\x1b\x0c\x5c\xf1\x85\x34\x59\x7a\x05\xad\xa8\x8a\xed\x3d\x21\xe6\xa0\x30\xc7\xc7\x4d\x1a\x4d\x0f\x1b\x71\xe1\x14\x01\xc9\x38\x92\x75\xb1\xf4\xd0\x66\x48\x01\x03\x54\xbc\x05\x1d\x96\x52\xc3\x31\x6c\x26\xb4\x32\xf3\x98\xf1\xa1\x69\xdd\xb1\x8b\x89\x05\xe1\x25\xb4\x9a\x01\x26\xce\x17\x3d\x19\xf1\xf0\xa1\x34\xe4\xb5\xf9\x8f\x06\x2d\x4b\x2c\xf5\xd4\xc9\x7c\x6e\x0a\x0b\x54\x9a\x0e\x5a\x9a\xa4\x0f\x2d\x1b\xbd\x6e\x15\x0d\xf0\xc7\xe9\xa5\xd6\x61\x63\x93\x83\x92\xed\xbf\x03\x88\x5a\x9c\xae\x5c\x81\x05\xcb\xc0\x76\xb6\xe0\x6f\x02\x5b\x02\x92\xe4\x36\x4c\xe1\xf7\x5a\xd4\xc5\xf7\xae\xcd\xc4\x2b\xbe\xb0\x50\x20\xb6\xdb\xe0\x70\x68\xd3\x9e\x9e\xf8\xe8\xc1\xaf\x5f\xff\xe5\x77\x7e\x7d\x8d\x1e\x14\xf4\xe4\x41\xb1\x7e\xf7\x60\x4e\x4f\x1e\xcc\xd7\xef\x1e\x5c\xc9\x77\x0f\x84\x3a\x79\xb0\xa6\xe5\xe8\x8f\x48\xda\xc8\x96\x82\x0b\xa3\x33\xcb\x74\x04\x87\xc5\x1e\x2a\x79\x51\x37\x98\x30\xa7\x2a\x27\x87\x87\xc5\x8c\x33\x45\x26\x0b\xaa\x96\xf5\x0c\x8c\x02\x63\x30\x8c\xcb\x82\xb3\xdb\xc3\xe3\xc9\xa3\xc3\x8e\x64\x32\x71\x2d\xdf\x4d\x8e\x27\x8f\xc3\xf9\x8d\x28\x5b\xea\x67\xc9\xfd\x4e\x58\xf7\x83\xbd\x07\xbf\xed\x5d\xff\xfa\x66\xfc\xf5\xdb\x3f\xbd\xf9\x5f\x7f\x79\xfe\x76\xef\xa0\xfd\x7b\xff\xab\xeb\xdf\xf7\xff\xb4\xf7\xe6\x74\xfc\x57\x3c\xfe\xe5\xed\xd7\xbf\x5d\xbf\x79\x63\xd5\xc3\x3b\xf8\x61\xef\x7a\xef\xcd\xdf\xf6\xdf\x7e\x7d\xbd\xbf\xff\xa7\xbd\x83\xf8\xbb\xfd\xaf\xae\xdf\xee\xef\xff\xf6\xe6\x6f\x0f\xde\x9c\x14\x4c\x89\xea\xe4\xed\xdb\xfd\xaf\xe2\xf1\xdc\x19\xe1\x06\xf1\x6c\x57\xb4\x75\xb8\x0c\xcc\xd8\x59\x9d\xcc\xcb\x81\xed\x9b\x0c\x09\xc2\xb7\xc6\x84\x11\xb7\x63\x5a\x8e\xf6\x33\x54\x45\x8a\x4f\x3d\x25\xd2\x93\x8b\x20\xb6\x61\x0d\x38\x71\xd0\xda\x1b\x09\x88\x26\x63\xf2\x3e\x16\xc7\x60\x52\xc5\xf6\x92\x64\x3c\x20\x85\xe3\x01\x0f\x9f\x88\x8d\xef\x67\xc0\x64\xf0\x59\xf2\x64\x3c\xf1\xb2\xe2\x8b\x05\x65\x8b\x01\xff\xa6\x6d\xd5\xba\x36\xbb\xb1\x00\x77\x9a\xaf\xda\xad\x9c\x6e\x1d\xae\x4c\xb0\x24\x82\x38\xa9\x19\xb0\xf0\x4d\x85\x2d\x13\xa3\x07\x6a\x5b\x5b\xf2\xae\xb2\xc0\xac\x0e\xd9\xfd\xbe\x92\x07\x67\x3d\x95\xd0\x7c\x9b\xb2\x69\x65\x6a\xe0\xe4\xd8\x6f\xb6\xc7\xd6\x7a\xb3\x3e\x4f\x57\x5d\xa0\xa9\xef\x92\x5c\x51\x0d\x9a\x92\x5b\x9e\x76\x76\x80\x7e\x2a\xdb\xf9\xdd\xd7\x62\x28\x89\x54\x7a\x4f\xbb\x55\xcd\x28\x3a\x63\xef\x0b\x3d\x02\x73\x38\xea\xe3\x7d\xc1\xe3\xeb\x28\x2f\x0c\xbf\x39\xf9\xd9\x21\xf8\xaf\x3d\x2d\x8a\xc6\xa7\x9c\xb9\x26\x49\xa8\xc8\x63\xef\x66\xa6\xf1\x00\x95\x06\x68\x3a\x54\x2f\x33\xe2\x51\x6e\x64\xc5\x03\xcb\x2f\x3a\x6d\xf3\x41\x78\xce\xd8\xbd\x75\x01\x39\x13\x94\x19\xc9\xde\x9f\xe4\x14\xe0\xa4\x67\xc8\x19\x79\x35\x1f\x8a\x46\xcc\x4f\xc3\x40\x2e\x6d\x6c\xb8\x61\x63\xf7\x22\xba\xbe\x8d\xcb\xe6\xff\xaa\x11\x7c\x9b\x6c\x9e\xdf\x7f\x76\xef\xdd\x84\x4a\x9b\x6c\x67\xe3\x99\xbc\xf4\x3b\x6b\x36\x18\x9e\xc8\x98\x92\x57\xc3\x0a\x43\x75\x31\x42\x6f\x09\xac\x71\xb4\x22\x52\xe2\x05\x89\x86\x62\xb4\x4f\x76\x6c\x31\x72\x3b\xb2\xc8\x09\x54\x74\xc2\x23\xf7\x5d\xcf\x54\xb2\xbc\xef\xde\x66\x4c\x98\xcf\xbb\x93\x4b\x89\xe2\xf4\xce\xa0\x3f\x25\xe3\x54\xaf\x78\x81\xab\xa3\xa8\x53\xdd\x7f\x72\x03\xc1\x6f\x88\x18\x4e\x76\x19\xc3\x61\x72\x46\xb3\x15\xa6\xe9\x00\x5f\xd3\xac\xc4\x64\x95\x91\x63\x33\x46\xb8\x0e\x96\x90\xe9\x37\xcb\xe4\xc8\x31\xaa\xd6\x39\xb3\x60\xe4\x6e\x38\xdd\x60\x8c\xea\xba\x58\x67\x34\x2b\x44\xf6\x54\x8f\x33\xda\xcd\x55\x4e\xa7\x2c\xab\x15\xae\x4b\x3a\x9c\xb2\x32\x46\xb8\x22\x19\xa9\x2d\x66\xaa\x39\x73\x00\x3e\x8e\x9b\xb7\xbd\x86\x47\xb9\x0d\xb3\xbb\x7e\x9c\xdb\x30\xad\x0b\xbc\x86\x4f\x72\x1b\xa6\x65\xbb\xd7\xf0\x7f\x7c\x4c\xc9\xb8\x8e\x06\x23\xfb\x4f\x37\x58\x97\x0b\xe5\x74\xc0\xbf\x3f\xbb\x34\xff\x66\xf5\x6a\x46\xc4\x3f\x46\x11\x34\x0a\x92\xa9\xc7\xc3\x94\x5e\xe1\xf7\x74\x55\xaf\x4e\xd0\xb7\x4f\x9e\x3c\x1e\xa6\xce\x8a\x32\xd3\x7c\x98\xd9\x0c\xda\xa1\x08\xca\x80\x4c\xcc\xcd\x76\x19\xae\x4b\x00\x76\xc7\x50\x7a\xd9\xa7\xc9\x89\x09\x26\xff\xf9\x26\xbc\x36\x14\xb5\xd9\x3e\x44\xc1\x6b\xf4\x52\x35\xdb\xf8\x44\x84\x43\x63\x0f\xa3\xeb\x21\xb9\x79\xe5\xb9\x1e\x5c\x35\xe5\xd6\x91\x6c\xb5\x38\x2d\x49\x81\x45\x6b\xde\x0f\xc0\x64\x78\x45\x4a\xd0\xb5\x0b\x79\x3d\x72\xf1\xa4\x01\x07\xc7\x9a\x9b\x1a\x76\x6d\x7f\x03\x90\x23\x70\x14\x47\x77\x82\x2a\xd2\x38\x96\xbd\x51\x0f\xe3\xf4\x6a\x49\xda\xcd\x2a\x94\xbf\xb3\xa5\xae\x2b\x62\xab\xc1\x59\x64\x02\x89\x50\xa4\x24\xa1\xff\x90\xf7\x6b\x52\xa8\x66\x7b\xd6\xf8\x78\x70\xa9\x17\x09\xc4\xb4\x77\xb1\xec\xce\x16\x32\x37\x45\x92\x57\xb5\xa9\x8f\x67\x84\x01\x2e\xed\xb6\xcf\xd6\x3e\xa5\x32\x7f\xf6\x17\x5c\xd9\x83\x00\x73\x26\xda\x9d\xae\xad\xd3\x07\xef\xcd\xbf\xa3\x75\x0d\xdc\x33\x23\xa8\x14\x7c\xbd\x26\xa5\x8d\xcf\x40\x02\x2b\x62\x0d\x3b\x89\xc8\xfb\x82\x10\x1b\x30\x93\xcb\x50\xa2\x66\x8a\xae\xc8\x43\xe9\x32\x3d\xed\x49\x4c\x1f\x1f\x0f\x25\x2a\xf0\x1a\x17\x54\x6d\x06\x27\xae\xd7\x89\xd9\x52\xe9\xbf\xcf\x1d\xfd\xa5\x2d\xce\x11\xda\xb7\x0d\x13\xbe\x4b\x60\x58\xa9\xae\xee\x27\x66\x3d\x19\x6e\x4a\x1e\x82\x1c\x1f\x80\x6a\x47\xd2\xda\xc4\xc0\xb2\x59\x4c\x36\x00\x79\x89\x3b\xa7\x46\xcd\x11\x97\xed\xd1\x64\x1a\x17\x64\xc0\x58\xce\x49\x81\xcb\xdb\xf7\x8f\x2d\x49\x32\x84\xf4\x7f\x83\x7c\xb2\xa5\x52\xeb\x33\xbc\x56\xb5\x20\x67\x9c\xdf\x24\xb7\x93\xdd\x22\x4a\x5b\x1f\x7a\xfb\x26\x70\xbe\x16\xf6\xe7\x81\x9a\x11\xad\x83\xaf\x30\xe0\xfa\xa7\x6c\x71\xcf\x5e\x02\x2a\xe3\x4d\xff\x7a\x49\x38\xd0\x1f\xab\x30\xcd\xd6\xf1\xbd\x45\x85\x9e\xb8\x41\x47\xeb\xc9\x4b\x32\x82\x3b\xb2\x37\x83\x35\x2b\x60\x1b\x23\xc9\x1a\x35\x99\x8e\x80\x15\x56\xc5\xf2\x2a\x23\xed\xbf\x33\xd1\xe6\xab\xde\xae\xd8\x99\x00\xf0\x3e\x9e\xb0\xd2\x3e\x33\x82\xd6\x44\x68\xeb\xcd\x14\x7d\x33\xb2\x13\x26\x6d\x12\x55\x02\x29\xb1\x83\x40\x47\xcf\xdf\xe3\x42\x8d\x5c\x09\x01\xa2\xff\xe5\xaa\x74\x9b\x91\x41\x26\xe2\xa5\x20\x73\xfa\x7e\x84\xd2\x87\x1b\xe6\x69\xaa\x7c\xaf\xe1\x23\x03\xc6\xb0\xa0\xeb\xcd\x3f\x53\x3c\x48\x1e\x45\x98\x07\x8e\x1f\xb6\x6b\x3d\xd9\x28\x0b\x78\x0b\x8c\x6d\x7b\xb1\xa3\x1d\x04\x4b\x9b\x72\x2d\x70\xdb\x80\x1b\x6f\xaa\x1f\x03\x7a\xd8\xc6\xb6\xa3\x89\xc5\x6e\xb5\x4c\x91\x3d\x58\x4d\x87\x76\x04\x68\x34\xe7\x7c\x64\x22\xc8\x2d\x8f\x43\xd1\xdc\x86\x1d\x4a\xd3\x62\x10\x2c\x17\xd0\x70\x86\xc5\x08\xcd\x6a\x05\x11\x94\xda\xa8\xb4\x30\xf4\xef\xcd\x39\x92\x80\xac\x08\x55\x2c\x87\x37\x4a\xc8\x8d\x85\xca\xac\x35\x88\x32\x5d\x2d\x63\x04\x2c\x34\xd8\x2a\x8b\x4e\xd9\x1b\xbf\xf6\xd0\x69\xb7\x95\x6f\xbf\xea\xd4\x51\xb3\x1b\x2a\x54\x99\x57\x3c\x75\x5e\x66\x87\xa9\xed\x58\xb3\xa4\x40\xba\xb9\x64\x37\x73\x4e\xe1\x62\x5a\x6d\x84\xc5\xd0\x51\xb9\x79\x3c\x46\x39\x70\xff\xf0\x6e\x1f\xe0\x8c\x8c\x8b\x25\x16\xb8\x50\x90\x0e\x52\xd1\x15\x85\x2b\x41\xd2\xc7\x7b\xed\x70\x8d\xcd\xa4\xc4\xc6\xb3\xf4\xa8\xb4\x73\x36\xc7\xf0\xe6\x38\x52\xcf\x25\x47\xf2\x29\x51\x33\x93\xdf\x61\x17\xa3\x67\x0b\x4d\x90\x67\xbf\x0e\x67\x25\xf9\x58\x68\x36\x0f\x70\x7d\xc0\x0a\xee\xfd\xc0\x48\x92\x35\x06\x73\x15\xb2\xbb\x9c\xac\x55\x7c\x28\xeb\x5e\x3f\x0d\x59\x3b\xc1\xe9\xa0\x90\x9b\x70\x9a\x01\x20\xcd\x96\x3b\x79\xc0\x69\xdb\xe6\xee\xb7\xf3\x77\xdb\xe9\x73\x71\xf3\xa4\x4e\xc7\x71\x4f\x2b\xbd\x54\x72\x30\xd6\xc2\x4e\xa6\x1b\x0b\xd7\xd1\xeb\xe1\x13\xe8\x41\x90\xdf\x1e\x7f\xfb\xc4\x3b\xa1\x3e\xca\xc0\x7d\xd6\xf1\xb2\x6d\x9d\x73\xc8\x6c\x9e\xf6\xa8\x39\x7e\xce\x9c\x88\x67\x30\x4f\xb6\xc0\x6a\x15\xc5\xce\x94\xb4\xfa\x25\x42\x4f\xab\x24\x0d\x59\x07\xb1\x1f\x0c\x71\x4c\x91\x75\x58\x65\x9b\xc0\x83\xff\x27\xc9\x9a\xe3\x06\x1b\xb7\xa6\xc5\x40\x2b\x8b\x90\x21\x07\xd7\x90\x1f\x6c\x85\xdf\xbf\x04\xc3\x3f\x21\x81\x3e\x5a\xd5\x44\x6f\xcb\x14\xcd\xff\x72\xcf\x76\x1e\x58\xf7\xcb\x26\x66\xa2\x23\xa7\xff\x51\x5b\x2d\x3f\x44\xba\xb1\x97\xd0\x35\xeb\x68\x36\x2a\x11\x5f\x9b\x8b\x58\x58\x65\x63\x2c\x93\xbb\x23\x3f\x74\xde\x2d\x3b\xef\x9a\x29\x06\x21\xa2\x92\x14\xda\x7a\xec\xbf\x4e\x80\x35\xa1\x25\xae\xfa\x49\xc8\x15\xe7\xe2\xf3\x25\xb2\x71\xf9\x50\x86\x75\x00\xb9\x54\x6e\x85\xf7\x23\x08\x6b\x77\xb1\xfd\xde\xe8\xf6\x27\x08\xbd\x48\xa6\x05\xa1\x4e\x5d\xe4\x86\x5c\x7a\xec\x57\xe7\x53\xb4\xc6\x52\xaa\xa5\xe0\xf5\x62\xd9\xb9\x98\xe2\x43\x4b\x46\x5a\x1d\xbf\x8b\x63\xd8\x65\x1c\xf8\x69\x7b\x1a\xb9\x7e\x30\xd7\x40\x0e\x94\x7b\x34\xc1\xcd\x4c\x33\x23\xf6\x33\xe1\x76\xd8\x32\xbd\xa9\x18\x74\x03\x6c\x21\x20\xe5\x0a\x30\x34\xce\x74\x05\x20\xcf\x1d\xe0\x07\x61\xef\xe6\x0e\x40\x3b\xc5\x06\xec\xb0\x39\xd8\x9a\x78\xce\x06\x21\x03\x66\x5b\x22\xcb\x4e\xda\x06\xfe\x9a\xdb\x64\xfc\xdf\x9c\x35\x9e\x05\x34\x61\xb1\x87\x2c\xf2\x2c\x98\x19\x56\x7b\x5e\x0c\x71\xfb\xe4\x5a\xee\xbb\xe0\xf3\x43\xac\x77\xb4\xdb\x29\xd8\x2e\x96\x39\xca\xb4\xce\xd1\xa0\x85\xee\x85\x75\x66\x9a\x72\x28\x6d\xce\x85\xe3\x44\xb3\xa0\xee\x98\xbd\xe2\x3f\x39\xd6\x57\x22\x78\xb3\x7d\x76\x38\x02\xce\x3b\x8c\xcc\xb5\xb1\x4c\xcb\x81\x10\x7c\xb4\x4b\x65\xd2\x4c\x63\x0b\x65\x19\x5c\xc8\x5c\xdd\x09\x49\x60\xbb\xa9\x34\x9b\x8a\x16\xd1\x69\xdd\x44\xb5\x8f\xa8\xd4\x76\x02\xfc\x59\xab\xc5\x9f\xcf\x5a\xed\xb3\x56\xeb\x8f\xe9\xb3\x56\xfb\xac\xd5\xfe\x39\xb4\x5a\xe6\xb9\xee\x39\x5f\x7c\xbf\x4b\x22\xdf\xa8\xf3\x51\x38\x9f\xcf\x46\xeb\xa4\xcf\xb7\xad\x34\x71\xc7\x72\xdd\x64\xcc\x9d\xb3\x1d\x51\x57\x46\xc1\x25\x57\x46\x38\x75\x32\xf1\x1e\xca\x26\x37\xae\x9f\x50\x97\x00\x6c\x0a\x14\xd8\x84\xb6\x38\x88\x83\x26\x47\xce\x36\x4d\x1d\x14\x7f\xec\xac\xb8\xd4\xf0\xb7\x5c\x2c\x8e\x4e\x9e\x8b\x65\xdb\x91\x92\x72\x3a\x64\xbb\x58\xba\x8e\x94\x94\x67\x64\x27\x17\x4b\xc8\x91\x92\x00\x9e\x72\xb1\xbc\x54\xa8\x74\x75\xdf\xb0\xc9\x1a\x75\x87\x2f\x06\x4d\x03\x5e\xa2\xfb\x79\x5a\x3e\xb8\xe0\xac\x17\x56\x17\x6c\x71\xdf\xa4\x2c\xe6\xae\xf0\x9f\x92\x8a\x14\x8a\x07\xd2\x62\xba\xf2\x60\xeb\x03\xff\x8a\xb9\x39\xad\x14\x31\x26\x8e\x24\x20\x18\x9a\xe6\x21\xcd\x35\x7c\x63\xa4\xcd\xf5\x35\x5d\xc0\x5d\x98\xba\x43\xb7\xc6\xc3\xc8\x94\x4b\xec\x2e\x0e\x8c\xde\x33\xc7\xdc\x58\x29\x5b\xec\x5c\xdb\x0a\xfc\xd1\xcf\xdf\xaf\xf5\x58\x35\xdd\x33\x52\xb9\xfa\x9f\x98\xab\x33\xdd\x05\x54\x15\x9e\x91\x0a\x49\x87\x50\xcb\x0b\x50\xde\x22\x26\xa7\xae\xe0\xa2\xd2\xb6\x1d\x58\xfe\xa7\x17\xcf\x62\x26\x73\x7e\x15\x8a\xd3\xc4\x70\xec\x95\xe7\xee\x4d\xd2\xfb\x69\x83\xe0\xec\x49\x99\x3c\x40\x18\xdd\x90\x8d\x39\x8d\xc5\xac\x0d\xca\xb4\xb1\x7e\x55\x53\x8e\xfa\x86\xc4\x25\xa9\xfe\xd8\x5e\x18\x1f\x69\x93\xb3\x23\xb8\x21\xc9\x44\x90\x0e\x3a\x6e\xc8\xc6\x85\xb8\x1a\xbc\xe8\x1f\x1a\x5b\xb8\x41\xc5\xb0\xe7\x5a\xef\xfa\x52\x5a\x27\xcb\xb4\x71\x58\xcb\x1e\x7e\x83\xe6\xf6\x86\x79\x43\x88\x87\xd2\x20\x5d\x73\xe3\x92\xae\x87\xc2\x75\xb0\x5b\xd0\xee\xba\x7e\x53\xb0\xd8\x81\x37\xfc\xf7\x92\x1d\x68\xd5\xa3\xff\xf3\xfc\x3d\x95\x03\xd6\xaa\xa6\xe5\x33\x4e\xe4\x05\x57\xd0\xfa\x83\x91\x63\x86\x96\x8d\x1a\x1b\x53\x64\xae\x12\x03\xe3\x4a\xcf\xcf\xbf\xcf\x5f\x4e\x6c\xd6\x7d\x72\x1e\x0d\x8a\xa9\x44\x2f\x99\x56\x3e\x16\x07\xcd\x5e\x4c\x5a\xf0\xce\x22\x67\x9c\x8d\xc1\xbc\x49\xdb\xce\x36\xe3\xdf\x87\x6f\xd0\xaa\xfb\xf0\x31\xe7\x77\x95\x46\x79\x67\x18\x66\x08\x46\xc2\x9a\x37\x50\xbc\x15\xaa\x68\x95\xa8\x84\x82\xad\x26\xf6\x09\x2b\xb2\x18\xb8\x12\x62\x45\xc4\x82\x68\x43\xbf\x58\xa6\x66\x95\xe1\x75\xc8\xb4\xf1\x87\x8d\xe2\xa1\x1d\xc0\x38\x21\x6a\xc6\x0d\xda\x23\x0d\x06\xed\xed\xf4\xf8\x40\x21\x9c\x6b\x81\x12\xc1\x46\x7b\x87\xc8\xe5\xa0\x44\x1b\xc4\xd8\xb6\x2e\x32\x5d\x1b\x79\xbe\xc2\x6b\xcd\xf9\xbf\x6a\xf1\x0c\x4c\xf4\x3b\x5a\x63\x2a\xe4\x04\x9d\x22\x49\xd9\xa2\x8a\xf1\xbf\xff\x85\x0d\x62\xf1\x81\x6b\xb8\x5b\xb7\x03\x62\x86\x48\x95\x2a\xe1\xec\x02\x08\x3d\x6d\x79\x80\xee\x96\x5c\x12\x7b\x43\xbf\xdd\x1f\x8c\x6e\xc8\x66\x74\xd0\x59\x21\x11\x88\xba\xf1\x4b\x66\xaf\xbf\xd8\x5a\x94\x8d\x9e\x02\xf3\x78\x04\xef\x46\x93\x2d\x05\x1b\x81\x3d\xa0\x76\xef\x6d\x96\xf1\x92\x5c\xea\x75\xa8\xfb\x1e\x34\xc9\xfc\xc6\x36\x89\x5d\x36\x65\x82\x9d\x35\x85\xf8\xad\x33\xcd\x8a\x25\x29\xeb\x2a\xcc\x2c\x76\x33\x17\x32\xc5\x3a\x06\x55\x73\x09\x5e\x53\x22\x14\x2e\xc3\xb9\xf0\xc7\x12\x00\xaf\xed\xb7\x15\x17\xc4\x5d\x8c\xb3\xfb\x8d\xee\xbc\x4c\xd8\xaa\x61\xe4\xf8\xa6\x6a\x53\xeb\xb6\xa7\xba\x4b\xef\xca\xe7\x08\xad\x83\xf5\x84\xd3\x86\xa6\xbd\xf7\x67\x46\x14\x9e\x74\x0b\xcb\xf3\xe8\x6a\xae\x28\xab\xdf\xdb\x99\x8e\x05\xaf\x48\xef\xcb\x3b\x2e\x6e\x88\x38\x41\x0f\x1f\xda\x9e\x9b\x7e\x9b\xf8\xce\x08\x64\xd9\x37\xd9\x4d\xa5\x39\x10\xf8\xd2\x1f\xf9\xbd\x53\xfe\xf3\x4c\xe3\x2d\x2a\xed\x62\x1e\x27\xfd\xfa\x9e\xe1\xbc\xb3\x89\x8c\x76\x8e\xf8\xce\x37\x95\xd3\x0a\x0f\xd2\x26\xee\x61\x2e\x0f\x40\x35\x02\x73\xd8\x64\x46\x3b\x38\xd2\x07\x4c\xe7\x2d\x14\xe5\x99\xcf\xc3\xa7\x05\x8d\xd7\x62\xc8\xdd\x98\xed\x21\xcc\x31\xa5\xb7\xa6\x93\x6b\x4e\x0f\x4e\xc8\xa4\xe2\xec\x62\x52\x0f\x82\xb4\xb6\xe1\x2e\x66\x35\xda\x05\x61\xc3\xe6\x35\xba\xa7\x89\x3d\x8c\xad\x9e\x19\x3c\x6c\x66\x0f\x82\xec\x98\xe1\x3b\x98\xda\x59\x63\x0d\x5a\xfd\x49\x73\x7b\x10\xec\xb6\x39\x9e\x6b\x72\xa3\xdc\xc3\xbe\x9d\xdc\xeb\xb9\x27\xad\x39\x01\x7e\xa9\x1d\x7f\x86\x29\x8e\x72\xdd\xee\xc3\x63\x1e\x34\xcb\xd1\x8e\xa6\x39\xca\xc5\xea\xbd\x4d\xf4\x44\xc7\xc6\x78\xdf\xd9\x4c\x4f\x4d\xc5\x37\xe0\x77\x34\xd5\x53\x60\x7b\x6b\x2f\xd7\x5c\x4f\x80\x8c\x1a\xf2\x39\x66\x40\xe6\xe6\x2e\x7e\x3b\x14\xaf\x6c\x79\xa9\xac\x3a\x4f\x5e\xf3\xae\xe5\xe3\xbf\x68\xcd\xd4\xd8\x36\x27\x75\xed\x85\x74\x15\x8b\x7d\x2f\xa8\x26\xa5\x16\x4a\xd0\x5f\xfa\x7e\xa4\xac\xeb\x91\x3a\x87\x15\x87\x9a\x4c\x6a\x8c\x59\x39\x6e\xa7\x71\xf8\xa1\x35\x72\xaf\xa0\x98\x78\x69\xce\x35\xae\x1a\xb8\x30\x1b\xa5\xb0\xde\xd9\x40\xa2\xb4\x79\x93\x30\x91\x30\xdb\x20\x18\xa1\xbb\x48\x54\x15\xee\x06\x13\x25\xe8\xba\x22\xe8\x5f\x9b\x65\x73\x60\xca\x4b\xfe\x5b\xf2\x22\x13\xd4\x2e\x2c\x2d\xa8\x1b\x76\xfe\x57\xf7\xd7\xbf\x7d\x88\xcb\xd2\x8c\x20\xdb\x32\x7d\x6e\x4e\x36\xba\xf7\xfc\x99\xe9\xda\x52\x99\x8a\xdb\x34\xb6\xa4\x9c\x7f\x0e\xec\x61\x92\xa5\x6d\xf2\x5c\x55\x75\x00\xc9\x09\xfa\x79\x49\x58\x27\xfb\xcd\x24\xed\x65\x18\x13\xb0\x16\x2f\xf8\xd4\x6c\x48\xc9\x01\x24\x39\x11\xd1\xfe\x02\x32\xe0\x82\x3f\x7f\x4f\x8a\x3a\x76\x53\x9b\x79\xb2\x84\xec\x2e\x8e\xdf\x3f\xb7\x96\xab\x99\x6f\xc7\x72\x6d\x59\x3a\xd7\xf5\x9b\xc4\xe5\x0d\xd9\x34\xce\x46\x67\x33\x0f\x1e\x80\x7a\xae\x47\x67\x63\x18\xa3\xe5\x8f\xee\xc2\x9c\xd5\xcc\x95\x62\xb0\xf9\xee\x96\xe8\x69\x27\x61\x55\x35\xe4\xd1\x9b\x8f\xaa\x32\xc3\xfb\x2f\xf7\x5d\xbf\xfa\x48\xbe\xeb\x46\x87\x84\x4d\x6c\xcf\x6e\x7e\xfe\xf7\x1a\x57\x13\xf4\x2c\xe7\xf6\x79\xc5\x5d\x73\x0b\x60\xcb\xd5\xd5\x5c\xeb\x36\xe7\x36\xae\x27\x4d\x4d\xc9\x0d\x7f\x61\x90\x70\x05\x66\x8d\x18\x6b\x39\x05\x4a\x6d\x61\xb4\xc6\x42\xd1\xa2\xae\x70\x7a\xeb\xa4\xd7\xfe\x82\x8b\xa4\x9f\x39\x8b\x76\x2d\xbb\x4f\x49\xc1\x59\x99\xbf\x47\xbe\xea\x7f\xe9\x53\x13\xae\x86\x20\x82\xf2\x72\x28\x6b\x50\xd1\x15\xe9\x2f\xbc\x3d\x73\xd0\xdc\x14\x0e\x99\x3b\xd9\xd6\x08\x8c\x81\xd5\xa3\x96\x44\xdc\x51\x88\x1c\xf0\x23\x0f\xe8\x82\x71\x41\xca\xfd\x56\x8b\xb4\x52\x20\x2d\x2e\xfd\x6b\x2f\xa8\x72\x17\x76\x81\x7f\xc6\x8e\xd5\x2e\x43\x4b\xd6\x06\x6c\x12\xea\x9c\x0b\xb8\xa2\x63\xaf\xe4\xe6\x02\xb0\x5b\x5a\xa8\xfd\x09\xfa\x2b\x11\xdc\x24\xd1\x92\x05\x56\xf4\xb6\xb1\x94\x06\x53\x10\x21\x2c\xcc\xdc\x5f\x85\x25\x7a\x84\xf6\x00\x24\xa2\xab\x15\x29\x29\x56\xa4\xda\xec\xbb\x33\x59\xb9\x91\x8a\xac\x52\xd3\xf6\xaa\xef\x7c\x9b\xca\x43\xca\x8b\x9f\x82\x29\x64\x73\xd7\x4f\x10\xe9\xd4\x11\xd3\xae\x04\x78\x87\x55\xac\x7a\x1f\x94\xd1\xd1\x7d\xa0\x1f\x59\xd7\x86\x29\xe6\x88\xe8\x86\xc9\xfe\x53\xf3\x29\x46\x82\x2c\xf4\xba\xb5\x2b\xee\x03\x57\xe6\x07\x9d\x42\x24\x3e\xd6\xdb\x52\x5a\xe0\xa1\xcb\xa8\x5c\x33\x47\x01\x77\x3b\x40\x5b\x0c\x2a\x2b\x58\xd0\x81\x99\x84\xfc\xcb\x8a\xa3\x40\x8c\x59\xba\xe4\x53\x8a\xd5\xe0\x8a\x8a\xd3\x72\x45\x61\xc3\x32\xe4\x5b\xef\xb6\x6e\x32\xac\xb0\x7f\xe5\xd6\x12\xb3\xb2\xd2\x36\x1f\x23\x77\x06\x7c\x60\x8e\x45\x85\xe9\x4a\xf6\xee\x5f\x30\x37\x53\xf0\x3b\xc4\xb5\xad\xce\x36\xae\x15\x2e\x04\xb7\x75\xcc\x4d\xf0\x44\xf0\x32\x7a\xe3\xfd\xb5\xb1\xc2\x0d\xbe\x5c\xdc\xa7\xdd\x2f\x18\xb7\x7c\x73\x0d\x5d\x77\x3e\x21\x07\xbd\x96\x82\x26\x8e\xc7\xba\xe8\x11\x9e\xf1\x1a\xac\x1e\x2a\x9a\x6e\x76\xf7\xdb\xbb\xb9\xbc\xba\x63\x44\x68\xb5\x9d\xe5\xbd\xdf\xfa\xaa\x57\x0d\xd7\x5c\x5f\x89\x57\xc4\xa2\x2e\x76\x4c\xd3\x47\xa8\xb7\x88\x81\x7c\x36\x37\xed\xa7\x4e\xe4\xa4\x29\x45\x15\x13\x46\xd7\x0c\x8d\xd1\x54\x09\x5a\xa8\x13\xf4\x8c\xdb\x9b\x9a\x34\x35\xed\x15\x29\x94\xa1\x92\xce\xe7\x44\x68\x7b\xc0\xeb\x3a\x6a\xae\xc0\x14\xda\x5a\xf1\x7a\x6e\x13\xd3\x0d\x5c\x7a\x7d\xe1\x40\xd8\xaa\x18\x27\xa6\x3c\x86\xed\x2e\x26\x21\xb8\x05\xdb\x0e\x65\x8d\xd5\xb2\x2d\xd9\xa9\x7b\x42\x1e\x1e\xb7\x50\x95\xd8\x18\xb6\xec\xd7\x8b\xaf\x31\x68\xb9\xc7\x0d\x4f\xc1\x89\x46\xda\x9a\x4e\x12\x62\x2f\x2a\x3a\x9d\x65\x96\x7f\x2d\x5d\xf7\x8b\x1e\x13\x5a\x7a\xc3\x7d\x48\xae\x61\x6c\xaf\xa7\xbf\xa7\x21\xfe\xf3\xae\x45\xd8\x3e\x7a\xfb\xb9\xd3\x7d\xfa\x7c\xca\x04\x43\xf2\xb9\x1b\xd6\x9b\xa3\xb7\xee\x92\xf6\x78\xa0\x55\x04\xa4\xb9\x0b\xc1\x86\x67\x03\xbc\x87\xb2\xb5\x6b\x8d\x0c\x04\x16\xd5\x9d\x38\x17\x81\x8d\x67\x2c\xf8\xea\xb0\xb9\x08\xe8\x10\xaf\xe9\xe1\xac\xe2\xb3\xc3\x15\x96\x8a\x88\x43\x00\x76\x78\x7b\x74\xa8\x49\x25\x27\x8b\xd8\x9a\xb0\xd1\x8c\x27\xe8\xdf\xd7\x25\x86\x7b\xc6\xba\xb8\x30\xb5\xc1\xdc\x6f\xd2\x15\x8c\x51\xbc\xfd\xed\x19\x95\xe9\x2d\xa9\xad\x39\x52\x4b\x53\x65\x4a\x69\xbb\xc8\xa7\x29\xee\x4f\x59\x63\x77\x5a\xcf\xcc\x45\xce\xf1\x85\x27\x15\x5f\xa3\xe6\x76\x51\x73\x5d\x94\x85\xeb\x44\x4c\xad\x67\x65\xc6\x8b\xb3\x78\x07\xfa\xbe\xd0\x92\x49\x71\x0d\x40\x90\x66\xc8\x89\x28\xba\x68\xbd\xbc\x1e\x32\xed\x85\xa2\x72\x1b\xa1\xda\xce\xcc\xc7\xa8\xf3\xed\x87\x55\x94\xe2\xe8\x7a\x14\x00\x76\xaf\x3b\xe1\xfa\x23\x1d\x6a\x36\x30\xf6\xa4\xe4\x48\x59\x4c\x9a\xae\xb9\x41\x94\x9d\xc6\xe9\x00\xca\xd7\x86\x5f\x5c\xa8\x64\x60\xcc\xf7\x0f\x9e\x74\xa1\x92\x51\xdb\xe2\x73\xf0\x24\x3c\x9f\x83\x27\xbd\xe7\x73\xf0\xe4\xe7\xe0\xc9\xcf\xc1\x93\x9f\x83\x27\x3f\x07\x4f\x7e\x0e\x9e\xfc\xef\x19\x3c\xa9\x2a\x39\x25\x45\x2d\xa8\xda\x5c\x0a\x3e\xa7\x55\xc0\x9f\xd8\x3b\x80\xdd\xfa\xc2\xcb\x74\x93\x44\x69\x63\x49\x36\xe9\x3f\xe9\x92\x32\x60\x64\x19\x5b\xac\x35\xc5\x06\xd2\x51\xfc\x6d\x56\x00\x24\x5e\x53\xb8\x50\x5f\xc8\x89\x39\x62\xed\x5e\xb0\x5a\x54\xb5\xde\x52\x21\x41\x24\xaf\x45\x41\x7a\x55\x76\xee\x96\x24\x64\xfd\x9b\xb2\xc8\x7a\x20\xaf\xaa\xf2\xc0\x6c\xbc\xad\xfb\xd7\x10\xfb\x47\x5e\x12\xc1\xb4\x4d\x00\x08\x81\x7d\x9a\x19\xb9\x71\xb3\x87\x0b\xfc\xba\xe6\xdd\x8b\x26\xa9\x44\xb2\x06\x5a\x81\x43\x62\x89\xd9\x82\xa0\x19\x51\x77\x84\x30\xad\x4a\x09\x86\x2b\x59\xbf\x0f\xb2\x61\xe3\x2e\x5b\xd0\x5b\xc2\xb4\x50\xb5\xde\x2c\x03\x5b\xf1\x26\xfb\xcf\x9f\x44\x33\x12\x73\x08\x1e\x34\x9d\x79\xd3\x39\xfa\xcb\xe4\x3f\x26\x7f\xd5\x13\x47\xf5\x7a\x21\x70\x09\xfb\xab\xce\xcb\xaf\x8f\x20\x87\xd9\xee\x13\x11\x23\x77\xd9\xd3\x37\x5b\x35\x2f\xd0\x34\x6c\xb0\x1f\x68\x12\xd6\x55\x24\xaf\xc9\x24\x37\xf3\xaa\xe2\xb5\xda\x2a\xa4\x44\x5c\x2e\x33\x70\xe8\xad\xb9\x63\xde\xe7\x45\xaf\x9b\x10\xd7\x52\x89\x8e\x26\x47\xed\x2a\x77\xc9\xed\x3e\x34\x68\x73\x3c\x41\xe8\x94\xc1\x36\xc2\x11\x80\x9b\xd4\xcd\xa0\x63\x57\x82\x8f\xa6\x5f\xcb\xd9\xb2\x16\xe4\xd2\x79\xec\xe5\x55\x37\x32\xb7\x6e\x12\x40\x76\x68\xb8\xca\xc9\x17\x09\x50\x8e\x26\x8f\x77\xde\x89\x98\x9a\xd0\x39\xce\x1f\x5b\x3d\x1a\xe4\x7d\x2d\x89\x18\xbb\x92\x7d\xba\x6b\x69\x05\x87\x9b\xc9\x04\x3d\x8d\x89\x7c\xf2\x5e\x69\x81\x58\x69\x26\x12\xb0\x23\x33\x8b\xb0\xa9\x4f\xed\x90\x81\x25\xa2\xcc\x64\x6d\x77\x18\x29\x1a\x99\x6c\x6e\xfe\x2e\xb0\xc2\x52\x09\xbe\x5e\xd2\x62\xa2\xa9\x64\x57\x4e\x1f\x7c\xc5\xf9\x8d\x44\x15\xbd\x31\x27\x5f\x09\x07\x27\x42\x05\x5d\x2f\x89\x90\x27\xf0\xcb\x18\x3d\x3f\x7b\xf6\xe2\xf9\xf8\xf9\xd9\xb3\xe9\xe9\xf8\xec\xc5\xe9\xd9\x8b\xd3\xe3\x47\xe3\xcb\x57\xe7\xff\x71\xf4\xf8\xd1\x93\x4e\x9b\xd7\xa1\x16\xb1\x9e\xfa\x1f\x9e\x3e\x9f\x1e\x1d\x7f\x37\xfe\xe1\xec\xc7\xf1\xf4\xc5\xe9\xf1\x93\x6f\x03\xdd\x6f\xb5\x89\x03\x5f\x51\x76\x75\x3e\xfd\xc9\xf0\xf1\x89\x26\xdb\xed\xd1\xe4\x28\xec\x6b\xc8\xc8\xcb\x1e\xde\x26\x39\xac\x45\x4d\xb0\x1e\x83\x99\xe6\xbe\x27\xc0\xd5\x57\x87\x9a\xc8\xf0\x1a\xe1\x6a\xc1\x05\x55\xcb\xa8\x97\x1b\xb9\x60\x62\xad\x58\x19\x59\x70\x45\xc1\xb9\x64\xad\x51\x0d\x4a\x73\xec\x12\xb3\x52\x2e\xf1\x0d\x99\xa0\xe6\x8c\x3d\x05\x52\x4b\x3d\x41\x56\xfc\x96\x40\x05\x54\x9b\xfd\x4d\x85\x31\x1d\x58\x29\x91\x3d\x98\xb4\xde\xa3\x5e\x95\xe0\xd4\x60\x8d\xe8\x7e\xf6\x7c\x3a\x3e\x7b\x7a\xf6\x58\xd3\x11\xa1\xbd\x0d\x5e\x55\xfb\x27\x41\xf6\xf3\x5b\xc6\xb3\x6d\x07\xed\xe4\xbc\x33\xef\xe1\x68\xc1\x0e\x5b\x65\xd2\xba\xf3\x51\x8c\xe2\x20\xcc\x93\xb5\x59\x9d\x50\xb6\x6e\x7c\x2b\x4a\x15\x2f\x78\xd5\xdc\x7f\x1c\x64\x81\x04\xcc\x1e\x73\x7c\xdf\x3b\xaa\xd2\xa4\xf2\xf4\x81\xd5\x18\x47\x93\xd4\x95\x2b\x5a\x9f\x1c\x4d\x1e\x77\x89\x1a\x5e\x8e\xa0\xd2\x5e\x5d\x3d\x3f\x41\x45\x2d\x04\x61\x2a\x19\xdf\x07\x65\x54\xe8\x62\x49\xa4\xea\xc2\x73\xe1\x47\x1a\x01\xf6\xa7\xab\xf3\xe9\xd1\x71\x9c\x5d\xd2\x55\x9a\xc7\x3e\x94\x78\xf1\xcc\x4e\xb3\x78\x39\x91\x4e\xb3\x38\xe2\x3a\xcd\xe2\xc9\xfe\x1f\x76\x57\x27\x82\x13\x52\x67\x2f\xe5\x28\x42\xbf\xbd\x51\x87\x21\x0d\xd8\x98\xb3\x09\xc5\xe2\xce\x0a\xee\xe8\x0d\x9d\xac\xf8\x2f\xb4\xaa\xf0\x84\x8b\xc5\xa1\xb3\xc3\x0f\xa7\x60\xf1\xbe\x9b\xd2\x92\xbc\xbb\x3a\x9f\x7e\xe9\xdb\x76\xef\x0a\xbe\x5a\x63\x45\x67\x70\x03\xda\xbb\xc9\xf1\x77\x82\x14\x7c\xb5\x22\xac\x24\xe5\xe4\xf8\x0f\xf1\x7e\x35\x3f\xf6\xd4\x5f\x52\xe0\x5c\x9d\x4f\xdf\x9d\x3e\x9f\xbe\x3b\x3a\xfe\xee\xdd\x0f\x67\x3f\xbe\x1b\xd2\x34\xfe\x37\xc7\x4f\xbe\x75\xdf\x3c\xfe\xee\x1b\x0f\xa0\x53\x8b\xef\x9c\x5a\xcc\x02\x9b\xd4\x7d\x08\x0d\x69\xd0\x9d\x80\x1f\x3f\xf9\xd6\x7d\xda\x0e\xbd\x03\xbc\xdb\x22\x1f\xf8\x47\x37\x1a\x86\x4c\x86\x7b\x8c\x39\x28\x9f\x22\x02\x24\xfb\x42\xff\xe8\x22\x5c\x81\x31\x9c\xb3\xfc\x4c\xcb\x9c\x85\x77\xbf\x25\x66\xcc\xf2\xee\xe2\xfa\xa7\x5b\x4a\x41\xe2\x3e\x6e\x95\xcf\x99\x53\x3e\x7a\xaf\x6e\x0c\x9a\x68\x2d\xb5\x0f\x27\x3e\xaf\x22\x1e\xb6\x2e\xe5\xb9\x71\xdb\x7c\x1a\xb2\xbf\xaa\xca\x77\x33\x5c\xdc\xdc\x61\x51\xfe\x93\x13\xff\xb3\x1c\x8d\x02\xff\x04\x72\xd4\xff\x2c\x3d\xde\x0e\x35\xf2\xf1\xfc\xba\xff\x51\x12\xe8\xee\x10\xc3\xe0\xf4\xf4\xf3\xc9\xf5\xba\xff\x51\x12\xe8\xee\x10\xb7\xc9\xd3\x47\x47\x04\xe6\x36\xa8\x16\x81\x31\x26\xd8\x91\xf8\x21\xda\x24\xba\x6b\x66\x13\x81\xba\x3d\xe9\xce\xc6\x31\x2c\xda\x1f\x7d\x2a\xd1\x1d\xbf\x2d\x31\x7c\x4b\xa2\xbd\xd8\x30\xe0\x6d\xb5\xee\x30\x2e\xd0\x19\x38\x6a\x62\x67\x40\x67\x8d\x1b\xe7\x96\xda\x7b\x51\x10\x36\x92\xda\xdf\x40\x52\x56\xd2\x5b\x5a\xd6\xb8\xea\xa8\x8b\xf8\x99\x2f\x28\x91\xf6\x82\xef\xc9\xf6\x18\x7d\x87\x30\x16\x64\x07\xb8\xf2\x43\xb5\xd3\xeb\xd6\xb2\x7f\x97\xe5\x0c\xb3\x79\x4e\x4d\xff\x7a\xbc\x7a\xe3\xc2\x94\x19\xca\x81\x09\xb4\x27\x1b\xe3\xce\x35\xbe\x68\x53\x1c\x81\x46\xcb\xfb\x61\x09\xd1\x9d\xce\x51\x03\xf7\xff\x93\x5b\x52\xf1\xb5\x8d\x8d\x21\xef\xa9\x84\x98\x0a\xbf\xc9\x9c\xd7\x2c\x16\x22\x63\x7c\xc2\x94\x99\x4a\x6a\x13\x84\x9e\x91\x35\x61\x25\xe4\x0e\x31\xb4\x16\xa4\xa0\x92\x54\x1b\x1b\x38\xee\x43\x6d\xae\x71\x8c\x43\xc6\x7a\xfa\x05\x91\xd6\x61\x0f\xb1\x12\x7a\xb6\x10\x30\x54\xd6\x45\xa0\x14\xbf\xf3\xca\x0e\xb0\x09\x95\xed\xf6\xdc\x77\xfa\xb4\xee\x5a\x2f\xf2\x7d\x43\x14\xba\x23\xd1\x60\x74\x5c\xf2\xb5\x0d\x5c\xd2\x34\xe6\x0c\x49\x3e\x57\x77\x7a\x8e\x15\x9d\x09\x2c\x28\x89\x15\x55\x4b\x45\x04\xbd\xaa\x62\x41\x40\x3e\x4b\x47\x9a\x24\x90\x30\xb6\x0b\x30\x21\x2c\x76\x8d\x1b\x8a\xbc\x90\x0a\xab\xba\xe7\xc1\xea\x5e\xcd\x0f\x0d\x5c\x6c\xc5\x8a\x4b\x73\x77\x2e\x10\x85\xcf\xe0\xb0\xa8\x74\x8d\xac\x87\x68\xab\x7a\x6f\x57\xca\xc4\x7d\x9a\x0d\xbb\xbd\xce\x0b\x0a\xdf\x6a\x0f\xdc\xd0\x44\x84\x37\xc3\x6b\x6f\x23\x75\xf1\xdf\xa1\xa3\xaf\xa2\xe0\x02\x16\x45\xf4\xd4\xc4\xcb\x72\xfc\x98\x71\xe2\x05\x67\xe6\x10\x79\x68\xbe\xa3\xb6\x65\x37\x32\xc9\xfb\xdd\x1e\xab\x50\x61\x89\x12\x09\xb9\x3a\x6d\x50\xe2\xee\x27\x1d\x98\x30\x74\x98\x10\x07\xba\x5f\x13\x3a\xa6\x51\x08\x61\x67\xf0\x9b\x03\xea\x8e\x0c\x25\xda\xa3\x13\x72\x80\x26\x76\x78\x5b\x34\x0c\x1d\xcb\xfd\xbd\xc6\x95\x44\x13\xad\x76\x26\x8e\x84\xfb\x56\xfc\x6a\x31\xa5\xff\xbf\x39\x88\xf7\xb1\x01\x22\x2d\xe8\x8e\x32\xe9\x8a\xf6\x7e\x30\xc7\xbd\x90\x42\x11\xc2\xc3\x9c\x60\x65\xee\x99\x65\x25\xdc\x90\x0a\xba\x90\x86\xe3\x9b\x60\x57\xf2\x15\x3a\xe7\xb8\x7c\x8a\x2b\xcc\x0a\x22\x7e\xc4\x0c\x2f\x48\x69\xf6\x13\xa2\x26\xee\x62\xd7\xe6\xde\x61\x6f\xd0\x21\xe4\x0a\x4d\x27\x65\xb6\x38\x5f\x99\xcb\x4b\xdd\x55\xa8\xeb\x7a\x56\x51\x09\x99\xa0\x36\x04\x64\xd3\x9e\x58\x61\x17\xce\x17\x00\x5a\x71\x5c\xa2\x99\x1d\xe0\x04\x86\xf6\x3d\xae\x24\x8c\x0d\xb3\x8d\x59\xcd\x5c\x92\x0e\x77\x09\xa2\x37\xab\x58\x51\x39\xa7\xe1\xd3\xf4\xc0\xec\x5f\x13\x5c\x6e\xb2\xe6\x1e\xb9\x77\xd1\x9b\xfb\x69\x77\xdc\x9a\x2d\x57\x06\xb9\x13\x0f\x3b\xfd\x36\xc1\x13\x43\x5c\x6e\xee\x39\xed\x70\x94\xeb\xb5\xee\xfd\xd9\xc5\x74\x17\x62\xf7\x48\x1b\x80\x3a\x48\x6c\xcd\x92\xeb\x0a\x2b\x2d\x80\x9c\x8e\xd4\xc3\x98\x24\x41\x86\x16\x3b\x04\x19\xc3\x09\x3a\x51\x0e\x9b\x25\x4b\x86\x02\x84\x4e\x3b\xdb\x5b\x99\x9f\x5d\x4c\xd1\x2f\x9c\xc1\x8d\xbb\x1f\x97\xbd\x9e\x5d\x4c\x77\xe3\xaa\x34\x92\xf5\x40\xb7\x39\x49\xff\x2a\x88\x56\x0b\x12\x2d\xf1\x2d\x41\x33\x42\x18\x92\x35\x5c\x59\x34\xaf\xab\x6a\x83\x0a\x93\xdc\x16\x1c\xe9\xbd\xa6\xbc\x6d\x84\x44\xcf\x98\x82\x29\xac\x67\x0e\xb4\x9e\x0f\x24\x82\x59\x11\xc7\x4a\x2c\xca\xb6\x67\x9b\x7e\x13\x1a\xf8\xd0\xa1\x63\x85\xa5\xba\x12\x98\x49\x00\x74\x45\xe3\xe5\xc7\x9d\x4e\x2c\xb1\x22\xe3\x84\xcd\x3b\x78\xba\x60\xab\x2f\xdf\x3b\xb2\x4a\x10\x2c\xe3\xa7\x04\x83\x9f\x87\xac\xa4\x1d\x3e\x4f\xdd\x76\x3f\xf0\x71\x46\x64\x52\xe8\xdc\xd0\x2c\xe5\x01\x73\xa2\x5d\xef\xb0\xbd\x2b\x94\xde\xc7\xb9\x1f\x19\xaa\x65\x20\x0d\x3e\x31\x5c\x27\xa4\x2e\x1b\x19\x35\xb5\x22\x6a\x60\x1c\xf1\x0f\x7b\x63\x6b\x44\x5e\x30\x15\x22\x38\xde\x34\x2f\x2f\xb9\x54\x17\x44\xdd\x71\x71\x93\xb1\xbf\xf6\x5a\xa3\x25\xaf\x4a\xe9\xed\x64\x9b\x9c\x9a\x17\x6d\xa3\x08\xc5\x53\xc2\x7c\x82\x2e\x4d\xf8\xaf\x09\x73\xd3\x32\xcd\xee\xe9\x3d\xb8\xf7\x88\x61\x33\xda\xde\xe9\xe3\x8c\xb9\xfa\xcd\xe3\x93\xed\x9a\x10\x91\xf9\xc6\x66\xe4\x5b\x08\x53\x63\xa5\x84\x41\x0c\x07\x41\xd8\x83\xd8\x29\x58\x98\xaf\xf5\x36\x3b\x37\x20\x22\xf0\x65\xe7\x5a\x04\x67\x61\xbf\xbc\xd4\x16\xe6\xc0\xcd\xa8\xc2\x7c\xaf\xb8\xdd\x4a\xdb\xbb\xed\xec\x7e\xa2\x6b\x93\xb4\x59\x59\x2e\x74\x09\xf4\xce\x73\x9c\xac\x99\x00\x3d\x04\x6e\x59\x36\xd1\x3d\x67\x2f\x9f\xbd\xd6\xbb\x61\x9b\xb4\x4e\x26\x8b\xc9\x01\x1a\x1d\x3d\x9a\xc0\xff\x1d\x7e\x37\xda\x1f\xba\x85\x36\x78\x39\x0c\xae\x2a\x64\x8c\x77\x87\x03\xeb\xeb\x70\xe7\xdf\x7b\x31\x33\xdb\x3d\x5b\xe1\xa5\xde\x75\xce\x23\x37\xbc\x47\xa3\x60\xee\xa9\x85\xb0\x53\xb9\x3c\x40\x84\x89\x18\x6f\x09\x67\x91\x47\x59\x17\x4f\x09\x98\xa8\x97\x44\xdb\x45\x65\xe2\xc3\xf6\x16\x8a\xbd\xbd\x37\x8f\xc6\x7f\x78\xfb\x1b\xfc\xaf\xf9\xf3\xc8\xfb\xfb\xf8\xcd\xa3\xf1\x37\xee\xef\x27\x6f\x1e\x8d\x9f\xbc\xdd\xbf\x9e\xec\xff\xfa\xf8\xf7\xdd\xbf\x3b\x74\x9f\x1c\x1d\xdb\x37\x8f\xdf\x3c\x1a\x1f\xbf\xdd\x4f\x5d\x77\x91\x15\x9f\xf2\xd1\xee\xa0\xb4\xfe\x44\x71\xd9\x88\x92\xdc\x58\x96\xed\x2f\xad\x54\x72\x89\xe0\x9d\xd5\x95\x62\x45\x66\x8c\x12\xbd\x42\x9a\x5c\x65\xbb\x42\x6b\x56\x12\x51\x01\x57\x52\x36\x17\x58\x2a\x51\x17\x70\x3d\xb8\xeb\x3e\x79\x99\xc3\x3d\x92\xa4\xb7\xa7\x95\xe8\xe0\xfe\x09\xd3\x1e\xfe\x33\xaa\x88\xe1\xbb\x81\xd0\xff\x2e\x69\xf0\x9d\x6c\x1d\xc5\xdd\x68\xd4\x26\xa0\x79\xe0\xf6\x4a\x64\xf7\xb8\x3e\x41\x4e\x7f\x9e\x76\x89\x1a\x4b\xf2\x1b\x80\x9b\x26\x80\x1e\xfc\x36\x5e\x87\x86\xba\x1b\xd6\xd1\x4e\xd7\x47\x15\x15\x96\x92\x16\xe7\x83\xfa\xda\x7f\x3a\x14\x09\x40\xd8\x5a\x36\x1d\x3a\x0d\x82\x47\x7d\xe5\x8f\x19\xd0\xc7\xf6\xd4\x77\x25\x58\x8d\x9f\x01\xb6\x6f\x13\x9c\x19\x80\xc3\x37\xfd\x64\x5f\x7e\x83\x10\x33\x56\xd3\x07\x20\x34\x00\xe1\x13\x21\xd4\xf6\xf4\xf1\x10\x7a\x71\xfe\xf4\xa3\x22\x33\xb5\x95\x69\x9f\xf0\xb1\x14\x54\x4a\xd1\x7f\xf3\xf9\xf6\xea\xce\x98\x1b\x94\x4d\xd6\x3b\x59\x88\x34\x74\x68\xdb\xca\x80\x70\xe5\x15\x68\xce\x65\x53\x6d\x75\x30\x38\x34\xfa\x0a\x5d\x8f\x2c\x0f\x5e\x8f\x4e\xd0\xa9\x63\x48\x30\x56\xd1\xd3\x1d\xc6\x6a\x4a\xbd\xdd\x10\x09\xbe\x50\xad\x52\x4a\x52\x50\x13\xcd\x88\x15\x22\x14\x5c\x8d\xc8\x96\x81\xc3\x4c\xae\xb9\xc8\x21\x70\x85\x37\x44\xa0\xbd\xab\xb3\xcb\xc3\xe9\xf4\x7c\x1f\x59\x4b\x1c\xa4\x9b\x8d\x92\xb7\x4d\x5e\x5c\x5d\x5d\x1e\xea\xff\x99\x26\x6d\x15\xf7\x68\xb1\x88\x7a\x2e\x14\x40\x71\xeb\x58\xb5\xd2\xd1\xc6\x5d\xa0\xe6\x88\xad\xe4\x85\x9c\xe0\x3b\x39\xc1\x2b\xfc\x0b\x67\x90\x8f\x7f\x0a\x7f\x3e\x3f\x9b\x1e\x42\xca\xa8\x3a\x74\x87\x58\x62\x51\xd3\x92\x1c\x6a\xe2\x8f\x1d\xf1\xc7\x26\x35\x1f\x2e\x1d\x2a\xaa\x59\xc6\x68\x2d\xad\x2e\xce\x9f\x1a\x3a\xb9\x7d\x59\x87\x4e\x1e\x15\x32\x40\x06\xe9\xa4\xf1\x81\x5a\x02\xf5\xd1\x9f\x8b\xd8\x7f\x3c\x5a\x59\x35\x4b\x6b\x28\x34\x18\x9f\xea\x9e\xb1\x5b\x15\x19\x2d\x2f\xce\x9f\x66\x8a\x9f\x8c\x5a\xb0\x79\x17\xad\x8d\x01\x60\xb2\x49\xa6\xc0\x1b\x16\x76\x1d\x41\xe7\xcb\xb9\x61\x53\x72\x00\x2d\xe1\x2d\x36\x72\x45\x12\xbc\xaa\x86\xa3\xd3\x9f\xa7\xa3\x03\x34\x3a\xfd\xa5\x16\x24\x59\xfc\x54\x3f\xa3\xa7\x58\x90\x1f\x89\xc2\x95\xfe\xe6\x87\xb3\x4b\xfd\x9f\x57\x6b\xc2\xa6\x0a\x17\x37\x36\xfb\x6e\xf4\xd3\x74\xbd\x24\x82\x8c\xd2\xfc\x3d\xcc\x2e\x63\x2d\xe8\x87\x5a\xe8\x71\x0f\xb4\x69\x06\x3d\xd0\xee\x87\xb3\xd4\xed\x62\x70\x64\xeb\xa6\x3a\xd0\xce\x62\x60\xa0\xd5\xcb\xa7\x3f\x66\x30\xda\x00\x6b\x0f\xb3\xf5\x00\x4b\x67\xb0\xb3\x2c\x78\x8a\x97\xbb\x47\xbe\xba\x6d\xaf\xa2\xa7\xf9\x0d\x72\xfc\xdc\xdd\xf5\xd9\x3b\x2e\xe9\x8a\xc2\x4c\xd0\x25\x97\x92\xce\x2a\xd2\xe1\xdf\xe7\xef\xf5\x66\x19\x57\x23\xc3\x7b\x70\x74\xae\xff\x19\x67\xbe\xa1\x38\x7a\x07\x22\xd1\xc4\x75\x3a\x80\xd4\x0f\xb8\x48\x0d\x50\x76\x1f\x57\x1d\xdc\xb2\xc1\x45\xa4\x06\x6b\xd7\x32\xb5\x4d\xe3\x2e\xba\x0b\xdb\x62\x1a\x3d\x07\x44\xf7\xf6\x49\xf6\x60\xdf\xcb\x2f\xb9\x16\xf4\x36\x2f\x27\xc0\xb6\x8c\x4f\xf5\xd2\x36\x70\x93\x89\x39\x21\x76\x99\xa2\x85\x79\xaf\xa9\xed\x1a\xb6\x05\x35\x2a\x03\x07\x7c\x26\x21\xc6\xd5\x72\x48\xd6\x0f\x68\xed\xd8\x80\x77\x55\xbf\xb0\x3e\x76\x12\x3b\xf1\x8f\xc0\x75\xd9\x83\x7f\x6e\x6a\x32\x77\x3a\x40\x8e\x03\x60\x87\xce\x5c\x51\x58\x6f\x47\x14\x53\x4b\xc3\x71\x07\xb5\x34\x6e\x05\x85\x29\x23\xc2\xed\x90\x12\x05\x0d\x4f\x83\x43\x83\x70\x22\x5b\x89\x52\x71\x87\x67\x9b\x1e\x1d\x8f\xea\x30\x8f\xa9\x4c\x7d\x92\x55\x9a\xda\x1e\xb8\xcb\x71\x3b\x52\xf7\xdb\xe1\x97\x5a\x66\x0e\x88\x4c\xe3\xe3\xe8\x9c\xc5\x1e\xf8\x75\xa1\xda\x43\xc9\xc6\xb5\x61\x8f\x2d\xe3\xc5\x41\xcc\xda\xb6\xe6\x6c\x08\x3b\x0f\xb5\x8c\x36\x02\xd1\x5e\x01\xec\x9d\x7d\xc6\x79\xad\xe9\xd9\x2c\x1b\xd6\x1e\xf8\xba\xfb\x7e\xd1\x6c\x73\x8f\x23\x64\xfd\x98\x68\x0f\xa0\x53\xf1\x57\xce\x4c\x34\x89\xfd\xd1\x2c\x4a\xfd\x2b\x70\xdc\xcf\x3e\x6e\xcc\x90\x12\x95\x0b\x3a\x71\x65\x6d\x4c\x19\x4c\xc1\xd6\x1f\x3b\xfd\x79\x7a\x60\xec\x12\x63\x0f\xfd\x70\x76\xd9\x1c\xb1\xa7\xaa\xd4\x7d\xe5\x1f\xd3\xe4\x2c\x37\xdd\xa1\x96\xe1\x51\xba\x09\x25\xd1\x1d\x04\xb9\x44\x00\x50\xd9\xa4\x9d\x7f\xb2\xd5\x67\x4a\xf6\x35\xec\x7c\x60\xee\xd2\x8e\xc1\xe4\xe6\xd6\x23\x33\xf6\xef\x1e\x01\x02\xbf\xf9\xe6\xb1\xa9\xd5\x50\x4b\x33\x66\x7b\xdb\x3c\xd8\x02\x5a\x7e\xbb\xe1\xc6\xed\x24\xcc\x5a\x16\xed\x1e\xa5\xf4\x96\x73\xb6\x50\xbb\xa5\xb8\xbd\xa4\x09\x86\x3b\x31\x44\x74\x8a\xe4\x9a\x41\xfd\x16\x08\x30\x0c\xf4\x10\x01\xdb\xbf\xc8\x2a\x48\x90\xdd\x46\x9a\x23\x0e\x0d\xa7\xda\x70\x48\x77\x25\x57\x34\xb1\xd1\x4e\x47\x33\x4d\x43\x16\x38\x56\x5a\x61\x56\xe3\xaa\xda\x0c\xa0\x34\xb9\x08\x7a\x76\x41\xd6\x42\x48\x15\xbc\xef\xe8\x1d\x07\x3c\x43\xe7\x24\x92\x50\xef\xab\x73\xd0\x69\x33\x80\x08\xe4\x9d\xf4\x0d\x20\xbf\x71\x46\x0f\x4a\x02\x08\x06\xde\x30\xbc\xa2\x05\xd0\x08\x57\x15\x37\x37\xee\xcf\x36\x66\x67\xa3\x65\xeb\x1f\xd1\x92\xdf\x91\x5b\x22\x20\x97\xd6\x4a\xb8\xd8\xbe\x40\x61\x45\x0b\x00\xef\xa0\x99\x52\x2e\xc0\x11\x26\x64\xb9\x39\xc1\x6c\x16\x8a\x71\x99\x47\x40\xda\x28\x50\xa7\x1a\xfa\xf4\x32\x5a\x0b\xaa\x5c\x89\xdb\x68\xbe\x53\x2a\xea\x36\x60\xda\x44\x5a\x0e\x1d\xc6\x8f\xdd\x52\x8f\xbc\xcd\x31\x9e\x93\xfb\x84\xf8\x1e\x21\xb2\xa5\x4b\x98\x94\x2e\x9c\xf5\x07\xc2\x6c\xb1\xe9\x81\xb8\x8a\xed\x0f\x02\x61\xbc\x68\xd1\xbe\x75\x1f\x24\x83\x5b\x03\x95\xb7\x53\xc1\xad\x32\xaf\x50\xa1\x7f\x61\x1c\xee\x95\xb6\x3b\xd0\x96\x85\x2d\xf8\xe5\x2e\x44\xf7\xea\x8d\x04\xa8\xe2\xad\xea\x35\x07\xe7\xbc\x30\x0a\xc7\x8f\xef\xdd\x0e\x53\x86\xd5\x68\xe2\x87\x03\x40\x5d\xc5\x23\x0d\x02\xa0\xda\x23\x7c\x88\x4e\xf5\x8a\x76\xf3\xf9\x76\x60\xf2\x4e\x81\x34\xaa\x92\x79\xd5\x84\xda\x86\x8e\xb0\xdd\xa2\x41\xfd\xda\x30\x26\x59\x3f\x30\x35\xca\x6c\xa5\x9d\x5d\x03\x68\x92\xd5\x27\x3e\x49\xe5\x89\xfb\x56\x9d\x40\xab\x44\x01\xb2\x8f\x5d\x71\xe2\x13\x54\x9b\x48\x06\x40\x64\x66\xe7\x47\xab\x9c\x0d\x57\x97\xb8\x7f\x65\x09\x57\xc4\x21\xad\x2d\xf2\xab\x4a\xf4\x48\x1c\x01\x9b\x5d\x51\x22\x50\x37\x22\x66\xda\xec\x50\x4e\x22\x5e\x34\x22\x66\xe2\xec\x52\x4a\x22\xa5\x1c\x07\x4b\x48\x64\x94\x8f\xc8\x28\x1d\x91\x51\x36\xe2\x23\xe6\xa9\x6c\xfd\x68\xf4\x94\x17\x8f\x22\x15\x17\x78\xe1\x47\xa8\xc8\x7a\xd6\xe4\x1c\x38\x64\xc9\x02\xfb\x42\x15\xd4\x8c\x2b\x8e\x7b\x89\xd5\xf2\xa4\x49\x4b\xd8\xba\x2f\x52\x73\xb6\x93\xe6\xae\xa9\x9f\x8e\xd0\x36\x04\x00\xfd\xa6\xe9\x64\x07\x1b\x5f\x8a\x7e\xfd\xfd\x8b\xff\x1b\x00\x00\xff\xff\xf2\xbc\xbb\xbd\xef\x02\x01\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 66287, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb5, 0xf, 0x14, 0x41, 0xe6, 0xdc, 0x93, 0x27, 0xca, 0x71, 0xc, 0xc0, 0xdb, 0x57, 0x74, 0x3e, 0xfe, 0xd7, 0x17, 0xc5, 0xe6, 0x9d, 0xcb, 0x27, 0xdf, 0xcb, 0x5e, 0xf8, 0xf3, 0x42, 0x82, 0x33}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4d\x6b\x1b\x31\x10\xbd\xef\xaf\x10\x3e\x16\xb4\x69\x28\x85\xa2\x5b\xe2\x96\xf4\x90\x43\x70\xa0\x85\xde\xc6\xd2\xf3\x7a\x88\x3c\xb3\x95\x66\x5d\xda\x5f\x5f\xd6\xde\x6c\x92\xfa\x50\x72\x4b\x20\x37\x69\xde\x7c\xbe\x79\x43\x3d\x7f\x43\xa9\xac\x12\x5c\xcc\x3a\xa4\x58\x90\x20\xc6\x94\x5b\xed\x21\x75\xcb\x1b\x6b\x59\xcf\xf6\xe7\xcd\x1d\x4b\x0a\x6e\x39\x3b\xd4\x15\x7e\x0e\xa8\xd6\xec\x60\x94\xc8\x28\x34\xce\x65\x5a\x23\xd7\xf1\xe5\x5c\x54\xb1\xa2\x39\xa3\x78\x53\xcd\xb5\xbd\xfb\x54\x5b\xd6\xe0\x16\xe7\xed\xfb\x45\xe3\x9c\xd0\x0e\xc1\xcd\x75\x3c\x4b\x57\x50\xeb\x84\xd4\x9e\xe2\x13\xf8\xd0\xa0\x7f\xe8\xd0\x6b\x8f\x42\xa6\xa5\x71\x8e\x44\xd4\xc8\x58\x65\x2a\xce\x12\xf3\x90\xd0\x16\x64\x50\xc5\xd3\x69\x78\xbd\x9b\xb2\xed\x48\xa8\x43\x0a\x6e\x61\x65\xc0\xe2\xff\xa1\x15\x79\x73\x1f\xe5\xb7\xdc\x6d\x3d\xed\x89\x33\xad\x39\xb3\xfd\x7e\x46\x1e\x96\x2e\xc3\x8b\x26\xf8\x84\x3d\xf2\x38\xcc\x1c\x5e\x7b\xc4\x71\x8e\x8a\x58\x60\x2b\x6c\x8e\x43\x1d\x09\xfb\x97\x87\x3a\x63\x27\x94\x4d\x8c\x3e\x66\xaa\x2f\xba\xe7\x84\x72\x3b\x95\x70\xee\x39\x22\x18\xfd\x8f\x42\xb8\xf8\x7e\x7b\xf3\x28\xd5\x01\xa9\x46\x86\x1d\xc4\xbe\x88\x15\xc6\xb4\x0a\xef\xb0\xd9\x20\x5a\x70\x17\x39\xeb\xaf\x83\xcd\x39\x8a\xe3\xb6\xc2\xf4\xf3\x0e\x99\xaa\x71\xcc\x4a\x69\x4d\x99\x24\xb2\x74\xe1\x33\x6a\x2c\xbc\xc6\xb5\x52\xba\x3c\x58\x51\xea\x1c\x52\x74\x30\x7c\xfc\x10\xae\xb9\xda\x57\xad\x86\xf4\x43\x05\xa7\xf8\x72\x4b\xd2\x61\x85\xaa\x43\x89\x58\x21\x6a\x49\xb7\xb0\x07\x47\xa3\x2e\x5c\x8d\x3c\x1f\x3d\xee\x81\x32\xfd\x83\x5b\xbc\x5b\x34\xde\xfb\xe6\x45\xde\x8b\xa7\x3f\x43\xc1\xdb\xd5\xbc\x8a\xab\x19\x57\x75\x72\x37\x45\x33\x2e\x59\x12\x4b\x37\xdf\xcc\x68\x0b\x6e\x39\x6a\x82\xd7\xc3\xd8\xc5\xcb\x15\x60\x17\xfb\x37\xf9\xbd\x06\xf9\x5d\x2d\x6f\x4e\xc4\xd7\x8f\x81\x1b\x16\xa4\x95\x66\x3c\xd1\x5f\x3d\x4b\x52\x5b\x4a\x3b\x96\xe6\x6f\x00\x00\x00\xff\xff\xe6\x43\x97\xee\x2b\x08\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 2091, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xe6, 0x3b, 0x5a, 0xad, 0x44, 0x85, 0x7c, 0x7b, 0xa2, 0xc1, 0xbc, 0x39, 0xd1, 0x9f, 0xf2, 0x2c, 0x0, 0x97, 0xd2, 0x90, 0xba, 0x84, 0x78, 0x3d, 0x53, 0x1e, 0x3c, 0xa5, 0xa2, 0xd5, 0xda}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbd\x4e\xc4\x30\x10\x84\xfb\x3c\xc5\xea\xa8\x7d\x88\x36\xef\x00\x0d\x12\xfd\xc6\x9e\x4b\x96\xdb\xec\x46\xf6\x26\x88\xb7\x47\xe1\xf7\x4e\x14\x88\xd2\xf2\xf7\x8d\x67\x7c\x16\x2b\x3d\x3d\xf0\x8c\xb6\x70\x46\xc7\x8b\x3c\xa1\x36\x71\xeb\x69\xbb\xeb\x66\x04\x17\x0e\xee\x3b\x22\x36\xf3\xe0\x10\xb7\xb6\x1f\x89\xc4\xb2\xae\x05\xc7\x0a\x05\x37\x1c\x7d\x81\xb5\x49\x4e\x71\x14\xbf\x95\x61\x4e\x59\x7d\x2d\x69\x66\xe3\x11\xa5\xa7\x43\xd4\x15\x87\xbf\xd5\x06\x3d\x7d\x59\x69\x92\x71\x4a\xbc\xb1\x28\x0f\xa2\x12\xaf\xff\xc8\x11\x1b\x15\xc9\xbc\x20\x15\x6c\x50\x5f\x50\xaf\xf4\x2b\xfc\x9d\x6b\x50\xe4\xf0\x1d\xdb\x11\xe5\x01\xfa\x39\xf7\x86\x58\xd5\x5f\x7e\xa4\x34\xbb\x49\x78\x15\x1b\x29\x9c\xd4\xfd\x4c\x27\xaf\xf4\x88\xba\x49\xc6\xfd\xc7\x2d\xf9\xf0\x8c\x1c\x8d\xc4\x28\x26\x69\x64\xdf\x9f\xfd\xab\x42\xd6\xb5\x05\xea\x45\xf0\x45\xdd\xdd\xeb\x2f\x5e\x17\x1b\x2b\x5a\x4b\xfb\x2a\x0e\xaf\xdd\x5b\x00\x00\x00\xff\xff\xf3\x6d\xcd\x4e\xcc\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 460, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0x9f, 0x94, 0x30, 0xaa, 0xa1, 0x68, 0x75, 0x90, 0xb6, 0xce, 0xbd, 0xa2, 0xc2, 0x38, 0x1f, 0x66, 0x20, 0xd8, 0xff, 0xe9, 0x64, 0xb, 0x66, 0x3f, 0x7d, 0xdc, 0x87, 0x6c, 0x1, 0x83, 0xaf}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x6e\xe3\x30\x10\x44\x7b\x7d\x05\xe1\x9e\x3a\x5c\x67\xe8\x07\xae\xbf\x22\xfd\x8a\x1c\x4b\x0b\x53\xbb\xc4\x2e\xa9\x20\xf9\xfa\x40\xb2\xe3\x36\x48\xc5\x99\x01\xdf\x90\x43\x95\xdf\x60\xce\x2a\x53\xb0\x99\xd2\x48\xbd\xad\x6a\xfc\x49\x8d\x55\xc6\xfb\xd5\x47\xd6\x3f\xfb\xdf\xe1\xce\x92\xa7\xf0\x5f\x0b\x86\x0d\x8d\x32\x35\x9a\x86\x10\x84\x36\x4c\xa1\x9a\x6e\x68\x2b\xba\xc7\xfb\xd5\x9f\xb1\x57\x4a\x98\x82\x56\x88\xaf\x7c\x6b\x91\x65\x31\xb8\x47\xad\x30\x6a\x6a\x43\x08\x24\xa2\xed\x7c\xca\x8f\xb6\x10\x58\x52\xe9\x19\xa3\xa1\x80\x1c\xe3\x8b\x3e\xbe\xc1\xf3\x16\x53\xd1\x9e\xe3\x46\x42\x0b\xf2\x14\x2e\xcd\x3a\x2e\x3f\xa3\x8e\x72\xfb\xa6\xe2\xca\xcb\x1a\x69\x27\x2e\x34\x73\xe1\xf6\xf1\x8b\x1e\x96\xa5\x20\x8a\x66\xc4\x8c\x1d\xe5\x18\xf3\xc2\xad\x17\xf8\x34\xc4\x40\x95\xff\x99\xf6\x7a\xae\x8a\xe1\x72\x34\x1b\x5c\xbb\x25\x3c\x33\x87\xed\x9c\xe0\xa7\x81\xe4\xaa\x2c\xed\xe1\xaa\xe6\x43\xec\xb0\xf9\x79\x79\x41\x3b\xcf\xc2\xfe\x10\xef\xd4\xd2\x3a\x7c\x05\x00\x00\xff\xff\xd4\x51\x0b\x8b\xbe\x01\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 446, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8e, 0x67, 0x17, 0x1c, 0x94, 0x5d, 0xc8, 0xab, 0xca, 0xc9, 0x7d, 0x84, 0x11, 0xc2, 0x9, 0xca, 0x66, 0x54, 0x72, 0x2b, 0xbf, 0x32, 0x26, 0x14, 0x99, 0x60, 0xe9, 0xfd, 0x6f, 0x53, 0x46, 0xe7}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x85\x90\x5d\xfe\xf1\x6f\x81\xb6\x76\xe9\x9e\x02\xdd\x69\xe9\x62\xb3\x91\x49\x41\xa2\x0c\xb4\x4f\x5f\xb8\x48\xd3\xa9\x2d\xb2\x12\xfc\x8e\xbc\x3b\x2a\xfc\x82\xda\x58\x25\xb8\x3a\x51\x1c\xa9\xdb\xa2\x95\xdf\xc9\x58\x65\xbc\x1c\xdb\xc8\xfa\x6f\xfb\x3f\x5c\x58\x52\x70\x27\xcd\x78\x64\x49\x2c\xf3\xb0\xc2\x28\x91\x51\x18\x9c\x13\x5a\x11\x5c\xa9\xba\xc2\x16\xf4\xe6\x2f\xc7\x76\x1d\xb7\x42\x11\xc1\x69\x81\xb4\x85\xcf\xe6\x59\xe6\x8a\xd6\xbc\x16\x54\x32\xad\x83\x73\x24\xa2\xf6\x79\xb1\xed\x6a\xce\xb1\xc4\xdc\x13\xc6\x8a\x0c\x6a\x18\x6f\xf4\xfe\x0d\x4f\xab\x8f\x59\x7b\xf2\x2b\x09\xcd\x48\xc1\x1d\xac\x76\x1c\xfe\x46\x1b\xf2\xf9\x8b\xf2\x0b\xcf\x8b\xa7\x8d\x38\xd3\xc4\x99\xed\xed\x0e\x1d\x96\x39\xc3\x8b\x26\xf8\x84\x0d\x79\x37\x73\xc3\xab\x66\x9c\x70\xde\xad\x50\xe1\xa7\xaa\xbd\xfc\x92\xee\xe0\xdc\x77\xb8\x3f\x65\xd9\xfa\xf4\x8a\x68\x2d\x0c\xfe\xba\xfd\x8c\xba\x71\xc4\x43\x8c\xda\xc5\xee\xec\x60\x55\x61\xd3\xba\xd7\xf8\x11\x00\x00\xff\xff\x60\xe1\x61\x52\x02\x02\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 514, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x68, 0xff, 0x4f, 0x6e, 0xb5, 0x4, 0x58, 0x82, 0xc4, 0x69, 0xe3, 0xcb, 0xe6, 0x96, 0xf6, 0x18, 0x28, 0x2b, 0x43, 0x8, 0x7a, 0xde, 0xb9, 0xe, 0xa0, 0xb4, 0xca, 0x4f, 0x9e, 0xc8, 0xa1}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xb1\xae\xd5\x4c\x0c\x84\xfb\xf3\x14\xab\xdb\x6f\xf2\xff\xa2\x4b\x8b\x44\x05\x34\x20\x7a\xc7\x99\x9b\x2c\x67\x63\xaf\x6c\x27\x12\x6f\x8f\x92\x9c\x73\x2b\xae\x10\xed\xec\xcc\xe8\xf3\xda\xd4\xca\x0f\x98\x17\x95\x21\xad\x2a\x25\xd4\x8a\xcc\x1d\xab\x41\xbd\x63\x5d\xfb\xfd\xff\xdb\xbd\xc8\x34\xa4\x6f\xb0\xbd\x30\xbe\x5c\xae\xdb\x8a\xa0\x89\x82\x86\x5b\x4a\x42\x2b\x86\x54\x64\x36\xb8\x67\x6d\x30\x3a\x2c\xd7\x83\x37\x62\x0c\x49\x1b\xc4\x97\xf2\x1a\xf9\x0f\x3e\x12\xd1\xa0\x28\x2a\x7e\xf4\xa5\x54\x84\xeb\x36\xa1\x33\x54\x90\xa3\x7b\x4b\x77\x45\xfb\x32\xae\x99\xab\x6e\x53\x5e\x49\x68\xc6\x34\xa4\x97\xb0\x0d\x2f\x7f\x8f\x3a\xea\xeb\x33\x95\x97\x32\x2f\x99\x76\x2a\x95\xc6\x52\x4b\xfc\xfa\x87\x9e\x22\x73\x45\x16\x9d\x90\x27\xec\xa8\xc7\x30\x6f\x71\x6f\xe0\x63\x0e\xc8\xd4\xb4\x48\x9c\x43\xe5\x34\x82\x0c\xf6\x5d\xef\x90\x4f\xa5\x62\x48\xfd\x4e\xd6\xdb\x26\xbd\x83\x0d\xe1\xfd\x7d\x1b\x61\x82\x80\x5f\xb0\xe7\x8f\x13\xb3\x6e\x12\x7d\x1c\xc1\x07\x5a\xc0\x76\xaa\x43\xfa\xf0\x9f\x9f\x4a\x53\x8b\x21\xad\x08\x2b\x7c\x29\xce\x0b\x8e\xad\x2c\x11\xed\x52\xa2\xfa\x47\x95\xd7\x32\x5f\x5f\x9c\x12\xd3\x03\x03\xc1\x7d\x33\x5d\x11\x0b\x36\xef\xf9\x74\xad\xd4\xfc\x42\x90\x39\x33\x2c\x3c\x33\xe5\x71\x93\xa9\xe2\x89\x96\x99\x3a\xb6\x78\xf4\x1d\x22\xec\xeb\x79\x0c\x0f\x94\xee\xfd\xb5\x77\xbe\xf3\x2d\xa5\x9f\x3a\x7e\xa6\x11\x75\x48\xac\x6b\x53\x81\x1c\x75\x8e\x0a\x0e\xb5\x0b\x75\xa5\xe0\xe5\x74\xf9\x93\xfd\x9d\x93\xfb\x1d\x00\x00\xff\xff\x68\x04\xae\x7e\xd0\x02\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 720, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0x4b, 0xff, 0x49, 0x38, 0x10, 0xe4, 0x67, 0xd6, 0xc6, 0xdd, 0xa4, 0x43, 0x7d, 0x5c, 0x40, 0x32, 0x5d, 0x7f, 0xdb, 0x15, 0xa3, 0xa7, 0xfc, 0x28, 0xd2, 0x7e, 0x6f, 0x35, 0x5a, 0x6e, 0x73}}
	return a, nil
}

var _manifests0000_90_ingressOperator_03_prometheusrulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x3f\x6b\xdc\x40\x10\xc5\xfb\xfb\x14\xc3\x91\x56\x72\x5c\xa4\x11\xb8\x08\x84\x90\xd2\xb8\x48\x7b\x8c\xb5\xef\xa4\x21\xbb\x3b\xcb\xec\xe8\xce\x87\xf1\x77\x0f\xfa\xe3\x23\xc4\x09\xc1\xd9\x4a\xcb\xbc\x37\x7a\xef\xb7\x5c\xe4\x3b\xac\x8a\xe6\x8e\x92\x66\x71\x35\xc9\x43\xdb\xab\x41\x6b\xdb\x6b\xba\x39\xdd\xee\x7e\x48\x0e\x1d\xdd\x9b\x26\xf8\x88\xa9\x3e\x4c\x11\xbb\x04\xe7\xc0\xce\xdd\x8e\x28\x73\x42\x47\x92\x07\x43\xad\x8d\x16\x18\xbb\xda\x36\xa8\x85\x7b\x74\xa4\x05\xb9\x8e\x72\xf4\xe6\x0f\xba\xc8\x8f\x88\x75\x5e\x45\x64\x1a\xd1\x11\x47\x98\x37\x36\x45\xd4\x1d\x11\xe7\xac\xce\x2e\x9a\x37\x91\xe4\x3e\x4e\x01\xad\x21\x82\x2b\xda\xeb\xf6\x56\xf4\x46\x1e\x53\xd3\x47\x9d\x42\x93\x38\xf3\x80\xd0\xd1\xde\x6d\xc2\xfe\xdf\xd6\x8a\x78\x7c\x75\x35\xa3\x0c\x63\xc3\x27\x96\xc8\x8f\x12\xc5\x2f\xef\xd8\x23\x79\x88\x68\xb2\x06\x34\x01\x27\xc4\xb9\xec\xd5\x5e\x0b\xfa\xb9\xc7\x60\x3a\x95\xad\x51\xb3\x51\x7c\xc3\xa9\x7d\x85\xb0\xc0\x99\xbf\xbb\xed\xd2\xac\x94\x3a\xfa\xf6\xf9\xde\xf4\xe9\xf2\x80\xa8\x1c\xbe\xb2\xc4\x4d\x40\x84\xa7\x62\x1d\x39\x52\x89\xec\x38\x98\x4e\x0e\x3b\xd8\x22\x3c\x1c\x59\xe2\x64\xa0\xbb\x3b\xba\xbd\x3a\x8e\x6a\x1d\x7d\x4a\xd7\xfb\xaf\x4f\xb3\x9e\x8a\x13\x6c\xa1\x71\x66\xcb\x92\x87\xeb\xec\xcd\x33\xad\x27\xa1\x56\x1e\xd0\xd1\x7e\x0b\x4a\x6b\x80\x4a\x6c\xa0\x39\x85\xe4\x81\x34\xd3\xf3\x33\x7d\x58\xff\xd7\x16\x0d\xf4\xf2\xd2\xd2\xc3\x92\x98\xa4\x52\x56\x27\xc3\x8c\xce\x67\xb9\xa1\x47\xf6\x78\xa1\xde\xc0\x8e\x40\x6a\x94\x34\xc8\x51\x10\x68\xe9\x59\xf7\x7f\xe1\xf4\x45\xcf\xf9\x37\x42\x23\x97\x79\x72\x98\xca\x4c\xe3\xe3\x7f\xd1\xe8\x4d\x5c\x7a\x8e\xef\xc7\x91\xe0\x26\xfd\x8a\xc3\x50\xd4\x96\x86\x3e\xb2\x93\x8f\x58\xdb\x2c\x0c\x82\x9e\xf3\x7e\xf7\x33\x00\x00\xff\xff\x2a\x3f\xd3\xf7\xb5\x03\x00\x00")

func manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_03_prometheusrulesYaml,
		"manifests/0000_90_ingress-operator_03_prometheusrules.yaml",
	)
}

func manifests0000_90_ingressOperator_03_prometheusrulesYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_03_prometheusrules.yaml", size: 949, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x3f, 0x26, 0xdd, 0x1c, 0x1a, 0xe6, 0xa6, 0x3, 0x6e, 0x36, 0x99, 0x7d, 0x78, 0x7c, 0x43, 0x71, 0x1a, 0x24, 0x72, 0x8c, 0x20, 0x54, 0x4d, 0xb, 0xb7, 0xf6, 0x43, 0xcc, 0xa8, 0x5a, 0xcd}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xbd\x4e\xec\x30\x10\x85\xfb\x3c\xc5\x68\x6f\xed\x5c\xdd\xee\x2a\x1d\x50\xd0\x2f\x12\xfd\xc4\x9e\x4d\x86\x75\x66\x22\xcf\x38\x12\x3c\x3d\x32\xfb\xd3\x80\x16\xa8\xed\xef\xe8\xcc\x77\xfe\xc0\x3d\x4b\x32\xf0\x99\x40\x57\x2a\xe8\x5a\x20\xe6\x6a\x4e\x05\x8a\x66\x02\x57\x60\x37\x78\xa2\xb2\x71\x24\xb8\x8b\x51\xab\x78\xdf\x1d\x59\xd2\x00\x0f\xa7\xaf\x7b\xcd\xd4\x82\x58\xa6\x0e\x57\x7e\xa6\x62\xac\x32\x40\x19\x31\xf6\x58\x7d\xd6\xc2\x6f\xe8\xac\xd2\x1f\xff\x5b\xcf\xfa\x77\xfb\xd7\x2d\xe4\x98\xd0\x71\xe8\x00\x04\x17\x1a\x5a\x03\xb1\x99\x0f\x1e\x58\xa6\x42\x66\xe1\xd2\xa9\x03\x40\x11\xf5\x8f\x0c\x6b\x04\x00\x4b\xcc\x35\x51\x5f\x28\x13\x1a\xf5\x57\xba\xe5\xf3\xb8\x84\x98\xb5\xa6\xb0\xa0\xe0\x44\x69\x80\x9d\x97\x4a\xbb\xef\x51\xa3\x7c\xb8\x50\x61\xe6\x69\x0e\xb8\x21\x67\x1c\x39\xb3\xbf\xfe\x22\x87\x65\xca\x14\x44\x13\x85\x44\x1b\xe5\x76\xcc\x15\xb7\x3a\xbe\x50\x74\x1b\xba\x00\x27\x97\x67\xc5\x67\xc3\x57\x29\x5f\xa8\x68\x0f\xb6\x62\xbc\xad\xac\xcd\xb7\xa7\x43\x93\xf5\x69\xac\xe6\x73\xe5\xc7\xa2\x75\xbd\xb1\xd2\x4f\x86\x79\x0f\x00\x00\xff\xff\x73\x86\x17\xa7\x42\x02\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 578, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0xa8, 0x1b, 0xcf, 0x90, 0x46, 0xd8, 0xa8, 0x3f, 0xbd, 0x3c, 0x91, 0xc6, 0xa1, 0xd8, 0xd5, 0xe2, 0x9e, 0x8, 0xa6, 0xe3, 0xe2, 0xab, 0x1, 0xb5, 0xb8, 0xb3, 0xd2, 0x9b, 0x4c, 0xa2, 0xa4}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x3f\x4f\xc4\x30\x0c\xc5\xf7\x7e\x0a\xeb\x98\x53\xc4\x86\xba\xc1\xc2\x7e\x48\xec\x6e\xe2\x6b\xcd\xa5\x76\x15\x3b\x95\xe0\xd3\xa3\xc0\xdd\xb1\xf0\x47\x88\x39\xf9\xbd\x97\xfc\xde\x15\xdc\xb3\x24\x03\x9f\x09\x74\xa5\x82\xae\x05\x8a\x66\x02\x57\x60\x37\x78\xa4\xb2\x71\x24\xb8\x8b\x51\xab\x78\xdf\x1d\x59\xd2\x00\x7b\xcd\xd4\x48\x96\xa9\xc3\x95\x9f\xa8\x18\xab\x0c\x50\x46\x8c\x3d\x56\x9f\xb5\xf0\x2b\x3a\xab\xf4\xc7\x5b\xeb\x59\xaf\xb7\x9b\x6e\x21\xc7\x84\x8e\x43\x07\x20\xb8\xd0\x00\x2c\x53\x21\xb3\x70\xae\x3e\x1d\xd8\x8a\x91\x86\xf6\x20\xb1\x99\x0f\x1e\xbe\xb8\x87\x22\xea\xef\x0d\xd6\xf2\x00\x58\x62\xae\x89\xfa\x42\x99\xd0\xa8\xbf\xd0\xad\x9d\xc7\x25\xc4\xac\x35\x85\x05\x05\x27\x4a\x03\xec\xbc\x54\xda\xfd\x8e\x1a\xe5\xc3\x99\x0a\x33\x4f\x73\xc0\x0d\x39\xe3\xc8\x99\xfd\xe5\x0f\x39\x2c\x53\xa6\x20\x9a\x28\x24\xda\x28\xb7\xcf\x5c\x70\xab\xe3\x33\x45\xb7\xa1\x0b\xf0\xa1\xf8\x64\xfe\x24\xfe\xff\xca\xda\xaa\x7b\x3a\x34\x59\x9f\x1b\x36\x91\x2b\x3f\x14\xad\xeb\x0f\xe3\x7d\x5f\xfe\x16\x00\x00\xff\xff\x18\x82\x75\xd8\x40\x02\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 576, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xba, 0x3f, 0x67, 0xd3, 0xa3, 0xa6, 0x1d, 0x74, 0x2b, 0x8, 0xb1, 0x78, 0x91, 0xb8, 0x9a, 0xe1, 0xdb, 0x70, 0x2f, 0xff, 0x25, 0xcb, 0x5b, 0xe8, 0xb8, 0x7c, 0x64, 0xee, 0x4, 0x7a, 0x13, 0xa7}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x31\x6e\xf3\x30\x0c\x85\x77\x9f\x42\xf0\xbf\xfd\x80\x5c\x74\x2b\x7c\x81\xee\x1d\xba\xd3\x12\x6d\x13\x91\x48\x81\x92\x0c\xa4\xa7\x2f\xec\xc4\x46\x9a\x14\x08\xba\x89\xe2\x7b\x1f\x1f\xa5\x7f\xe6\x43\x02\x9a\x51\xd4\x94\x19\x8d\x24\x54\x28\xa2\x86\x4a\xc6\x30\x76\xcd\x89\xd8\xf7\x9b\xa6\x81\x44\x9f\xa8\x99\x84\x7b\xa3\x03\xb8\x0e\x6a\x99\x45\xe9\x0b\x0a\x09\x77\xa7\xb7\xdc\x91\xbc\x2c\xaf\x4d\xc4\x02\x1e\x0a\xf4\x8d\x31\x0c\x11\x7b\x43\x3c\x29\xe6\x6c\x77\xfc\xb5\x91\x13\x38\xec\xd7\xa1\x9c\x67\x1a\x8b\xfd\x45\x07\xcc\x52\xb6\x09\x79\xe5\x19\x43\xec\x42\xf5\xd8\x29\x06\x84\x8c\xdd\xe1\x5e\xa7\xd3\x10\xad\x0b\x52\xbd\x8d\xc0\x30\xa1\xef\x4d\x5b\xb4\x62\xfb\xdc\xba\xee\xbb\xbb\xec\x4c\xd3\x6c\x61\x01\x0a\x30\x50\xa0\x72\xfe\x03\x87\x78\x0a\x68\x59\x3c\x5a\x8f\x0b\x86\x75\x99\xc3\xae\x35\x60\xee\x1b\x6b\x20\xd1\xbb\x4a\x4d\xdb\x56\xf6\x78\xf8\x1f\xac\xc6\x18\xc5\x2c\x55\x1d\x5e\x65\xed\xff\x35\xc1\x82\x3a\xdc\x5c\x3c\xd2\xda\xf6\xd1\x9a\xc4\xe7\xed\x90\x51\x17\x72\x78\x29\x90\x7d\x12\xe2\x72\xa9\xd2\xfa\xbf\xb9\x20\x97\x45\x42\x8d\xe8\x02\x50\xbc\x0a\x17\xdc\x55\x4e\x78\xa4\x29\x42\xda\x79\x4e\x71\x6b\x3d\xcd\x05\x69\xf3\xdc\x25\xf3\x98\x82\x9c\xe3\xc1\xbf\x09\x78\x47\xfc\x0e\x00\x00\xff\xff\x26\xc1\x89\x3d\xae\x02\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 686, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x14, 0xc, 0x8e, 0x2f, 0xa3, 0xc, 0x29, 0xb8, 0x31, 0x15, 0xe7, 0x7f, 0xae, 0x5e, 0x80, 0xad, 0x61, 0x94, 0x14, 0xb1, 0x13, 0x85, 0x79, 0x8a, 0x5d, 0x44, 0x29, 0x1e, 0x7c, 0x49, 0xd}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x05\x91\xcc\xf2\x8f\x7f\xd5\xd6\xb1\x73\x81\xee\x8c\x74\xb1\x89\xca\x94\x2b\x52\x06\xfa\xf6\x85\x82\x24\x53\x81\xa2\xb3\xee\xfb\xee\xc4\x33\xbd\xa4\x54\xbb\x3a\x5d\x6b\x23\x5f\x41\x75\x47\x63\xaf\x8d\xc4\x0d\xe5\x3a\xd3\xab\x93\xad\xb5\x97\x4c\x0d\x9f\x5d\x1a\x48\x79\x83\xed\x9c\x40\x96\xea\x8e\x3c\x9d\x69\x47\xdb\xc4\x4c\xaa\xda\x3c\x7d\x88\xe6\x48\x6f\x68\x87\x24\xdc\xfd\x13\xef\xf2\x8e\x36\x12\x91\x8e\xff\xd3\x06\xe7\xcc\xce\x71\xa2\x9b\x2f\x92\xe8\xd2\x60\x16\x1e\x03\xee\x0f\xb7\xa2\x38\x66\xa9\xad\x72\xf5\xf0\x43\x8e\x55\xab\xb3\x8f\xf6\xe1\x23\x12\x4d\xa5\x67\xcc\x0d\x05\x6c\x98\x9f\xf4\x2c\xf5\x9f\x5c\xb6\x90\x4a\xed\x39\x6c\xac\xbc\x20\x47\x3a\x79\xeb\x38\xfd\x8e\x8e\x8b\x3c\xa8\xb0\xca\xb2\x06\x3e\x58\x0a\x5f\xa4\x88\x7f\xfd\xc1\x23\xba\x14\x04\xad\x19\x21\xe3\x40\x19\x9f\x79\xe2\xdf\x01\x00\x00\xff\xff\xea\x53\x09\xdb\x95\x01\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0xd6, 0xa0, 0x7, 0xbe, 0xef, 0xb7, 0x45, 0x50, 0xfc, 0x8f, 0xe6, 0xd0, 0xb0, 0x87, 0xc1, 0x3c, 0x81, 0xfc, 0xc0, 0x9e, 0x1b, 0x9b, 0xf4, 0x4a, 0x3c, 0xb2, 0xd5, 0x23, 0x93, 0x1, 0xdd}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbf\x6a\x33\x31\x10\xc4\xfb\x7b\x0a\xe1\x5e\xf7\xf1\xe1\xca\x6a\x53\xa5\x33\x04\xd2\xef\xe9\xc6\xe7\x25\xba\x95\xd8\xdd\x3b\xf0\xdb\x07\xff\x4b\x48\x5c\x98\x94\xa3\xd1\x6f\x66\x24\x6a\xfc\x0e\x35\xae\x92\xc2\xfa\xbf\xfb\x60\x19\x53\x78\x83\xae\x9c\xd1\xcd\x70\x1a\xc9\x29\x75\x21\x90\x48\x75\x72\xae\x62\x67\x19\x02\x4b\x2e\xcb\x88\x5e\x51\x40\x86\xbe\x36\x88\x1d\xf9\xe0\x3d\xd7\x7f\x3c\xcc\x31\x97\xba\x8c\x71\x26\xa1\x09\x63\x0a\x1b\xd7\x05\x9b\xe7\xa8\xa1\x1c\xee\x54\x3c\xf2\x74\x8c\xb4\x12\x17\x1a\xb8\xb0\x9f\xfe\x90\xc3\x32\x15\x44\xa9\x23\xe2\x88\x15\xa5\x36\xe8\x0f\xdc\xae\xcf\xec\x07\x38\xfd\xde\xa0\x2b\xcb\x14\x33\xd4\xa3\x21\x2b\x3c\x0a\xcd\x48\x61\x86\x2b\x67\x8b\x5e\xac\x0b\xa1\xd0\x80\x72\xfb\x8f\xab\xcf\x32\x29\xcc\xe2\xb9\x8c\xbc\x6a\x77\x37\x6e\xe0\x4d\x5b\xa3\x8c\x14\xbe\x4a\xe3\x03\x67\x0d\xf9\x1c\xdc\xaa\xfa\xa5\x21\x3e\x04\x5d\xcd\x14\x76\xdb\xdd\xf6\x22\x9d\x74\x82\xef\x2f\x87\xdf\xd7\x0c\x05\xd9\xab\x3e\x99\xe9\xa7\x86\x14\x5e\xca\x62\x0e\x7d\xdd\x77\x9f\x01\x00\x00\xff\xff\x4b\xbb\xe1\xcf\x1a\x02\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 538, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x49, 0x8b, 0xe8, 0x44, 0xe2, 0x76, 0xc5, 0x6d, 0x14, 0xb1, 0x10, 0xc6, 0x1, 0xe4, 0x85, 0x56, 0x8b, 0xa0, 0x49, 0x8c, 0x1b, 0xbc, 0x2d, 0x77, 0xc7, 0xc, 0x44, 0x4d, 0xf8, 0xa2, 0x6d, 0x5}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xbd\x4e\xec\x30\x10\x85\xfb\x3c\xc5\x68\xb7\x76\xae\x6e\x9b\x96\x9a\x0e\xd1\x4f\xec\x93\x64\x58\x67\xc6\xb2\x27\x8b\x78\x7b\xb4\x7f\xb0\x20\x24\x44\xe9\xb1\xbf\x63\x9d\x6f\xf6\xf4\xb4\x80\x14\xfe\x6a\xf5\x40\x56\x50\xd9\xad\x92\x34\xaa\x68\xc5\xb4\xc9\x98\x41\xd3\x69\xa4\x2f\x88\x2e\x3a\x77\x7b\xf2\x05\xe4\x75\x6b\x8e\x44\x91\x69\xdc\x34\x65\x90\xa8\x1b\xf9\x22\x8d\xa2\xe9\x24\xf3\xca\xa5\xef\xb8\xc8\x33\x6a\x13\xd3\x81\x8e\xff\xbb\x83\x68\x1a\xe8\xe1\x7c\xff\xc8\xa5\x5b\xe1\x9c\xd8\x79\xe8\x88\x58\xd5\x9c\x5d\x4c\xdb\xe9\x48\x24\x1a\xf3\x96\xd0\x57\x64\x70\x43\x6f\x05\xda\x16\x99\xbc\x17\xfb\x27\xe3\x1a\x62\xb6\x2d\x85\x95\x95\x67\xa4\x81\x76\x5e\x37\xec\x7e\x47\x1b\xf2\x74\xa3\xc2\x22\xf3\x12\xf8\xc8\x92\x79\x94\x2c\xfe\xf6\x87\x1c\xd1\x39\x23\xa8\x25\x84\x84\x23\xf2\xc9\xdf\x17\xfc\x47\x2c\x56\xb0\x23\x98\xe6\xfb\xbf\x32\x8f\xc8\xd7\xe2\x17\x7f\xdf\xfa\x9e\xfd\x87\xab\xf6\x10\xf9\x62\xfd\x2e\x41\x79\xc5\x40\x9f\x0f\xae\xa3\x56\x38\x62\xa0\x8f\xb0\x20\x3a\x57\xb4\x16\x6e\xdb\xee\xde\x03\x00\x00\xff\xff\x4b\xe9\x81\x95\x05\x02\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 517, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0x48, 0x3c, 0xcc, 0x93, 0xb2, 0xfb, 0xe6, 0xf2, 0xa0, 0xf1, 0xa6, 0x13, 0x30, 0x9e, 0xcf, 0xda, 0xd5, 0xbf, 0xa7, 0x4f, 0xff, 0x2, 0x53, 0x8a, 0x30, 0x75, 0xbe, 0x74, 0xa4, 0x8b, 0x9b}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4f\x6f\xe3\xb6\x13\xbd\xe7\x53\x0c\xfc\xfb\x1d\x5a\x60\x69\x3b\xd9\xed\xb6\x2b\x20\x07\xd7\xf1\x6e\x02\xc4\x49\x10\x07\x1b\xf4\x64\x8c\xa9\xb1\xc5\x9a\x22\xb5\xe4\xd0\x8d\xbe\x7d\x41\xf9\x9f\x2c\x2b\x4e\x0a\xb4\x3e\x25\xe4\xbc\x37\xc3\x99\xe1\xe3\x08\x0b\xf5\x9d\x9c\x57\xd6\x24\x80\x45\xe1\x7b\xab\xf3\xb3\xa5\x32\x69\x02\x57\x54\x68\x5b\xe6\x64\xf8\x2c\x27\xc6\x14\x19\x93\x33\x00\x83\x39\x25\xa0\xcc\xc2\x91\xf7\xc2\x16\xe4\x90\xad\xdb\x6c\xf8\x02\x25\x25\x60\x0b\x32\x3e\x53\x73\x16\x2d\x76\x68\x8c\x65\x64\x65\x8d\x8f\x7c\x00\xd2\x9a\xb9\x5a\x74\x77\xa0\xae\xb2\x3d\x65\xfe\x24\xc9\xa2\x70\xf6\xa5\x6c\xf5\x06\xa0\x8c\xd4\x21\xa5\xae\x23\x4d\xe8\xa9\x81\x9f\xe5\x42\x6a\x1b\x52\x91\xa3\xc1\x05\xa5\x09\x74\xd8\x05\xea\xbc\x0d\xf5\xa4\xe7\x5b\x94\xc8\xd4\x22\x13\xb8\x42\xa5\x71\xa6\xb4\xe2\xf2\x1f\xf0\x28\xb3\xd0\x24\x8c\x4d\x49\xa4\xb4\x22\x1d\xa3\xdf\xc1\x7d\x41\x32\x1e\xdf\x51\xa1\x95\x44\x9f\xc0\xf9\x19\x80\x67\x87\x4c\x8b\x72\x9d\x18\x2e\x0b\x4a\xe0\x91\xa4\x23\x64\x8a\xdb\xa4\x49\xb2\x75\xeb\xed\x1c\x59\x66\xb7\x38\x23\xbd\x49\xe4\x89\xe2\x30\xe5\x85\x46\xa6\x0d\xb2\x56\xcf\xf8\xd3\x07\x24\x27\x68\x00\xb6\x71\x57\x66\x36\xa5\xc9\x41\x48\xf1\xb7\x0c\x33\x72\x86\x98\x7c\xcc\x82\xf5\x09\x68\x65\xc2\xcb\x9e\x3c\x26\xc4\x59\x4d\xdd\x43\xcb\x1c\x3d\x57\x09\xea\x6c\x4c\xd9\xea\xe8\x78\xdf\x28\x00\x02\x96\x14\x4b\x70\x9a\xa3\xb3\xf3\xb5\x0d\x3d\x81\xce\xe8\x45\x79\xf6\xfb\x2d\x9a\xcf\x49\x72\x02\x9d\x3b\x3b\x91\x19\xa5\x41\x53\xa7\xc5\x4b\xc3\x41\x30\x8e\x50\x66\x38\xdb\x5b\xbf\xd7\xcb\xe8\x85\x64\xe0\x1a\x6c\x7f\xbe\x09\x49\x6b\xd2\xd8\x03\x17\xfd\xb7\x63\x30\x96\x85\x23\x4c\xcb\xff\x36\x02\x4f\x6e\xa5\x24\x0d\xa4\xb4\xc1\xf0\xdd\xeb\x2d\x01\x50\x38\x65\x9d\xe2\x72\xa8\xd1\xfb\xb5\xa5\x2f\x3d\x53\xbc\x83\x21\x56\x44\x48\xa7\x58\x49\xd4\x1b\x80\xb4\x86\x51\x19\x72\xb5\xa6\x13\xa7\xda\x6e\x13\x2f\xb9\x5c\x99\x2a\xe0\x31\x79\x8f\x0b\x7a\xb0\x5a\xc9\x32\x81\xaf\xa8\xf5\x0c\xe5\xf2\xc9\xde\xda\x85\xbf\x37\x23\xe7\x0e\x90\x2a\x8f\xc6\x41\xeb\x2d\xe0\x66\x7e\x67\xf9\xc1\x91\x8f\xfa\xd6\xb0\xab\x09\x58\xcf\x3a\xb5\x50\x66\x77\x8e\x66\x70\x49\xbc\x54\xbe\xce\x20\x6d\x9e\xa3\x49\x93\xda\x92\x38\x75\x26\x01\x9e\xd1\xf1\xc1\x8a\x10\x3b\x31\x3d\x58\xef\xfc\xff\xa7\xe7\xc1\xd3\xf0\x7a\x7a\x37\x18\x8f\x26\x0f\x83\xe1\xe8\xe7\x4e\x03\x58\x1d\xa0\x09\xba\x19\x0f\xbe\x1d\x9b\x4a\x34\xe8\xca\x76\xc4\x70\x70\x37\x78\xfc\x63\xda\x0e\xdc\xc8\x9d\x58\xad\x1f\x8e\x26\xf6\x71\x74\x3b\x1a\x4c\x46\xd3\xef\xa3\xc7\xc9\xcd\xfd\xdd\x01\x9c\xcc\xaa\x9e\x99\x7d\xd5\x1b\xa0\x03\x1b\x80\x15\xea\x40\x09\x74\xfa\xdd\x7e\xf7\x5c\x78\x83\x85\xcf\x2c\x77\x5a\x99\x1a\x19\x6a\x63\xfa\xea\x6c\x9e\x34\x36\x00\xe6\x8a\x74\xfa\x48\xf3\xe3\x9d\xcd\xde\x03\x72\x96\xec\xc4\xb3\xdb\x56\xa3\x7d\x18\x55\xea\xda\x8f\x71\xd4\x5d\x19\x56\x0f\x9d\x70\x36\x44\x09\x5c\x7d\xea\xf6\x5b\x39\xeb\x55\x69\xa7\xfe\x11\xb0\xac\x64\xf7\xc8\x05\x69\x6d\xc5\x6e\xf9\xb8\x6f\x1d\x79\x1b\x9c\x24\x7f\x78\x7c\x47\x3f\x02\x79\xf6\xcd\xa4\xc8\x22\x24\x70\xde\xcf\x6b\xcb\x2b\xab\x43\x4e\xe3\xa8\x16\xfe\xb0\xfd\xd7\xd1\xb3\x8b\x77\x28\x15\x12\x0f\xb8\xf2\x08\x58\xa7\xb6\x47\x2c\x7b\xc5\x52\xf5\x24\x8a\xca\xba\x47\x2f\xec\x50\x32\xa5\xbd\x82\xf2\x46\x60\x98\xde\x1b\x5d\x56\xbc\xd4\xe2\x6e\x66\x83\x49\x85\x47\xc1\x76\x49\xe6\x55\x97\x2b\x74\x3d\x17\x4c\xcf\xc7\x67\x96\x7d\x2d\x73\x1b\x01\xc4\xb5\x00\xbe\xc7\xf9\xd6\x75\xd4\x6b\xe1\x66\x28\xd7\x03\xcc\xb1\xbe\xbc\x5a\xa6\x06\xf2\xb8\x4c\xe8\x16\x8d\xe4\x0a\xa1\xed\x82\xad\xe7\x94\x9c\x6b\xec\x78\x92\xc1\x91\xd0\xca\x33\x19\x81\x69\x1a\x55\xe8\x32\xf9\xf2\xf1\xcb\xc7\x86\x25\x6b\x2f\xa4\x2a\x32\x72\xc2\x07\xc5\xe4\x2f\x9f\x6e\x27\xd3\xd1\xf0\xea\x7a\x34\x7d\x9c\x0c\xa6\xcf\x37\x4f\xd7\xd3\xc1\x68\x32\x3d\xbf\xf8\x6d\xfa\x6d\x38\x9e\x4e\xae\x07\x17\xbf\x7c\xfe\xb0\xb7\x1a\x0d\xaf\xde\xb0\x3b\xe2\x19\xfe\x3e\x7c\x17\x4f\xab\xdd\x09\xb6\xc6\xd9\x42\xe1\xd9\x11\xe6\x97\x19\x73\x91\xf4\x7a\xe7\x17\xbf\x76\x2b\x25\x49\x3e\xf7\xfb\xfd\x7e\xaf\x2d\x15\xe4\x58\xcc\x95\xa6\xcb\xaa\x27\x59\xfb\x5e\xe1\xd4\x0a\x99\xe2\xdf\x5d\x79\x24\xd8\x11\xb4\xb1\x10\x4b\x2a\x4f\x60\x97\x54\x6f\x88\xc2\xba\xe6\x6d\xd9\x3d\x8e\x0f\xd6\x71\x02\x8d\x62\x6d\xa7\xb3\x9c\xd8\x29\xe9\xff\xd5\x1b\x0c\xd5\x6c\x98\x5b\x57\x26\xf0\xa9\x3f\x56\xef\xba\xdc\xcd\xfb\x5b\x3b\xef\xeb\x61\xc7\x7c\xbd\x7d\xa3\xd6\x4e\x6b\xd3\xdf\xeb\x1c\xeb\xeb\x5b\x8f\x6c\xbd\x72\xf7\x0a\xe2\x84\x28\xad\xbf\x47\xc6\x58\xd4\xd9\x4e\x48\x98\x62\xca\x7d\xf3\x55\xab\xa6\x37\x89\x62\x16\x4c\xaa\xa9\xd1\x30\xf1\x57\x54\x19\xab\x7a\x6d\x67\xb5\xd7\xb8\xff\xc1\x53\xa6\xfc\x76\x06\x83\x8d\x06\x41\x25\x65\x20\xd1\xc0\x8c\x20\x78\x4a\x81\x2d\x14\xce\xae\x54\x4a\xa0\x52\x32\xac\xb8\x04\x1b\xd8\xc7\x05\xce\x08\x36\x83\x4b\x77\xc7\xfb\xd5\x3a\xa0\x17\xcc\x0b\x4d\x1f\x80\xa3\x93\x63\xd2\xbf\x14\x67\x30\xf0\x3e\xe4\xf4\x68\x35\x3d\x2b\xce\x9e\x69\x76\xb3\xe5\x67\x0b\x18\x38\x8b\xff\x49\x64\xda\x98\x3f\x4f\x20\xc4\x6f\x1e\xb8\x19\x8c\xe1\xfe\xe6\x6a\xb8\x0d\xcc\x01\x9a\x14\x26\x4f\x93\x6e\x23\xf7\xaf\x28\x74\xe1\x6c\xfc\xf8\xa3\x83\x19\xaa\xa5\xb5\x45\x63\x44\x7d\x8a\x2c\xcd\x2e\xdf\xa4\xf9\xe8\x09\x00\xc0\x90\x2a\x32\x07\x9f\xab\x67\x7f\x07\x00\x00\xff\xff\x8f\xdd\x4f\x8f\x0e\x0f\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 3854, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x63, 0x59, 0xbc, 0x4a, 0x9f, 0x56, 0xe, 0x4a, 0x51, 0x4f, 0x64, 0x96, 0x4a, 0x94, 0x4, 0x27, 0x19, 0xa3, 0x4c, 0x57, 0xa0, 0x76, 0xd0, 0xa, 0x5, 0x67, 0x84, 0xee, 0x9a, 0x9e, 0x71}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbf\x8e\xe3\x3c\x0c\xc4\x7b\x3f\xc5\x20\x69\x3f\xfb\xdb\x6d\xdd\xa6\xba\x6a\x9b\xc3\xf6\x8c\xc4\x58\xc4\xc9\xa4\x21\x52\x5e\xe4\xed\x0f\xc9\x26\xf7\xaf\x39\x9c\x2a\x01\x83\xe1\xcc\x6f\x8e\xf8\x5a\xc4\xd1\xd8\xad\xb7\xc4\x10\x87\x5a\x20\x35\xa6\xe0\x8c\xf3\x15\xa7\xf7\xb7\xff\x20\x71\x53\x4c\xeb\x15\xdd\x39\x83\x1c\x84\x64\xeb\xda\x55\x12\x85\x98\x0e\x47\xac\x9c\x0a\xa9\xf8\x8a\x30\x04\xd7\x8a\x28\x7c\xf3\xe3\xa3\x48\x2a\x38\xd5\xee\xc1\xed\x6d\xe3\x46\x61\xed\x67\x68\x18\x3e\x48\x02\x17\x6b\xd3\x70\xc4\x17\x5d\x1a\xbb\x9f\x4c\xa3\x59\xad\xdc\x1e\x75\x1c\xa4\x19\x7d\xcb\xf7\x7f\xfc\xda\x7b\x1a\x68\x93\x77\x6e\x2e\xa6\x33\x92\xe9\x45\x96\xc9\x36\x56\x2f\x72\x89\x49\xec\xff\xfd\x75\xf8\x26\x9a\xe7\x3f\x5b\x0c\x2b\x07\x65\x0a\x9a\x07\x40\x69\xe5\x19\xf2\x99\x3f\x00\xa4\x6a\x71\xc7\xf3\x9b\x0c\x88\xa6\xda\x33\x4f\x8d\x2b\x93\xf3\xef\x11\x72\x5e\xc7\x54\xad\xe7\x71\x25\xa5\x85\xf3\x8c\x43\xb4\xce\x87\xbf\x5b\x9d\xeb\xe5\xe9\x1a\x8b\x2c\x65\xa4\x9d\xa4\xd2\x59\xaa\xc4\xf5\x1f\xee\x88\x2e\x95\x47\xb5\xcc\x63\xe6\x9d\xab\x6d\xdc\x7e\xd8\x3d\x28\xfa\x9d\x64\xff\x9c\xea\x41\x35\x3e\xc0\xed\xb9\x09\xee\x6f\x7f\xee\x79\x78\x99\x5e\xa6\xd7\xd1\x95\x36\x2f\x16\x87\xe1\x7b\x00\x00\x00\xff\xff\x21\x8e\xe4\x75\x36\x02\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 566, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0xa4, 0xb6, 0xc2, 0xef, 0xc, 0x2f, 0x76, 0xde, 0x4f, 0x75, 0x81, 0x92, 0x9b, 0x81, 0xd9, 0x18, 0x6, 0x12, 0xa5, 0x3, 0xfd, 0xc8, 0xe3, 0xe2, 0xe0, 0x6f, 0x3b, 0x5d, 0x90, 0x76, 0x9f}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd0\xbd\x4e\xc3\x40\x0c\xc0\xf1\x3d\x4f\x61\x65\x77\x0a\x12\xd3\xcd\x2c\xcc\x48\xec\x6e\x70\x53\x2b\xc9\xf9\xb0\x9d\x8a\xbe\x3d\x4a\x8a\xa2\xb4\xd0\x05\x31\x25\xba\x8f\xff\xef\xee\x7a\xc9\xef\x09\x5e\x46\xea\xf8\x35\x8c\x69\xac\xa8\xc8\x1b\x9b\x8b\xe6\x04\x32\x8f\x37\x5a\x38\xfb\x51\x0e\xd1\x88\xee\x4e\x8f\x95\x17\x6e\x53\x05\x10\xd4\xf9\xfc\x45\xc8\x34\x72\x82\x76\x98\x3c\xd8\x50\x72\x67\xec\x8e\x5a\xd8\x28\xd4\x2a\x00\x80\x83\xe9\x98\x60\xf9\x05\xb8\xa8\xf5\xb3\xb6\x3d\xdb\x82\xd7\xdf\x33\x97\x52\xbd\x92\x3b\x35\xe9\x24\xe3\xbd\x76\x1a\x28\xd8\xa3\xde\x1c\xe3\x48\xc5\xf4\xf3\x8c\xa6\x53\xf0\x06\xff\xb3\x7d\x1d\x4c\xa7\xa7\xe6\x61\xeb\xf5\xd3\x9e\xd1\xf6\xd4\xe2\xb2\xec\x0e\xb8\xf1\xae\xb9\x8f\x89\xce\xf3\xc3\xfe\x60\x6f\xba\xbf\xdd\x94\x87\x41\x71\xdd\xf8\x6f\xf2\x4d\x77\x95\xbf\x02\x00\x00\xff\xff\x14\xe5\x02\x83\x2d\x02\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 557, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x1a, 0x1b, 0x9f, 0x7e, 0x71, 0xc2, 0x5b, 0xf, 0x67, 0x32, 0x59, 0x96, 0x77, 0x92, 0x8f, 0x79, 0x7, 0x78, 0xfa, 0x3d, 0xf5, 0xa3, 0x84, 0x97, 0x1d, 0x76, 0x2e, 0x88, 0x97, 0x87, 0xe5}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/canary/daemonset.yaml": assetsCanaryDaemonsetYaml,

	"assets/canary/namespace.yaml": assetsCanaryNamespaceYaml,

	"assets/canary/route.yaml": assetsCanaryRouteYaml,

	"assets/canary/service.yaml": assetsCanaryServiceYaml,

	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/0000_90_ingress-operator_03_prometheusrules.yaml": manifests0000_90_ingressOperator_03_prometheusrulesYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"canary": {nil, map[string]*bintree{
			"daemonset.yaml": {assetsCanaryDaemonsetYaml, map[string]*bintree{}},
			"namespace.yaml": {assetsCanaryNamespaceYaml, map[string]*bintree{}},
			"route.yaml":     {assetsCanaryRouteYaml, map[string]*bintree{}},
			"service.yaml":   {assetsCanaryServiceYaml, map[string]*bintree{}},
		}},
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_03_prometheusrules.yaml":       {manifests0000_90_ingressOperator_03_prometheusrulesYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
